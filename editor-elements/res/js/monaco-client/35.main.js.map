{"version":3,"file":"35.main.js","mappings":"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","sources":["webpack://example-client-webpack/webpack/runtime/chunk loaded","webpack://example-client-webpack/webpack/runtime/startup chunk dependencies","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/objects.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/nls.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/platform.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/worker/simpleWorker.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/hash.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/diff/diffChange.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/diff/diff.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/marshallingIds.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/process.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/path.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/uri.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/core/wordHelper.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/languages/linkComputer.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/languages/supports/inplaceReplaceSupport.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/keyCodes.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/languages.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/standalone/standaloneEnums.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/services/editorBaseApi.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/core/wordCharacterClassifier.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/model.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/services/unicodeTextModelHighlighter.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/model/textModelSearch.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/assert.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/diff/linesDiffComputer.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/core/offsetRange.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/core/lineRange.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/core/textLength.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/core/textEdit.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/diff/rangeMapping.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/diff/legacyLinesDiffComputer.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/linesSliceCharSequence.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/diffAlgorithm.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/utils.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/dynamicProgrammingDiffing.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/algorithms/myersDiffAlgorithm.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/computeMovedLines.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/heuristicSequenceOptimizations.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/lineSequence.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/diff/defaultLinesDiffComputer/defaultLinesDiffComputer.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/diff/linesDiffComputers.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/color.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/languages/defaultDocumentColorsComputer.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/services/findSectionHeaders.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/services/editorSimpleWorker.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/editor.worker.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/arrays.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/arraysFind.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/cancellation.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/charCode.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/codiconsUtil.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/collections.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/errors.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/event.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/iterator.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/lifecycle.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/map.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/strings.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/types.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/base/common/uint.js","webpack://example-client-webpack/./node_modules/vscode/vscode/src/vs/editor/common/encodedTokenAttributes.js","webpack://example-client-webpack/webpack/bootstrap","webpack://example-client-webpack/webpack/runtime/define property getters","webpack://example-client-webpack/webpack/runtime/ensure chunk","webpack://example-client-webpack/webpack/runtime/get javascript chunk filename","webpack://example-client-webpack/webpack/runtime/hasOwnProperty shorthand","webpack://example-client-webpack/webpack/runtime/publicPath","webpack://example-client-webpack/webpack/runtime/importScripts chunk loading","webpack://example-client-webpack/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(857).then(next);\n};","import { isUndefinedOrNull, isObject, isTypedArray } from './types.js';\nfunction deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.entries(obj).forEach(([key, value]) => {\n        result[key] = value && typeof value === 'object' ? deepClone(value) : value;\n    });\n    return result;\n}\nfunction deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, ( new Set()));\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (Array.isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (( seen.has(obj))) {\n            throw ( new Error('Cannot clone recursive data-structure'));\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (const i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\nfunction mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        ( Object.keys(source)).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nfunction equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nfunction safeStringify(obj) {\n    const seen = ( new Set());\n    return JSON.stringify(obj, (key, value) => {\n        if (isObject(value) || Array.isArray(value)) {\n            if (( seen.has(value))) {\n                return '[Circular]';\n            }\n            else {\n                seen.add(value);\n            }\n        }\n        if (typeof value === 'bigint') {\n            return `[BigInt ${( value.toString())}]`;\n        }\n        return value;\n    });\n}\nfunction distinct(base, target) {\n    const result = Object.create(null);\n    if (!base || !target) {\n        return result;\n    }\n    const targetKeys = ( Object.keys(target));\n    targetKeys.forEach(k => {\n        const baseValue = base[k];\n        const targetValue = target[k];\n        if (!equals(baseValue, targetValue)) {\n            result[k] = targetValue;\n        }\n    });\n    return result;\n}\nfunction filter(obj, predicate) {\n    const result = Object.create(null);\n    for (const [key, value] of Object.entries(obj)) {\n        if (predicate(key, value)) {\n            result[key] = value;\n        }\n    }\n    return result;\n}\nfunction getAllPropertyNames(obj) {\n    let res = [];\n    while (Object.prototype !== obj) {\n        res = res.concat(Object.getOwnPropertyNames(obj));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return res;\n}\nfunction getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nfunction createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\nfunction mapValues(obj, fn) {\n    const result = {};\n    for (const [key, value] of Object.entries(obj)) {\n        result[key] = fn(value, key);\n    }\n    return result;\n}\nexport { cloneAndChange, createProxyObject, deepClone, deepFreeze, distinct, equals, filter, getAllMethodNames, getAllPropertyNames, mapValues, mixin, safeStringify };\n","let isPseudo = (typeof document !== 'undefined' && document.location && document.location.hash.indexOf('pseudo=true') >= 0);\nfunction _format(message, args) {\n    let result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n            const index = rest[0];\n            const arg = args[index];\n            let result = match;\n            if (typeof arg === 'string') {\n                result = arg;\n            }\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                result = String(arg);\n            }\n            return result;\n        });\n    }\n    if (isPseudo) {\n        result = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n    }\n    return result;\n}\nlet initialized = false;\nlet locale = undefined;\nlet translations = {};\nfunction isInitialized() {\n    return initialized;\n}\nfunction setLocale(_locale, _translations) {\n    initialized = true;\n    locale = _locale;\n    translations = _translations;\n}\nfunction localizeWithPath(path, data, defaultMessage, ...args) {\n    initialized = true;\n    const key = typeof data === 'object' ? data.key : data;\n    const message = (translations[path] ?? {})[key] ?? defaultMessage;\n    return _format(message, args);\n}\nfunction localize2WithPath(path, data, defaultMessage, ...args) {\n    initialized = true;\n    const key = typeof data === 'object' ? data.key : data;\n    const message = (translations[path] ?? {})[key] ?? defaultMessage;\n    return {\n        value: _format(message, args),\n        original: _format(defaultMessage, args)\n    };\n}\nfunction getConfiguredDefaultLocale(_) {\n    return locale;\n}\nexport { getConfiguredDefaultLocale, isInitialized, localize2WithPath, localizeWithPath, setLocale };\n","import { getConfiguredDefaultLocale } from '../../nls.js';\nconst LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _platformLocale = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\nconst $globalThis = globalThis;\nlet nodeProcess = undefined;\nif (typeof $globalThis.vscode !== 'undefined' && typeof $globalThis.vscode.process !== 'undefined') {\n    nodeProcess = $globalThis.vscode.process;\n}\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\nif (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            const resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            _platformLocale = nlsConfig.osLocale;\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\nelse if (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isMobile = _userAgent?.indexOf('Mobi') >= 0;\n    _isWeb = true;\n    const configuredLocale = getConfiguredDefaultLocale();\n    _locale = configuredLocale || LANGUAGE_DEFAULT;\n    _language = _locale;\n    _platformLocale = navigator.language;\n}\nelse {\n    console.error('Unable to resolve platform.');\n}\nvar Platform;\n( ((function(Platform) {\n    Platform[Platform[\"Web\"] = 0] = \"Web\";\n    Platform[Platform[\"Mac\"] = 1] = \"Mac\";\n    Platform[Platform[\"Linux\"] = 2] = \"Linux\";\n    Platform[Platform[\"Windows\"] = 3] = \"Windows\";\n})(Platform || (Platform = {}))));\nfunction PlatformToString(platform) {\n    switch (platform) {\n        case Platform.Web: return 'Web';\n        case Platform.Mac: return 'Mac';\n        case Platform.Linux: return 'Linux';\n        case Platform.Windows: return 'Windows';\n    }\n}\nlet _platform = Platform.Web;\nif (_isMacintosh) {\n    _platform = Platform.Mac;\n}\nelse if (_isWindows) {\n    _platform = Platform.Windows;\n}\nelse if (_isLinux) {\n    _platform = Platform.Linux;\n}\nconst isWindows = _isWindows;\nconst isMacintosh = _isMacintosh;\nconst isLinux = _isLinux;\nconst isLinuxSnap = _isLinuxSnap;\nconst isNative = _isNative;\nconst isWeb = _isWeb;\nconst isWebWorker = (_isWeb && typeof $globalThis.importScripts === 'function');\nconst webWorkerOrigin = isWebWorker ? $globalThis.origin : undefined;\nconst isIOS = _isIOS;\nconst isMobile = _isMobile;\nconst isCI = _isCI;\nconst platform = _platform;\nconst userAgent = _userAgent;\nconst language = _language;\nvar Language;\n( ((function(Language) {\n    function value() {\n        return language;\n    }\n    Language.value = value;\n    function isDefaultVariant() {\n        if (language.length === 2) {\n            return language === 'en';\n        }\n        else if (language.length >= 3) {\n            return language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n        }\n        else {\n            return false;\n        }\n    }\n    Language.isDefaultVariant = isDefaultVariant;\n    function isDefault() {\n        return language === 'en';\n    }\n    Language.isDefault = isDefault;\n})(Language || (Language = {}))));\nconst locale = _locale;\nconst platformLocale = _platformLocale;\nconst setTimeout0IsFaster = (typeof $globalThis.postMessage === 'function' && !$globalThis.importScripts);\nconst setTimeout0 = (() => {\n    if (setTimeout0IsFaster) {\n        const pending = [];\n        $globalThis.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            $globalThis.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nvar OperatingSystem;\n( ((function(OperatingSystem) {\n    OperatingSystem[OperatingSystem[\"Windows\"] = 1] = \"Windows\";\n    OperatingSystem[OperatingSystem[\"Macintosh\"] = 2] = \"Macintosh\";\n    OperatingSystem[OperatingSystem[\"Linux\"] = 3] = \"Linux\";\n})(OperatingSystem || (OperatingSystem = {}))));\nconst OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nfunction isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = ( (new Uint8Array(2)));\n        test[0] = 1;\n        test[1] = 2;\n        const view = ( (new Uint16Array(test.buffer)));\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nconst isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nconst isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nconst isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nconst isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nconst isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\nexport { LANGUAGE_DEFAULT, Language, OS, OperatingSystem, Platform, PlatformToString, isAndroid, isCI, isChrome, isEdge, isFirefox, isIOS, isLinux, isLinuxSnap, isLittleEndian, isMacintosh, isMobile, isNative, isSafari, isWeb, isWebWorker, isWindows, language, locale, platform, platformLocale, setTimeout0, setTimeout0IsFaster, userAgent, webWorkerOrigin };\n","import { transformErrorForSerialization } from '../errors.js';\nimport { Emitter } from '../event.js';\nimport { Disposable } from '../lifecycle.js';\nimport { getAllMethodNames } from '../objects.js';\nimport { isWeb } from '../platform.js';\nimport { isUpperAsciiLetter } from '../strings.js';\nconst INITIALIZE = '$initialize';\nlet webWorkerWarningLogged = false;\nfunction logOnceWebWorkerWarning(err) {\n    if (!isWeb) {\n        return;\n    }\n    if (!webWorkerWarningLogged) {\n        webWorkerWarningLogged = true;\n        console.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n    }\n    console.warn(err.message);\n}\nvar MessageType;\n( (function(MessageType) {\n    MessageType[MessageType[\"Request\"] = 0] = \"Request\";\n    MessageType[MessageType[\"Reply\"] = 1] = \"Reply\";\n    MessageType[MessageType[\"SubscribeEvent\"] = 2] = \"SubscribeEvent\";\n    MessageType[MessageType[\"Event\"] = 3] = \"Event\";\n    MessageType[MessageType[\"UnsubscribeEvent\"] = 4] = \"UnsubscribeEvent\";\n})(MessageType || (MessageType = {})));\nclass RequestMessage {\n    constructor(vsWorker, req, method, args) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.method = method;\n        this.args = args;\n        this.type = MessageType.Request;\n    }\n}\nclass ReplyMessage {\n    constructor(vsWorker, seq, res, err) {\n        this.vsWorker = vsWorker;\n        this.seq = seq;\n        this.res = res;\n        this.err = err;\n        this.type = MessageType.Reply;\n    }\n}\nclass SubscribeEventMessage {\n    constructor(vsWorker, req, eventName, arg) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.eventName = eventName;\n        this.arg = arg;\n        this.type = MessageType.SubscribeEvent;\n    }\n}\nclass EventMessage {\n    constructor(vsWorker, req, event) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.event = event;\n        this.type = MessageType.Event;\n    }\n}\nclass UnsubscribeEventMessage {\n    constructor(vsWorker, req) {\n        this.vsWorker = vsWorker;\n        this.req = req;\n        this.type = MessageType.UnsubscribeEvent;\n    }\n}\nclass SimpleWorkerProtocol {\n    constructor(handler) {\n        this._workerId = -1;\n        this._handler = handler;\n        this._lastSentReq = 0;\n        this._pendingReplies = Object.create(null);\n        this._pendingEmitters = ( new Map());\n        this._pendingEvents = ( new Map());\n    }\n    setWorkerId(workerId) {\n        this._workerId = workerId;\n    }\n    sendMessage(method, args) {\n        const req = String(++this._lastSentReq);\n        return ( new Promise((resolve, reject) => {\n            this._pendingReplies[req] = {\n                resolve: resolve,\n                reject: reject\n            };\n            this._send(( new RequestMessage(this._workerId, req, method, args)));\n        }));\n    }\n    listen(eventName, arg) {\n        let req = null;\n        const emitter = ( new Emitter({\n            onWillAddFirstListener: () => {\n                req = String(++this._lastSentReq);\n                this._pendingEmitters.set(req, emitter);\n                this._send(( new SubscribeEventMessage(this._workerId, req, eventName, arg)));\n            },\n            onDidRemoveLastListener: () => {\n                this._pendingEmitters.delete(req);\n                this._send(( new UnsubscribeEventMessage(this._workerId, req)));\n                req = null;\n            }\n        }));\n        return emitter.event;\n    }\n    handleMessage(message) {\n        if (!message || !message.vsWorker) {\n            return;\n        }\n        if (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n            return;\n        }\n        this._handleMessage(message);\n    }\n    _handleMessage(msg) {\n        switch (msg.type) {\n            case MessageType.Reply:\n                return this._handleReplyMessage(msg);\n            case MessageType.Request:\n                return this._handleRequestMessage(msg);\n            case MessageType.SubscribeEvent:\n                return this._handleSubscribeEventMessage(msg);\n            case MessageType.Event:\n                return this._handleEventMessage(msg);\n            case MessageType.UnsubscribeEvent:\n                return this._handleUnsubscribeEventMessage(msg);\n        }\n    }\n    _handleReplyMessage(replyMessage) {\n        if (!this._pendingReplies[replyMessage.seq]) {\n            console.warn('Got reply to unknown seq');\n            return;\n        }\n        const reply = this._pendingReplies[replyMessage.seq];\n        delete this._pendingReplies[replyMessage.seq];\n        if (replyMessage.err) {\n            let err = replyMessage.err;\n            if (replyMessage.err.$isError) {\n                err = ( new Error());\n                err.name = replyMessage.err.name;\n                err.message = replyMessage.err.message;\n                err.stack = replyMessage.err.stack;\n            }\n            reply.reject(err);\n            return;\n        }\n        reply.resolve(replyMessage.res);\n    }\n    _handleRequestMessage(requestMessage) {\n        const req = requestMessage.req;\n        const result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n        result.then((r) => {\n            this._send(( new ReplyMessage(this._workerId, req, r, undefined)));\n        }, (e) => {\n            if (e.detail instanceof Error) {\n                e.detail = transformErrorForSerialization(e.detail);\n            }\n            this._send(( new ReplyMessage(this._workerId, req, undefined, transformErrorForSerialization(e))));\n        });\n    }\n    _handleSubscribeEventMessage(msg) {\n        const req = msg.req;\n        const disposable = this._handler.handleEvent(msg.eventName, msg.arg)((event) => {\n            this._send(( new EventMessage(this._workerId, req, event)));\n        });\n        this._pendingEvents.set(req, disposable);\n    }\n    _handleEventMessage(msg) {\n        if (!( this._pendingEmitters.has(msg.req))) {\n            console.warn('Got event for unknown req');\n            return;\n        }\n        this._pendingEmitters.get(msg.req).fire(msg.event);\n    }\n    _handleUnsubscribeEventMessage(msg) {\n        if (!( this._pendingEvents.has(msg.req))) {\n            console.warn('Got unsubscribe for unknown req');\n            return;\n        }\n        this._pendingEvents.get(msg.req).dispose();\n        this._pendingEvents.delete(msg.req);\n    }\n    _send(msg) {\n        const transfer = [];\n        if (msg.type === MessageType.Request) {\n            for (let i = 0; i < msg.args.length; i++) {\n                if (msg.args[i] instanceof ArrayBuffer) {\n                    transfer.push(msg.args[i]);\n                }\n            }\n        }\n        else if (msg.type === MessageType.Reply) {\n            if (msg.res instanceof ArrayBuffer) {\n                transfer.push(msg.res);\n            }\n        }\n        this._handler.sendMessage(msg, transfer);\n    }\n}\nclass SimpleWorkerClient extends Disposable {\n    constructor(workerFactory, moduleId, host) {\n        super();\n        let lazyProxyReject = null;\n        this._worker = this._register(workerFactory.create('vs/base/common/worker/simpleWorker', (msg) => {\n            this._protocol.handleMessage(msg);\n        }, (err) => {\n            lazyProxyReject?.(err);\n        }));\n        this._protocol = ( new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                this._worker.postMessage(msg, transfer);\n            },\n            handleMessage: (method, args) => {\n                if (typeof host[method] !== 'function') {\n                    return Promise.reject(( new Error('Missing method ' + method + ' on main thread host.')));\n                }\n                try {\n                    return Promise.resolve(host[method].apply(host, args));\n                }\n                catch (e) {\n                    return Promise.reject(e);\n                }\n            },\n            handleEvent: (eventName, arg) => {\n                if (propertyIsDynamicEvent(eventName)) {\n                    const event = host[eventName].call(host, arg);\n                    if (typeof event !== 'function') {\n                        throw ( new Error(`Missing dynamic event ${eventName} on main thread host.`));\n                    }\n                    return event;\n                }\n                if (propertyIsEvent(eventName)) {\n                    const event = host[eventName];\n                    if (typeof event !== 'function') {\n                        throw ( new Error(`Missing event ${eventName} on main thread host.`));\n                    }\n                    return event;\n                }\n                throw ( new Error(`Malformed event name ${eventName}`));\n            }\n        }));\n        this._protocol.setWorkerId(this._worker.getId());\n        let loaderConfiguration = null;\n        if (typeof globalThis.requirejs !== 'undefined') {\n            loaderConfiguration = globalThis.requirejs.s.contexts._.config;\n        }\n        const hostMethods = getAllMethodNames(host);\n        this._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n            this._worker.getId(),\n            JSON.parse(JSON.stringify(loaderConfiguration)),\n            moduleId,\n            hostMethods,\n        ]);\n        const proxyMethodRequest = (method, args) => {\n            return this._request(method, args);\n        };\n        const proxyListen = (eventName, arg) => {\n            return this._protocol.listen(eventName, arg);\n        };\n        this._lazyProxy = ( new Promise((resolve, reject) => {\n            lazyProxyReject = reject;\n            this._onModuleLoaded.then((availableMethods) => {\n                resolve(createProxyObject(availableMethods, proxyMethodRequest, proxyListen));\n            }, (e) => {\n                reject(e);\n                this._onError('Worker failed to load ' + moduleId, e);\n            });\n        }));\n    }\n    getProxyObject() {\n        return this._lazyProxy;\n    }\n    _request(method, args) {\n        return ( new Promise((resolve, reject) => {\n            this._onModuleLoaded.then(() => {\n                this._protocol.sendMessage(method, args).then(resolve, reject);\n            }, reject);\n        }));\n    }\n    _onError(message, error) {\n        console.error(message);\n        console.info(error);\n    }\n}\nfunction propertyIsEvent(name) {\n    return name[0] === 'o' && name[1] === 'n' && isUpperAsciiLetter(name.charCodeAt(2));\n}\nfunction propertyIsDynamicEvent(name) {\n    return /^onDynamic/.test(name) && isUpperAsciiLetter(name.charCodeAt(9));\n}\nfunction createProxyObject(methodNames, invoke, proxyListen) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const createProxyDynamicEvent = (eventName) => {\n        return function (arg) {\n            return proxyListen(eventName, arg);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        if (propertyIsDynamicEvent(methodName)) {\n            result[methodName] = createProxyDynamicEvent(methodName);\n            continue;\n        }\n        if (propertyIsEvent(methodName)) {\n            result[methodName] = proxyListen(methodName, undefined);\n            continue;\n        }\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\nclass SimpleWorkerServer {\n    constructor(postMessage, requestHandlerFactory) {\n        this._requestHandlerFactory = requestHandlerFactory;\n        this._requestHandler = null;\n        this._protocol = ( new SimpleWorkerProtocol({\n            sendMessage: (msg, transfer) => {\n                postMessage(msg, transfer);\n            },\n            handleMessage: (method, args) => this._handleMessage(method, args),\n            handleEvent: (eventName, arg) => this._handleEvent(eventName, arg)\n        }));\n    }\n    onmessage(msg) {\n        this._protocol.handleMessage(msg);\n    }\n    _handleMessage(method, args) {\n        if (method === INITIALIZE) {\n            return this.initialize(args[0], args[1], args[2], args[3]);\n        }\n        if (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n            return Promise.reject(( new Error('Missing requestHandler or method: ' + method)));\n        }\n        try {\n            return Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n    _handleEvent(eventName, arg) {\n        if (!this._requestHandler) {\n            throw ( new Error(`Missing requestHandler`));\n        }\n        if (propertyIsDynamicEvent(eventName)) {\n            const event = this._requestHandler[eventName].call(this._requestHandler, arg);\n            if (typeof event !== 'function') {\n                throw ( new Error(`Missing dynamic event ${eventName} on request handler.`));\n            }\n            return event;\n        }\n        if (propertyIsEvent(eventName)) {\n            const event = this._requestHandler[eventName];\n            if (typeof event !== 'function') {\n                throw ( new Error(`Missing event ${eventName} on request handler.`));\n            }\n            return event;\n        }\n        throw ( new Error(`Malformed event name ${eventName}`));\n    }\n    initialize(workerId, loaderConfig, moduleId, hostMethods) {\n        this._protocol.setWorkerId(workerId);\n        const proxyMethodRequest = (method, args) => {\n            return this._protocol.sendMessage(method, args);\n        };\n        const proxyListen = (eventName, arg) => {\n            return this._protocol.listen(eventName, arg);\n        };\n        const hostProxy = createProxyObject(hostMethods, proxyMethodRequest, proxyListen);\n        if (this._requestHandlerFactory) {\n            this._requestHandler = this._requestHandlerFactory(hostProxy);\n            return Promise.resolve(getAllMethodNames(this._requestHandler));\n        }\n        if (loaderConfig) {\n            if (typeof loaderConfig.baseUrl !== 'undefined') {\n                delete loaderConfig['baseUrl'];\n            }\n            if (typeof loaderConfig.paths !== 'undefined') {\n                if (typeof loaderConfig.paths.vs !== 'undefined') {\n                    delete loaderConfig.paths['vs'];\n                }\n            }\n            if (typeof loaderConfig.trustedTypesPolicy !== 'undefined') {\n                delete loaderConfig['trustedTypesPolicy'];\n            }\n            loaderConfig.catchError = true;\n            globalThis.require.config(loaderConfig);\n        }\n        return ( new Promise((resolve, reject) => {\n            const req = undefined;\n            req([moduleId], (module) => {\n                this._requestHandler = module.create(hostProxy);\n                if (!this._requestHandler) {\n                    reject(( new Error(`No RequestHandler!`)));\n                    return;\n                }\n                resolve(getAllMethodNames(this._requestHandler));\n            }, reject);\n        }));\n    }\n}\nexport { SimpleWorkerClient, SimpleWorkerServer, logOnceWebWorkerWarning };\n","import { isHighSurrogate, isLowSurrogate, computeCodePoint } from './strings.js';\nfunction hash(obj) {\n    return doHash(obj, 0);\n}\nfunction doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nfunction numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0;\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nfunction stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return ( Object.keys(obj)).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nclass Hasher {\n    constructor() {\n        this._value = 0;\n    }\n    get value() {\n        return this._value;\n    }\n    hash(obj) {\n        this._value = doHash(obj, this._value);\n        return this._value;\n    }\n}\nvar SHA1Constant;\n( (function(SHA1Constant) {\n    SHA1Constant[SHA1Constant[\"BLOCK_SIZE\"] = 64] = \"BLOCK_SIZE\";\n    SHA1Constant[SHA1Constant[\"UNICODE_REPLACEMENT\"] = 65533] = \"UNICODE_REPLACEMENT\";\n})(SHA1Constant || (SHA1Constant = {})));\nfunction leftRotate(value, bits, totalBits = 32) {\n    const delta = totalBits - bits;\n    const mask = ~((1 << delta) - 1);\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nfunction toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return ( Array.from(( new Uint8Array(bufferOrValue))).map(b => ( b.toString(16)).padStart(2, '0'))).join('');\n    }\n    return leftPad(( (bufferOrValue >>> 0).toString(16)), bitsize / 4);\n}\nclass StringSHA1 {\n    static { this._bigBlock32 = ( new DataView(( new ArrayBuffer(320)))); }\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = ( new Uint8Array(SHA1Constant.BLOCK_SIZE + 3 ));\n        this._buffDV = ( new DataView(this._buff.buffer));\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        codePoint = SHA1Constant.UNICODE_REPLACEMENT;\n                    }\n                }\n                else {\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (isLowSurrogate(charCode)) {\n                codePoint = SHA1Constant.UNICODE_REPLACEMENT;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= SHA1Constant.BLOCK_SIZE) {\n            this._step();\n            buffLen -= SHA1Constant.BLOCK_SIZE;\n            this._totalLen += SHA1Constant.BLOCK_SIZE;\n            buff[0] = buff[SHA1Constant.BLOCK_SIZE + 0];\n            buff[1] = buff[SHA1Constant.BLOCK_SIZE + 1];\n            buff[2] = buff[SHA1Constant.BLOCK_SIZE + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, SHA1Constant.UNICODE_REPLACEMENT);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 ; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 ; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\nexport { Hasher, StringSHA1, doHash, hash, numberHash, stringHash, toHexString };\n","class DiffChange {\n    constructor(originalStart, originalLength, modifiedStart, modifiedLength) {\n        this.originalStart = originalStart;\n        this.originalLength = originalLength;\n        this.modifiedStart = modifiedStart;\n        this.modifiedLength = modifiedLength;\n    }\n    getOriginalEnd() {\n        return this.originalStart + this.originalLength;\n    }\n    getModifiedEnd() {\n        return this.modifiedStart + this.modifiedLength;\n    }\n}\nexport { DiffChange };\n","import { DiffChange } from './diffChange.js';\nimport { stringHash } from '../hash.js';\nimport { Constants } from '../uint.js';\nclass StringDiffSequence {\n    constructor(source) {\n        this.source = source;\n    }\n    getElements() {\n        const source = this.source;\n        const characters = ( new Int32Array(source.length));\n        for (let i = 0, len = source.length; i < len; i++) {\n            characters[i] = source.charCodeAt(i);\n        }\n        return characters;\n    }\n}\nfunction stringDiff(original, modified, pretty) {\n    return ( new LcsDiff(( new StringDiffSequence(original)), ( new StringDiffSequence(modified)))).ComputeDiff(pretty).changes;\n}\nclass Debug {\n    static Assert(condition, message) {\n        if (!condition) {\n            throw ( new Error(message));\n        }\n    }\n}\nclass MyArray {\n    static Copy(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n    static Copy2(sourceArray, sourceIndex, destinationArray, destinationIndex, length) {\n        for (let i = 0; i < length; i++) {\n            destinationArray[destinationIndex + i] = sourceArray[sourceIndex + i];\n        }\n    }\n}\nvar LocalConstants;\n( (function(LocalConstants) {\n    LocalConstants[LocalConstants[\"MaxDifferencesHistory\"] = 1447] = \"MaxDifferencesHistory\";\n})(LocalConstants || (LocalConstants = {})));\nclass DiffChangeHelper {\n    constructor() {\n        this.m_changes = [];\n        this.m_originalStart = Constants.MAX_SAFE_SMALL_INTEGER;\n        this.m_modifiedStart = Constants.MAX_SAFE_SMALL_INTEGER;\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n    }\n    MarkNextChange() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            this.m_changes.push(( new DiffChange(\n                this.m_originalStart,\n                this.m_originalCount,\n                this.m_modifiedStart,\n                this.m_modifiedCount\n            )));\n        }\n        this.m_originalCount = 0;\n        this.m_modifiedCount = 0;\n        this.m_originalStart = Constants.MAX_SAFE_SMALL_INTEGER;\n        this.m_modifiedStart = Constants.MAX_SAFE_SMALL_INTEGER;\n    }\n    AddOriginalElement(originalIndex, modifiedIndex) {\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_originalCount++;\n    }\n    AddModifiedElement(originalIndex, modifiedIndex) {\n        this.m_originalStart = Math.min(this.m_originalStart, originalIndex);\n        this.m_modifiedStart = Math.min(this.m_modifiedStart, modifiedIndex);\n        this.m_modifiedCount++;\n    }\n    getChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            this.MarkNextChange();\n        }\n        return this.m_changes;\n    }\n    getReverseChanges() {\n        if (this.m_originalCount > 0 || this.m_modifiedCount > 0) {\n            this.MarkNextChange();\n        }\n        this.m_changes.reverse();\n        return this.m_changes;\n    }\n}\nclass LcsDiff {\n    constructor(originalSequence, modifiedSequence, continueProcessingPredicate = null) {\n        this.ContinueProcessingPredicate = continueProcessingPredicate;\n        this._originalSequence = originalSequence;\n        this._modifiedSequence = modifiedSequence;\n        const [originalStringElements, originalElementsOrHash, originalHasStrings] = LcsDiff._getElements(originalSequence);\n        const [modifiedStringElements, modifiedElementsOrHash, modifiedHasStrings] = LcsDiff._getElements(modifiedSequence);\n        this._hasStrings = (originalHasStrings && modifiedHasStrings);\n        this._originalStringElements = originalStringElements;\n        this._originalElementsOrHash = originalElementsOrHash;\n        this._modifiedStringElements = modifiedStringElements;\n        this._modifiedElementsOrHash = modifiedElementsOrHash;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n    }\n    static _isStringArray(arr) {\n        return (arr.length > 0 && typeof arr[0] === 'string');\n    }\n    static _getElements(sequence) {\n        const elements = sequence.getElements();\n        if (LcsDiff._isStringArray(elements)) {\n            const hashes = ( new Int32Array(elements.length));\n            for (let i = 0, len = elements.length; i < len; i++) {\n                hashes[i] = stringHash(elements[i], 0);\n            }\n            return [elements, hashes, true];\n        }\n        if (elements instanceof Int32Array) {\n            return [[], elements, false];\n        }\n        return [[], ( new Int32Array(elements)), false];\n    }\n    ElementsAreEqual(originalIndex, newIndex) {\n        if (this._originalElementsOrHash[originalIndex] !== this._modifiedElementsOrHash[newIndex]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[originalIndex] === this._modifiedStringElements[newIndex] : true);\n    }\n    ElementsAreStrictEqual(originalIndex, newIndex) {\n        if (!this.ElementsAreEqual(originalIndex, newIndex)) {\n            return false;\n        }\n        const originalElement = LcsDiff._getStrictElement(this._originalSequence, originalIndex);\n        const modifiedElement = LcsDiff._getStrictElement(this._modifiedSequence, newIndex);\n        return (originalElement === modifiedElement);\n    }\n    static _getStrictElement(sequence, index) {\n        if (typeof sequence.getStrictElement === 'function') {\n            return sequence.getStrictElement(index);\n        }\n        return null;\n    }\n    OriginalElementsAreEqual(index1, index2) {\n        if (this._originalElementsOrHash[index1] !== this._originalElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._originalStringElements[index1] === this._originalStringElements[index2] : true);\n    }\n    ModifiedElementsAreEqual(index1, index2) {\n        if (this._modifiedElementsOrHash[index1] !== this._modifiedElementsOrHash[index2]) {\n            return false;\n        }\n        return (this._hasStrings ? this._modifiedStringElements[index1] === this._modifiedStringElements[index2] : true);\n    }\n    ComputeDiff(pretty) {\n        return this._ComputeDiff(0, this._originalElementsOrHash.length - 1, 0, this._modifiedElementsOrHash.length - 1, pretty);\n    }\n    _ComputeDiff(originalStart, originalEnd, modifiedStart, modifiedEnd, pretty) {\n        const quitEarlyArr = [false];\n        let changes = this.ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr);\n        if (pretty) {\n            changes = this.PrettifyChanges(changes);\n        }\n        return {\n            quitEarly: quitEarlyArr[0],\n            changes: changes\n        };\n    }\n    ComputeDiffRecursive(originalStart, originalEnd, modifiedStart, modifiedEnd, quitEarlyArr) {\n        quitEarlyArr[0] = false;\n        while (originalStart <= originalEnd && modifiedStart <= modifiedEnd && this.ElementsAreEqual(originalStart, modifiedStart)) {\n            originalStart++;\n            modifiedStart++;\n        }\n        while (originalEnd >= originalStart && modifiedEnd >= modifiedStart && this.ElementsAreEqual(originalEnd, modifiedEnd)) {\n            originalEnd--;\n            modifiedEnd--;\n        }\n        if (originalStart > originalEnd || modifiedStart > modifiedEnd) {\n            let changes;\n            if (modifiedStart <= modifiedEnd) {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                changes = [\n                    ( new DiffChange(originalStart, 0, modifiedStart, modifiedEnd - modifiedStart + 1))\n                ];\n            }\n            else if (originalStart <= originalEnd) {\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                changes = [\n                    ( new DiffChange(originalStart, originalEnd - originalStart + 1, modifiedStart, 0))\n                ];\n            }\n            else {\n                Debug.Assert(originalStart === originalEnd + 1, 'originalStart should only be one more than originalEnd');\n                Debug.Assert(modifiedStart === modifiedEnd + 1, 'modifiedStart should only be one more than modifiedEnd');\n                changes = [];\n            }\n            return changes;\n        }\n        const midOriginalArr = [0];\n        const midModifiedArr = [0];\n        const result = this.ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr);\n        const midOriginal = midOriginalArr[0];\n        const midModified = midModifiedArr[0];\n        if (result !== null) {\n            return result;\n        }\n        else if (!quitEarlyArr[0]) {\n            const leftChanges = this.ComputeDiffRecursive(originalStart, midOriginal, modifiedStart, midModified, quitEarlyArr);\n            let rightChanges = [];\n            if (!quitEarlyArr[0]) {\n                rightChanges = this.ComputeDiffRecursive(midOriginal + 1, originalEnd, midModified + 1, modifiedEnd, quitEarlyArr);\n            }\n            else {\n                rightChanges = [\n                    ( new DiffChange(\n                        midOriginal + 1,\n                        originalEnd - (midOriginal + 1) + 1,\n                        midModified + 1,\n                        modifiedEnd - (midModified + 1) + 1\n                    ))\n                ];\n            }\n            return this.ConcatenateChanges(leftChanges, rightChanges);\n        }\n        return [\n            ( new DiffChange(\n                originalStart,\n                originalEnd - originalStart + 1,\n                modifiedStart,\n                modifiedEnd - modifiedStart + 1\n            ))\n        ];\n    }\n    WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr) {\n        let forwardChanges = null;\n        let reverseChanges = null;\n        let changeHelper = ( new DiffChangeHelper());\n        let diagonalMin = diagonalForwardStart;\n        let diagonalMax = diagonalForwardEnd;\n        let diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalForwardOffset;\n        let lastOriginalIndex = Constants.MIN_SAFE_SMALL_INTEGER;\n        let historyIndex = this.m_forwardHistory.length - 1;\n        do {\n            const diagonal = diagonalRelative + diagonalForwardBase;\n            if (diagonal === diagonalMin || (diagonal < diagonalMax && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                originalIndex = forwardPoints[diagonal + 1];\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex;\n                changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex);\n                diagonalRelative = (diagonal + 1) - diagonalForwardBase;\n            }\n            else {\n                originalIndex = forwardPoints[diagonal - 1] + 1;\n                modifiedIndex = originalIndex - diagonalRelative - diagonalForwardOffset;\n                if (originalIndex < lastOriginalIndex) {\n                    changeHelper.MarkNextChange();\n                }\n                lastOriginalIndex = originalIndex - 1;\n                changeHelper.AddOriginalElement(originalIndex, modifiedIndex + 1);\n                diagonalRelative = (diagonal - 1) - diagonalForwardBase;\n            }\n            if (historyIndex >= 0) {\n                forwardPoints = this.m_forwardHistory[historyIndex];\n                diagonalForwardBase = forwardPoints[0];\n                diagonalMin = 1;\n                diagonalMax = forwardPoints.length - 1;\n            }\n        } while (--historyIndex >= -1);\n        forwardChanges = changeHelper.getReverseChanges();\n        if (quitEarlyArr[0]) {\n            let originalStartPoint = midOriginalArr[0] + 1;\n            let modifiedStartPoint = midModifiedArr[0] + 1;\n            if (forwardChanges !== null && forwardChanges.length > 0) {\n                const lastForwardChange = forwardChanges[forwardChanges.length - 1];\n                originalStartPoint = Math.max(originalStartPoint, lastForwardChange.getOriginalEnd());\n                modifiedStartPoint = Math.max(modifiedStartPoint, lastForwardChange.getModifiedEnd());\n            }\n            reverseChanges = [\n                ( new DiffChange(\n                    originalStartPoint,\n                    originalEnd - originalStartPoint + 1,\n                    modifiedStartPoint,\n                    modifiedEnd - modifiedStartPoint + 1\n                ))\n            ];\n        }\n        else {\n            changeHelper = ( new DiffChangeHelper());\n            diagonalMin = diagonalReverseStart;\n            diagonalMax = diagonalReverseEnd;\n            diagonalRelative = (midOriginalArr[0] - midModifiedArr[0]) - diagonalReverseOffset;\n            lastOriginalIndex = Constants.MAX_SAFE_SMALL_INTEGER;\n            historyIndex = (deltaIsEven) ? this.m_reverseHistory.length - 1 : this.m_reverseHistory.length - 2;\n            do {\n                const diagonal = diagonalRelative + diagonalReverseBase;\n                if (diagonal === diagonalMin || (diagonal < diagonalMax && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex + 1;\n                    changeHelper.AddOriginalElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal + 1) - diagonalReverseBase;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                    modifiedIndex = originalIndex - diagonalRelative - diagonalReverseOffset;\n                    if (originalIndex > lastOriginalIndex) {\n                        changeHelper.MarkNextChange();\n                    }\n                    lastOriginalIndex = originalIndex;\n                    changeHelper.AddModifiedElement(originalIndex + 1, modifiedIndex + 1);\n                    diagonalRelative = (diagonal - 1) - diagonalReverseBase;\n                }\n                if (historyIndex >= 0) {\n                    reversePoints = this.m_reverseHistory[historyIndex];\n                    diagonalReverseBase = reversePoints[0];\n                    diagonalMin = 1;\n                    diagonalMax = reversePoints.length - 1;\n                }\n            } while (--historyIndex >= -1);\n            reverseChanges = changeHelper.getChanges();\n        }\n        return this.ConcatenateChanges(forwardChanges, reverseChanges);\n    }\n    ComputeRecursionPoint(originalStart, originalEnd, modifiedStart, modifiedEnd, midOriginalArr, midModifiedArr, quitEarlyArr) {\n        let originalIndex = 0, modifiedIndex = 0;\n        let diagonalForwardStart = 0, diagonalForwardEnd = 0;\n        let diagonalReverseStart = 0, diagonalReverseEnd = 0;\n        originalStart--;\n        modifiedStart--;\n        midOriginalArr[0] = 0;\n        midModifiedArr[0] = 0;\n        this.m_forwardHistory = [];\n        this.m_reverseHistory = [];\n        const maxDifferences = (originalEnd - originalStart) + (modifiedEnd - modifiedStart);\n        const numDiagonals = maxDifferences + 1;\n        const forwardPoints = ( new Int32Array(numDiagonals));\n        const reversePoints = ( new Int32Array(numDiagonals));\n        const diagonalForwardBase = (modifiedEnd - modifiedStart);\n        const diagonalReverseBase = (originalEnd - originalStart);\n        const diagonalForwardOffset = (originalStart - modifiedStart);\n        const diagonalReverseOffset = (originalEnd - modifiedEnd);\n        const delta = diagonalReverseBase - diagonalForwardBase;\n        const deltaIsEven = (delta % 2 === 0);\n        forwardPoints[diagonalForwardBase] = originalStart;\n        reversePoints[diagonalReverseBase] = originalEnd;\n        quitEarlyArr[0] = false;\n        for (let numDifferences = 1; numDifferences <= (maxDifferences / 2) + 1; numDifferences++) {\n            let furthestOriginalIndex = 0;\n            let furthestModifiedIndex = 0;\n            diagonalForwardStart = this.ClipDiagonalBound(diagonalForwardBase - numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            diagonalForwardEnd = this.ClipDiagonalBound(diagonalForwardBase + numDifferences, numDifferences, diagonalForwardBase, numDiagonals);\n            for (let diagonal = diagonalForwardStart; diagonal <= diagonalForwardEnd; diagonal += 2) {\n                if (diagonal === diagonalForwardStart || (diagonal < diagonalForwardEnd && forwardPoints[diagonal - 1] < forwardPoints[diagonal + 1])) {\n                    originalIndex = forwardPoints[diagonal + 1];\n                }\n                else {\n                    originalIndex = forwardPoints[diagonal - 1] + 1;\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalForwardBase) - diagonalForwardOffset;\n                const tempOriginalIndex = originalIndex;\n                while (originalIndex < originalEnd && modifiedIndex < modifiedEnd && this.ElementsAreEqual(originalIndex + 1, modifiedIndex + 1)) {\n                    originalIndex++;\n                    modifiedIndex++;\n                }\n                forwardPoints[diagonal] = originalIndex;\n                if (originalIndex + modifiedIndex > furthestOriginalIndex + furthestModifiedIndex) {\n                    furthestOriginalIndex = originalIndex;\n                    furthestModifiedIndex = modifiedIndex;\n                }\n                if (!deltaIsEven && Math.abs(diagonal - diagonalReverseBase) <= (numDifferences - 1)) {\n                    if (originalIndex >= reversePoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex <= reversePoints[diagonal] && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            return null;\n                        }\n                    }\n                }\n            }\n            const matchLengthOfLongest = ((furthestOriginalIndex - originalStart) + (furthestModifiedIndex - modifiedStart) - numDifferences) / 2;\n            if (this.ContinueProcessingPredicate !== null && !this.ContinueProcessingPredicate(furthestOriginalIndex, matchLengthOfLongest)) {\n                quitEarlyArr[0] = true;\n                midOriginalArr[0] = furthestOriginalIndex;\n                midModifiedArr[0] = furthestModifiedIndex;\n                if (matchLengthOfLongest > 0 && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n                    return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                }\n                else {\n                    originalStart++;\n                    modifiedStart++;\n                    return [\n                        ( new DiffChange(\n                            originalStart,\n                            originalEnd - originalStart + 1,\n                            modifiedStart,\n                            modifiedEnd - modifiedStart + 1\n                        ))\n                    ];\n                }\n            }\n            diagonalReverseStart = this.ClipDiagonalBound(diagonalReverseBase - numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            diagonalReverseEnd = this.ClipDiagonalBound(diagonalReverseBase + numDifferences, numDifferences, diagonalReverseBase, numDiagonals);\n            for (let diagonal = diagonalReverseStart; diagonal <= diagonalReverseEnd; diagonal += 2) {\n                if (diagonal === diagonalReverseStart || (diagonal < diagonalReverseEnd && reversePoints[diagonal - 1] >= reversePoints[diagonal + 1])) {\n                    originalIndex = reversePoints[diagonal + 1] - 1;\n                }\n                else {\n                    originalIndex = reversePoints[diagonal - 1];\n                }\n                modifiedIndex = originalIndex - (diagonal - diagonalReverseBase) - diagonalReverseOffset;\n                const tempOriginalIndex = originalIndex;\n                while (originalIndex > originalStart && modifiedIndex > modifiedStart && this.ElementsAreEqual(originalIndex, modifiedIndex)) {\n                    originalIndex--;\n                    modifiedIndex--;\n                }\n                reversePoints[diagonal] = originalIndex;\n                if (deltaIsEven && Math.abs(diagonal - diagonalForwardBase) <= numDifferences) {\n                    if (originalIndex <= forwardPoints[diagonal]) {\n                        midOriginalArr[0] = originalIndex;\n                        midModifiedArr[0] = modifiedIndex;\n                        if (tempOriginalIndex >= forwardPoints[diagonal] && LocalConstants.MaxDifferencesHistory > 0 && numDifferences <= (LocalConstants.MaxDifferencesHistory + 1)) {\n                            return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n                        }\n                        else {\n                            return null;\n                        }\n                    }\n                }\n            }\n            if (numDifferences <= LocalConstants.MaxDifferencesHistory) {\n                let temp = ( new Int32Array(diagonalForwardEnd - diagonalForwardStart + 2));\n                temp[0] = diagonalForwardBase - diagonalForwardStart + 1;\n                MyArray.Copy2(forwardPoints, diagonalForwardStart, temp, 1, diagonalForwardEnd - diagonalForwardStart + 1);\n                this.m_forwardHistory.push(temp);\n                temp = ( new Int32Array(diagonalReverseEnd - diagonalReverseStart + 2));\n                temp[0] = diagonalReverseBase - diagonalReverseStart + 1;\n                MyArray.Copy2(reversePoints, diagonalReverseStart, temp, 1, diagonalReverseEnd - diagonalReverseStart + 1);\n                this.m_reverseHistory.push(temp);\n            }\n        }\n        return this.WALKTRACE(diagonalForwardBase, diagonalForwardStart, diagonalForwardEnd, diagonalForwardOffset, diagonalReverseBase, diagonalReverseStart, diagonalReverseEnd, diagonalReverseOffset, forwardPoints, reversePoints, originalIndex, originalEnd, midOriginalArr, modifiedIndex, modifiedEnd, midModifiedArr, deltaIsEven, quitEarlyArr);\n    }\n    PrettifyChanges(changes) {\n        for (let i = 0; i < changes.length; i++) {\n            const change = changes[i];\n            const originalStop = (i < changes.length - 1) ? changes[i + 1].originalStart : this._originalElementsOrHash.length;\n            const modifiedStop = (i < changes.length - 1) ? changes[i + 1].modifiedStart : this._modifiedElementsOrHash.length;\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            while (change.originalStart + change.originalLength < originalStop\n                && change.modifiedStart + change.modifiedLength < modifiedStop\n                && (!checkOriginal || this.OriginalElementsAreEqual(change.originalStart, change.originalStart + change.originalLength))\n                && (!checkModified || this.ModifiedElementsAreEqual(change.modifiedStart, change.modifiedStart + change.modifiedLength))) {\n                const startStrictEqual = this.ElementsAreStrictEqual(change.originalStart, change.modifiedStart);\n                const endStrictEqual = this.ElementsAreStrictEqual(change.originalStart + change.originalLength, change.modifiedStart + change.modifiedLength);\n                if (endStrictEqual && !startStrictEqual) {\n                    break;\n                }\n                change.originalStart++;\n                change.modifiedStart++;\n            }\n            const mergedChangeArr = [null];\n            if (i < changes.length - 1 && this.ChangesOverlap(changes[i], changes[i + 1], mergedChangeArr)) {\n                changes[i] = mergedChangeArr[0];\n                changes.splice(i + 1, 1);\n                i--;\n                continue;\n            }\n        }\n        for (let i = changes.length - 1; i >= 0; i--) {\n            const change = changes[i];\n            let originalStop = 0;\n            let modifiedStop = 0;\n            if (i > 0) {\n                const prevChange = changes[i - 1];\n                originalStop = prevChange.originalStart + prevChange.originalLength;\n                modifiedStop = prevChange.modifiedStart + prevChange.modifiedLength;\n            }\n            const checkOriginal = change.originalLength > 0;\n            const checkModified = change.modifiedLength > 0;\n            let bestDelta = 0;\n            let bestScore = this._boundaryScore(change.originalStart, change.originalLength, change.modifiedStart, change.modifiedLength);\n            for (let delta = 1;; delta++) {\n                const originalStart = change.originalStart - delta;\n                const modifiedStart = change.modifiedStart - delta;\n                if (originalStart < originalStop || modifiedStart < modifiedStop) {\n                    break;\n                }\n                if (checkOriginal && !this.OriginalElementsAreEqual(originalStart, originalStart + change.originalLength)) {\n                    break;\n                }\n                if (checkModified && !this.ModifiedElementsAreEqual(modifiedStart, modifiedStart + change.modifiedLength)) {\n                    break;\n                }\n                const touchingPreviousChange = (originalStart === originalStop && modifiedStart === modifiedStop);\n                const score = ((touchingPreviousChange ? 5 : 0)\n                    + this._boundaryScore(originalStart, change.originalLength, modifiedStart, change.modifiedLength));\n                if (score > bestScore) {\n                    bestScore = score;\n                    bestDelta = delta;\n                }\n            }\n            change.originalStart -= bestDelta;\n            change.modifiedStart -= bestDelta;\n            const mergedChangeArr = [null];\n            if (i > 0 && this.ChangesOverlap(changes[i - 1], changes[i], mergedChangeArr)) {\n                changes[i - 1] = mergedChangeArr[0];\n                changes.splice(i, 1);\n                i++;\n                continue;\n            }\n        }\n        if (this._hasStrings) {\n            for (let i = 1, len = changes.length; i < len; i++) {\n                const aChange = changes[i - 1];\n                const bChange = changes[i];\n                const matchedLength = bChange.originalStart - aChange.originalStart - aChange.originalLength;\n                const aOriginalStart = aChange.originalStart;\n                const bOriginalEnd = bChange.originalStart + bChange.originalLength;\n                const abOriginalLength = bOriginalEnd - aOriginalStart;\n                const aModifiedStart = aChange.modifiedStart;\n                const bModifiedEnd = bChange.modifiedStart + bChange.modifiedLength;\n                const abModifiedLength = bModifiedEnd - aModifiedStart;\n                if (matchedLength < 5 && abOriginalLength < 20 && abModifiedLength < 20) {\n                    const t = this._findBetterContiguousSequence(aOriginalStart, abOriginalLength, aModifiedStart, abModifiedLength, matchedLength);\n                    if (t) {\n                        const [originalMatchStart, modifiedMatchStart] = t;\n                        if (originalMatchStart !== aChange.originalStart + aChange.originalLength || modifiedMatchStart !== aChange.modifiedStart + aChange.modifiedLength) {\n                            aChange.originalLength = originalMatchStart - aChange.originalStart;\n                            aChange.modifiedLength = modifiedMatchStart - aChange.modifiedStart;\n                            bChange.originalStart = originalMatchStart + matchedLength;\n                            bChange.modifiedStart = modifiedMatchStart + matchedLength;\n                            bChange.originalLength = bOriginalEnd - bChange.originalStart;\n                            bChange.modifiedLength = bModifiedEnd - bChange.modifiedStart;\n                        }\n                    }\n                }\n            }\n        }\n        return changes;\n    }\n    _findBetterContiguousSequence(originalStart, originalLength, modifiedStart, modifiedLength, desiredLength) {\n        if (originalLength < desiredLength || modifiedLength < desiredLength) {\n            return null;\n        }\n        const originalMax = originalStart + originalLength - desiredLength + 1;\n        const modifiedMax = modifiedStart + modifiedLength - desiredLength + 1;\n        let bestScore = 0;\n        let bestOriginalStart = 0;\n        let bestModifiedStart = 0;\n        for (let i = originalStart; i < originalMax; i++) {\n            for (let j = modifiedStart; j < modifiedMax; j++) {\n                const score = this._contiguousSequenceScore(i, j, desiredLength);\n                if (score > 0 && score > bestScore) {\n                    bestScore = score;\n                    bestOriginalStart = i;\n                    bestModifiedStart = j;\n                }\n            }\n        }\n        if (bestScore > 0) {\n            return [bestOriginalStart, bestModifiedStart];\n        }\n        return null;\n    }\n    _contiguousSequenceScore(originalStart, modifiedStart, length) {\n        let score = 0;\n        for (let l = 0; l < length; l++) {\n            if (!this.ElementsAreEqual(originalStart + l, modifiedStart + l)) {\n                return 0;\n            }\n            score += this._originalStringElements[originalStart + l].length;\n        }\n        return score;\n    }\n    _OriginalIsBoundary(index) {\n        if (index <= 0 || index >= this._originalElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._originalStringElements[index]));\n    }\n    _OriginalRegionIsBoundary(originalStart, originalLength) {\n        if (this._OriginalIsBoundary(originalStart) || this._OriginalIsBoundary(originalStart - 1)) {\n            return true;\n        }\n        if (originalLength > 0) {\n            const originalEnd = originalStart + originalLength;\n            if (this._OriginalIsBoundary(originalEnd - 1) || this._OriginalIsBoundary(originalEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _ModifiedIsBoundary(index) {\n        if (index <= 0 || index >= this._modifiedElementsOrHash.length - 1) {\n            return true;\n        }\n        return (this._hasStrings && /^\\s*$/.test(this._modifiedStringElements[index]));\n    }\n    _ModifiedRegionIsBoundary(modifiedStart, modifiedLength) {\n        if (this._ModifiedIsBoundary(modifiedStart) || this._ModifiedIsBoundary(modifiedStart - 1)) {\n            return true;\n        }\n        if (modifiedLength > 0) {\n            const modifiedEnd = modifiedStart + modifiedLength;\n            if (this._ModifiedIsBoundary(modifiedEnd - 1) || this._ModifiedIsBoundary(modifiedEnd)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _boundaryScore(originalStart, originalLength, modifiedStart, modifiedLength) {\n        const originalScore = (this._OriginalRegionIsBoundary(originalStart, originalLength) ? 1 : 0);\n        const modifiedScore = (this._ModifiedRegionIsBoundary(modifiedStart, modifiedLength) ? 1 : 0);\n        return (originalScore + modifiedScore);\n    }\n    ConcatenateChanges(left, right) {\n        const mergedChangeArr = [];\n        if (left.length === 0 || right.length === 0) {\n            return (right.length > 0) ? right : left;\n        }\n        else if (this.ChangesOverlap(left[left.length - 1], right[0], mergedChangeArr)) {\n            const result = ( new Array(left.length + right.length - 1));\n            MyArray.Copy(left, 0, result, 0, left.length - 1);\n            result[left.length - 1] = mergedChangeArr[0];\n            MyArray.Copy(right, 1, result, left.length, right.length - 1);\n            return result;\n        }\n        else {\n            const result = ( new Array(left.length + right.length));\n            MyArray.Copy(left, 0, result, 0, left.length);\n            MyArray.Copy(right, 0, result, left.length, right.length);\n            return result;\n        }\n    }\n    ChangesOverlap(left, right, mergedChangeArr) {\n        Debug.Assert(left.originalStart <= right.originalStart, 'Left change is not less than or equal to right change');\n        Debug.Assert(left.modifiedStart <= right.modifiedStart, 'Left change is not less than or equal to right change');\n        if (left.originalStart + left.originalLength >= right.originalStart || left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n            const originalStart = left.originalStart;\n            let originalLength = left.originalLength;\n            const modifiedStart = left.modifiedStart;\n            let modifiedLength = left.modifiedLength;\n            if (left.originalStart + left.originalLength >= right.originalStart) {\n                originalLength = right.originalStart + right.originalLength - left.originalStart;\n            }\n            if (left.modifiedStart + left.modifiedLength >= right.modifiedStart) {\n                modifiedLength = right.modifiedStart + right.modifiedLength - left.modifiedStart;\n            }\n            mergedChangeArr[0] = ( new DiffChange(originalStart, originalLength, modifiedStart, modifiedLength));\n            return true;\n        }\n        else {\n            mergedChangeArr[0] = null;\n            return false;\n        }\n    }\n    ClipDiagonalBound(diagonal, numDifferences, diagonalBaseIndex, numDiagonals) {\n        if (diagonal >= 0 && diagonal < numDiagonals) {\n            return diagonal;\n        }\n        const diagonalsBelow = diagonalBaseIndex;\n        const diagonalsAbove = numDiagonals - diagonalBaseIndex - 1;\n        const diffEven = (numDifferences % 2 === 0);\n        if (diagonal < 0) {\n            const lowerBoundEven = (diagonalsBelow % 2 === 0);\n            return (diffEven === lowerBoundEven) ? 0 : 1;\n        }\n        else {\n            const upperBoundEven = (diagonalsAbove % 2 === 0);\n            return (diffEven === upperBoundEven) ? numDiagonals - 1 : numDiagonals - 2;\n        }\n    }\n}\nexport { LcsDiff, StringDiffSequence, stringDiff };\n","var MarshalledId;\n( (function(MarshalledId) {\n    MarshalledId[MarshalledId[\"Uri\"] = 1] = \"Uri\";\n    MarshalledId[MarshalledId[\"Regexp\"] = 2] = \"Regexp\";\n    MarshalledId[MarshalledId[\"ScmResource\"] = 3] = \"ScmResource\";\n    MarshalledId[MarshalledId[\"ScmResourceGroup\"] = 4] = \"ScmResourceGroup\";\n    MarshalledId[MarshalledId[\"ScmProvider\"] = 5] = \"ScmProvider\";\n    MarshalledId[MarshalledId[\"CommentController\"] = 6] = \"CommentController\";\n    MarshalledId[MarshalledId[\"CommentThread\"] = 7] = \"CommentThread\";\n    MarshalledId[MarshalledId[\"CommentThreadInstance\"] = 8] = \"CommentThreadInstance\";\n    MarshalledId[MarshalledId[\"CommentThreadReply\"] = 9] = \"CommentThreadReply\";\n    MarshalledId[MarshalledId[\"CommentNode\"] = 10] = \"CommentNode\";\n    MarshalledId[MarshalledId[\"CommentThreadNode\"] = 11] = \"CommentThreadNode\";\n    MarshalledId[MarshalledId[\"TimelineActionContext\"] = 12] = \"TimelineActionContext\";\n    MarshalledId[MarshalledId[\"NotebookCellActionContext\"] = 13] = \"NotebookCellActionContext\";\n    MarshalledId[MarshalledId[\"NotebookActionContext\"] = 14] = \"NotebookActionContext\";\n    MarshalledId[MarshalledId[\"TerminalContext\"] = 15] = \"TerminalContext\";\n    MarshalledId[MarshalledId[\"TestItemContext\"] = 16] = \"TestItemContext\";\n    MarshalledId[MarshalledId[\"Date\"] = 17] = \"Date\";\n    MarshalledId[MarshalledId[\"TestMessageMenuArgs\"] = 18] = \"TestMessageMenuArgs\";\n})(MarshalledId || (MarshalledId = {})));\nexport { MarshalledId };\n","import { isWindows, isMacintosh } from './platform.js';\nlet safeProcess;\nconst vscodeGlobal = globalThis.vscode;\nif (typeof vscodeGlobal !== 'undefined' && typeof vscodeGlobal.process !== 'undefined') {\n    const sandboxProcess = vscodeGlobal.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\nelse if (typeof process !== 'undefined' && typeof process?.versions?.node === 'string') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\nelse {\n    safeProcess = {\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined;  },\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\nconst cwd = safeProcess.cwd;\nconst env = safeProcess.env;\nconst platform = safeProcess.platform;\nconst arch = safeProcess.arch;\nexport { arch, cwd, env, platform };\n","import { cwd, env, platform } from './process.js';\nconst CHAR_UPPERCASE_A = 65;\nconst CHAR_LOWERCASE_A = 97;\nconst CHAR_UPPERCASE_Z = 90;\nconst CHAR_LOWERCASE_Z = 122;\nconst CHAR_DOT = 46;\nconst CHAR_FORWARD_SLASH = 47;\nconst CHAR_BACKWARD_SLASH = 92;\nconst CHAR_COLON = 58;\nconst CHAR_QUESTION_MARK = 63;\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateObject(pathObject, name) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw ( new ErrorInvalidArgType(name, 'Object', pathObject));\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw ( new ErrorInvalidArgType(name, 'string', value));\n    }\n}\nconst platformIsWin32 = (platform === 'win32');\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) ;\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    validateObject(pathObject, 'pathObject');\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${pathObject.ext || ''}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nconst win32 = {\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, 'path');\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = cwd();\n            }\n            else {\n                path = env[`=${resolvedDevice}`] || cwd();\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    let j = 2;\n                    let last = j;\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        last = j;\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            last = j;\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    last = j;\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        if (typeof path !== 'string' || path.length === 0) {\n            return path;\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            return isPathSeparator(code) ? path : '.';\n        }\n        if (isPathSeparator(code)) {\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    last = j;\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            return path;\n                        }\n                        if (j !== last) {\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                end = i;\n                            }\n                        }\n                        else {\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let preDotState = 0;\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            preDotState === 0 ||\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        if (isPathSeparator(code)) {\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                let j = 2;\n                let last = j;\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    last = j;\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        last = j;\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            if (len <= 2) {\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        let preDotState = 0;\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                preDotState === 0 ||\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nconst posixCwd = (() => {\n    if (platformIsWin32) {\n        const regexp = /\\\\/g;\n        return () => {\n            const cwd$1 = cwd().replace(regexp, '/');\n            return cwd$1.slice(cwd$1.indexOf('/'));\n        };\n    }\n    return () => cwd();\n})();\nconst posix = {\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : posixCwd();\n            validateString(path, 'path');\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                end = i;\n                            }\n                        }\n                        else {\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            preDotState === 0 ||\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        let preDotState = 0;\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                preDotState === 0 ||\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nconst normalize = (platformIsWin32 ? win32.normalize : posix.normalize);\nconst isAbsolute = (platformIsWin32 ? win32.isAbsolute : posix.isAbsolute);\nconst join = (platformIsWin32 ? win32.join : posix.join);\nconst resolve = (platformIsWin32 ? win32.resolve : posix.resolve);\nconst relative = (platformIsWin32 ? win32.relative : posix.relative);\nconst dirname = (platformIsWin32 ? win32.dirname : posix.dirname);\nconst basename = (platformIsWin32 ? win32.basename : posix.basename);\nconst extname = (platformIsWin32 ? win32.extname : posix.extname);\nconst parse = (platformIsWin32 ? win32.parse : posix.parse);\nconst sep = (platformIsWin32 ? win32.sep : posix.sep);\nconst delimiter = (platformIsWin32 ? win32.delimiter : posix.delimiter);\nexport { basename, delimiter, dirname, extname, isAbsolute, join, normalize, parse, posix, relative, resolve, sep, win32 };\n","import { CharCode } from './charCode.js';\nimport { MarshalledId } from './marshallingIds.js';\nimport { win32, posix } from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    if (!ret.scheme && _strict) {\n        throw ( new Error(\n            `[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`\n        ));\n    }\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw ( new Error('[UriError]: Scheme contains illegal characters.'));\n    }\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw ( new Error(\n                    '[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character'\n                ));\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw ( new Error(\n                    '[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")'\n                ));\n            }\n        }\n    }\n}\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\nfunction _referenceResolution(scheme, path) {\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\nclass URI {\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    get fsPath() {\n        return uriToFsPath(this, false);\n    }\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return ( new Uri(scheme, authority, path, query, fragment));\n    }\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return ( new Uri(_empty, _empty, _empty, _empty, _empty));\n        }\n        return ( new Uri(\n            match[2] || _empty,\n            percentDecode(match[4] || _empty),\n            percentDecode(match[5] || _empty),\n            percentDecode(match[7] || _empty),\n            percentDecode(match[9] || _empty),\n            _strict\n        ));\n    }\n    static file(path) {\n        let authority = _empty;\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return ( new Uri('file', authority, path, _empty, _empty));\n    }\n    static from(components, strict) {\n        const result = ( new Uri(\n            components.scheme,\n            components.authority,\n            components.path,\n            components.query,\n            components.fragment,\n            strict\n        ));\n        return result;\n    }\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw ( new Error(`[UriError]: cannot call joinPath on URI without path`));\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = ( new Uri(data));\n            result._formatted = data.external ?? null;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath ?? null : null;\n            return result;\n        }\n    }\n}\nfunction isUriComponents(thing) {\n    if (!thing || typeof thing !== 'object') {\n        return false;\n    }\n    return typeof thing.scheme === 'string'\n        && (typeof thing.authority === 'string' || typeof thing.authority === 'undefined')\n        && (typeof thing.path === 'string' || typeof thing.path === 'undefined')\n        && (typeof thing.query === 'string' || typeof thing.query === 'undefined')\n        && (typeof thing.fragment === 'string' || typeof thing.fragment === 'undefined');\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: MarshalledId.Uri\n        };\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\nconst encodeTable = {\n    [CharCode.Colon]: '%3A',\n    [CharCode.Slash]: '%2F',\n    [CharCode.QuestionMark]: '%3F',\n    [CharCode.Hash]: '%23',\n    [CharCode.OpenSquareBracket]: '%5B',\n    [CharCode.CloseSquareBracket]: '%5D',\n    [CharCode.AtSign]: '%40',\n    [CharCode.ExclamationMark]: '%21',\n    [CharCode.DollarSign]: '%24',\n    [CharCode.Ampersand]: '%26',\n    [CharCode.SingleQuote]: '%27',\n    [CharCode.OpenParen]: '%28',\n    [CharCode.CloseParen]: '%29',\n    [CharCode.Asterisk]: '%2A',\n    [CharCode.Plus]: '%2B',\n    [CharCode.Comma]: '%2C',\n    [CharCode.Semicolon]: '%3B',\n    [CharCode.Equals]: '%3D',\n    [CharCode.Space]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, isPath, isAuthority) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        if ((code >= CharCode.a && code <= CharCode.z)\n            || (code >= CharCode.A && code <= CharCode.Z)\n            || (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n            || code === CharCode.Dash\n            || code === CharCode.Period\n            || code === CharCode.Underline\n            || code === CharCode.Tilde\n            || (isPath && code === CharCode.Slash)\n            || (isAuthority && code === CharCode.OpenSquareBracket)\n            || (isAuthority && code === CharCode.CloseSquareBracket)\n            || (isAuthority && code === CharCode.Colon)) {\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === CharCode.Hash || code === CharCode.QuestionMark) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\nfunction uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === CharCode.Slash\n        && (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n        && uri.path.charCodeAt(2) === CharCode.Colon) {\n        if (!keepDriveLetterCasing) {\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.lastIndexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false, false);\n            }\n            else {\n                res += encoder(userinfo.substr(0, idx), false, false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false, true);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.lastIndexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false, true);\n        }\n        else {\n            res += encoder(authority.substr(0, idx), false, true);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        if (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n            const code = path.charCodeAt(1);\n            if (code >= CharCode.A && code <= CharCode.Z) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`;\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n            const code = path.charCodeAt(0);\n            if (code >= CharCode.A && code <= CharCode.Z) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`;\n            }\n        }\n        res += encoder(path, true, false);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n    }\n    return res;\n}\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\nexport { URI, isUriComponents, uriToFsPath };\n","import { Iterable } from '../../../base/common/iterator.js';\nimport '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nconst USUAL_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\nfunction createWordRegExp(allowInWords = '') {\n    let source = '(-?\\\\d*\\\\.\\\\d\\\\w*)|([^';\n    for (const sep of USUAL_WORD_SEPARATORS) {\n        if (allowInWords.indexOf(sep) >= 0) {\n            continue;\n        }\n        source += '\\\\' + sep;\n    }\n    source += '\\\\s]+)';\n    return ( new RegExp(source, 'g'));\n}\nconst DEFAULT_WORD_REGEXP = createWordRegExp();\nfunction ensureValidWordDefinition(wordDefinition) {\n    let result = DEFAULT_WORD_REGEXP;\n    if (wordDefinition && (wordDefinition instanceof RegExp)) {\n        if (!wordDefinition.global) {\n            let flags = 'g';\n            if (wordDefinition.ignoreCase) {\n                flags += 'i';\n            }\n            if (wordDefinition.multiline) {\n                flags += 'm';\n            }\n            if (wordDefinition.unicode) {\n                flags += 'u';\n            }\n            result = ( new RegExp(wordDefinition.source, flags));\n        }\n        else {\n            result = wordDefinition;\n        }\n    }\n    result.lastIndex = 0;\n    return result;\n}\nconst _defaultConfig = ( new LinkedList());\n_defaultConfig.unshift({\n    maxLen: 1000,\n    windowSize: 15,\n    timeBudget: 150\n});\nfunction getWordAtText(column, wordDefinition, text, textOffset, config) {\n    wordDefinition = ensureValidWordDefinition(wordDefinition);\n    if (!config) {\n        config = Iterable.first(_defaultConfig);\n    }\n    if (text.length > config.maxLen) {\n        let start = column - config.maxLen / 2;\n        if (start < 0) {\n            start = 0;\n        }\n        else {\n            textOffset += start;\n        }\n        text = text.substring(start, column + config.maxLen / 2);\n        return getWordAtText(column, wordDefinition, text, textOffset, config);\n    }\n    const t1 = Date.now();\n    const pos = column - 1 - textOffset;\n    let prevRegexIndex = -1;\n    let match = null;\n    for (let i = 1;; i++) {\n        if (Date.now() - t1 >= config.timeBudget) {\n            break;\n        }\n        const regexIndex = pos - config.windowSize * i;\n        wordDefinition.lastIndex = Math.max(0, regexIndex);\n        const thisMatch = _findRegexMatchEnclosingPosition(wordDefinition, text, pos, prevRegexIndex);\n        if (!thisMatch && match) {\n            break;\n        }\n        match = thisMatch;\n        if (regexIndex <= 0) {\n            break;\n        }\n        prevRegexIndex = regexIndex;\n    }\n    if (match) {\n        const result = {\n            word: match[0],\n            startColumn: textOffset + 1 + match.index,\n            endColumn: textOffset + 1 + match.index + match[0].length\n        };\n        wordDefinition.lastIndex = 0;\n        return result;\n    }\n    return null;\n}\nfunction _findRegexMatchEnclosingPosition(wordDefinition, text, pos, stopPos) {\n    let match;\n    while (match = wordDefinition.exec(text)) {\n        const matchIndex = match.index || 0;\n        if (matchIndex <= pos && wordDefinition.lastIndex >= pos) {\n            return match;\n        }\n        else if (stopPos > 0 && matchIndex > stopPos) {\n            return null;\n        }\n    }\n    return null;\n}\nexport { DEFAULT_WORD_REGEXP, USUAL_WORD_SEPARATORS, ensureValidWordDefinition, getWordAtText };\n","import { CharCode } from '../../../base/common/charCode.js';\nimport { CharacterClassifier } from '../core/characterClassifier.js';\nvar State;\n( (function(State) {\n    State[State[\"Invalid\"] = 0] = \"Invalid\";\n    State[State[\"Start\"] = 1] = \"Start\";\n    State[State[\"H\"] = 2] = \"H\";\n    State[State[\"HT\"] = 3] = \"HT\";\n    State[State[\"HTT\"] = 4] = \"HTT\";\n    State[State[\"HTTP\"] = 5] = \"HTTP\";\n    State[State[\"F\"] = 6] = \"F\";\n    State[State[\"FI\"] = 7] = \"FI\";\n    State[State[\"FIL\"] = 8] = \"FIL\";\n    State[State[\"BeforeColon\"] = 9] = \"BeforeColon\";\n    State[State[\"AfterColon\"] = 10] = \"AfterColon\";\n    State[State[\"AlmostThere\"] = 11] = \"AlmostThere\";\n    State[State[\"End\"] = 12] = \"End\";\n    State[State[\"Accept\"] = 13] = \"Accept\";\n    State[State[\"LastKnownState\"] = 14] = \"LastKnownState\";\n})(State || (State = {})));\nclass Uint8Matrix {\n    constructor(rows, cols, defaultValue) {\n        const data = ( new Uint8Array(rows * cols));\n        for (let i = 0, len = rows * cols; i < len; i++) {\n            data[i] = defaultValue;\n        }\n        this._data = data;\n        this.rows = rows;\n        this.cols = cols;\n    }\n    get(row, col) {\n        return this._data[row * this.cols + col];\n    }\n    set(row, col, value) {\n        this._data[row * this.cols + col] = value;\n    }\n}\nclass StateMachine {\n    constructor(edges) {\n        let maxCharCode = 0;\n        let maxState = State.Invalid;\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            if (chCode > maxCharCode) {\n                maxCharCode = chCode;\n            }\n            if (from > maxState) {\n                maxState = from;\n            }\n            if (to > maxState) {\n                maxState = to;\n            }\n        }\n        maxCharCode++;\n        maxState++;\n        const states = ( new Uint8Matrix(maxState, maxCharCode, State.Invalid));\n        for (let i = 0, len = edges.length; i < len; i++) {\n            const [from, chCode, to] = edges[i];\n            states.set(from, chCode, to);\n        }\n        this._states = states;\n        this._maxCharCode = maxCharCode;\n    }\n    nextState(currentState, chCode) {\n        if (chCode < 0 || chCode >= this._maxCharCode) {\n            return State.Invalid;\n        }\n        return this._states.get(currentState, chCode);\n    }\n}\nlet _stateMachine = null;\nfunction getStateMachine() {\n    if (_stateMachine === null) {\n        _stateMachine = ( new StateMachine([\n            [State.Start, CharCode.h, State.H],\n            [State.Start, CharCode.H, State.H],\n            [State.Start, CharCode.f, State.F],\n            [State.Start, CharCode.F, State.F],\n            [State.H, CharCode.t, State.HT],\n            [State.H, CharCode.T, State.HT],\n            [State.HT, CharCode.t, State.HTT],\n            [State.HT, CharCode.T, State.HTT],\n            [State.HTT, CharCode.p, State.HTTP],\n            [State.HTT, CharCode.P, State.HTTP],\n            [State.HTTP, CharCode.s, State.BeforeColon],\n            [State.HTTP, CharCode.S, State.BeforeColon],\n            [State.HTTP, CharCode.Colon, State.AfterColon],\n            [State.F, CharCode.i, State.FI],\n            [State.F, CharCode.I, State.FI],\n            [State.FI, CharCode.l, State.FIL],\n            [State.FI, CharCode.L, State.FIL],\n            [State.FIL, CharCode.e, State.BeforeColon],\n            [State.FIL, CharCode.E, State.BeforeColon],\n            [State.BeforeColon, CharCode.Colon, State.AfterColon],\n            [State.AfterColon, CharCode.Slash, State.AlmostThere],\n            [State.AlmostThere, CharCode.Slash, State.End],\n        ]));\n    }\n    return _stateMachine;\n}\nvar CharacterClass;\n( (function(CharacterClass) {\n    CharacterClass[CharacterClass[\"None\"] = 0] = \"None\";\n    CharacterClass[CharacterClass[\"ForceTermination\"] = 1] = \"ForceTermination\";\n    CharacterClass[CharacterClass[\"CannotEndIn\"] = 2] = \"CannotEndIn\";\n})(CharacterClass || (CharacterClass = {})));\nlet _classifier = null;\nfunction getClassifier() {\n    if (_classifier === null) {\n        _classifier = ( new CharacterClassifier(CharacterClass.None));\n        const FORCE_TERMINATION_CHARACTERS = ' \\t<>\\'\\\"、。｡､，．：；‘〈「『〔（［｛｢｣｝］）〕』」〉’｀～…';\n        for (let i = 0; i < FORCE_TERMINATION_CHARACTERS.length; i++) {\n            _classifier.set(FORCE_TERMINATION_CHARACTERS.charCodeAt(i), CharacterClass.ForceTermination);\n        }\n        const CANNOT_END_WITH_CHARACTERS = '.,;:';\n        for (let i = 0; i < CANNOT_END_WITH_CHARACTERS.length; i++) {\n            _classifier.set(CANNOT_END_WITH_CHARACTERS.charCodeAt(i), CharacterClass.CannotEndIn);\n        }\n    }\n    return _classifier;\n}\nclass LinkComputer {\n    static _createLink(classifier, line, lineNumber, linkBeginIndex, linkEndIndex) {\n        let lastIncludedCharIndex = linkEndIndex - 1;\n        do {\n            const chCode = line.charCodeAt(lastIncludedCharIndex);\n            const chClass = classifier.get(chCode);\n            if (chClass !== CharacterClass.CannotEndIn) {\n                break;\n            }\n            lastIncludedCharIndex--;\n        } while (lastIncludedCharIndex > linkBeginIndex);\n        if (linkBeginIndex > 0) {\n            const charCodeBeforeLink = line.charCodeAt(linkBeginIndex - 1);\n            const lastCharCodeInLink = line.charCodeAt(lastIncludedCharIndex);\n            if ((charCodeBeforeLink === CharCode.OpenParen && lastCharCodeInLink === CharCode.CloseParen)\n                || (charCodeBeforeLink === CharCode.OpenSquareBracket && lastCharCodeInLink === CharCode.CloseSquareBracket)\n                || (charCodeBeforeLink === CharCode.OpenCurlyBrace && lastCharCodeInLink === CharCode.CloseCurlyBrace)) {\n                lastIncludedCharIndex--;\n            }\n        }\n        return {\n            range: {\n                startLineNumber: lineNumber,\n                startColumn: linkBeginIndex + 1,\n                endLineNumber: lineNumber,\n                endColumn: lastIncludedCharIndex + 2\n            },\n            url: line.substring(linkBeginIndex, lastIncludedCharIndex + 1)\n        };\n    }\n    static computeLinks(model, stateMachine = getStateMachine()) {\n        const classifier = getClassifier();\n        const result = [];\n        for (let i = 1, lineCount = model.getLineCount(); i <= lineCount; i++) {\n            const line = model.getLineContent(i);\n            const len = line.length;\n            let j = 0;\n            let linkBeginIndex = 0;\n            let linkBeginChCode = 0;\n            let state = State.Start;\n            let hasOpenParens = false;\n            let hasOpenSquareBracket = false;\n            let inSquareBrackets = false;\n            let hasOpenCurlyBracket = false;\n            while (j < len) {\n                let resetStateMachine = false;\n                const chCode = line.charCodeAt(j);\n                if (state === State.Accept) {\n                    let chClass;\n                    switch (chCode) {\n                        case CharCode.OpenParen:\n                            hasOpenParens = true;\n                            chClass = CharacterClass.None;\n                            break;\n                        case CharCode.CloseParen:\n                            chClass = (hasOpenParens ? CharacterClass.None : CharacterClass.ForceTermination);\n                            break;\n                        case CharCode.OpenSquareBracket:\n                            inSquareBrackets = true;\n                            hasOpenSquareBracket = true;\n                            chClass = CharacterClass.None;\n                            break;\n                        case CharCode.CloseSquareBracket:\n                            inSquareBrackets = false;\n                            chClass = (hasOpenSquareBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n                            break;\n                        case CharCode.OpenCurlyBrace:\n                            hasOpenCurlyBracket = true;\n                            chClass = CharacterClass.None;\n                            break;\n                        case CharCode.CloseCurlyBrace:\n                            chClass = (hasOpenCurlyBracket ? CharacterClass.None : CharacterClass.ForceTermination);\n                            break;\n                        case CharCode.SingleQuote:\n                        case CharCode.DoubleQuote:\n                        case CharCode.BackTick:\n                            if (linkBeginChCode === chCode) {\n                                chClass = CharacterClass.ForceTermination;\n                            }\n                            else if (linkBeginChCode === CharCode.SingleQuote || linkBeginChCode === CharCode.DoubleQuote || linkBeginChCode === CharCode.BackTick) {\n                                chClass = CharacterClass.None;\n                            }\n                            else {\n                                chClass = CharacterClass.ForceTermination;\n                            }\n                            break;\n                        case CharCode.Asterisk:\n                            chClass = (linkBeginChCode === CharCode.Asterisk) ? CharacterClass.ForceTermination : CharacterClass.None;\n                            break;\n                        case CharCode.Pipe:\n                            chClass = (linkBeginChCode === CharCode.Pipe) ? CharacterClass.ForceTermination : CharacterClass.None;\n                            break;\n                        case CharCode.Space:\n                            chClass = (inSquareBrackets ? CharacterClass.None : CharacterClass.ForceTermination);\n                            break;\n                        default:\n                            chClass = classifier.get(chCode);\n                    }\n                    if (chClass === CharacterClass.ForceTermination) {\n                        result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, j));\n                        resetStateMachine = true;\n                    }\n                }\n                else if (state === State.End) {\n                    let chClass;\n                    if (chCode === CharCode.OpenSquareBracket) {\n                        hasOpenSquareBracket = true;\n                        chClass = CharacterClass.None;\n                    }\n                    else {\n                        chClass = classifier.get(chCode);\n                    }\n                    if (chClass === CharacterClass.ForceTermination) {\n                        resetStateMachine = true;\n                    }\n                    else {\n                        state = State.Accept;\n                    }\n                }\n                else {\n                    state = stateMachine.nextState(state, chCode);\n                    if (state === State.Invalid) {\n                        resetStateMachine = true;\n                    }\n                }\n                if (resetStateMachine) {\n                    state = State.Start;\n                    hasOpenParens = false;\n                    hasOpenSquareBracket = false;\n                    hasOpenCurlyBracket = false;\n                    linkBeginIndex = j + 1;\n                    linkBeginChCode = chCode;\n                }\n                j++;\n            }\n            if (state === State.Accept) {\n                result.push(LinkComputer._createLink(classifier, line, i, linkBeginIndex, len));\n            }\n        }\n        return result;\n    }\n}\nfunction computeLinks(model) {\n    if (!model || typeof model.getLineCount !== 'function' || typeof model.getLineContent !== 'function') {\n        return [];\n    }\n    return LinkComputer.computeLinks(model);\n}\nexport { LinkComputer, State, StateMachine, computeLinks };\n","class BasicInplaceReplace {\n    constructor() {\n        this._defaultValueSet = [\n            ['true', 'false'],\n            ['True', 'False'],\n            ['Private', 'Public', 'Friend', 'ReadOnly', 'Partial', 'Protected', 'WriteOnly'],\n            ['public', 'protected', 'private'],\n        ];\n    }\n    static { this.INSTANCE = ( new BasicInplaceReplace()); }\n    navigateValueSet(range1, text1, range2, text2, up) {\n        if (range1 && text1) {\n            const result = this.doNavigateValueSet(text1, up);\n            if (result) {\n                return {\n                    range: range1,\n                    value: result\n                };\n            }\n        }\n        if (range2 && text2) {\n            const result = this.doNavigateValueSet(text2, up);\n            if (result) {\n                return {\n                    range: range2,\n                    value: result\n                };\n            }\n        }\n        return null;\n    }\n    doNavigateValueSet(text, up) {\n        const numberResult = this.numberReplace(text, up);\n        if (numberResult !== null) {\n            return numberResult;\n        }\n        return this.textReplace(text, up);\n    }\n    numberReplace(value, up) {\n        const precision = Math.pow(10, value.length - (value.lastIndexOf('.') + 1));\n        let n1 = Number(value);\n        const n2 = parseFloat(value);\n        if (!isNaN(n1) && !isNaN(n2) && n1 === n2) {\n            if (n1 === 0 && !up) {\n                return null;\n            }\n            else {\n                n1 = Math.floor(n1 * precision);\n                n1 += up ? precision : -precision;\n                return String(n1 / precision);\n            }\n        }\n        return null;\n    }\n    textReplace(value, up) {\n        return this.valueSetsReplace(this._defaultValueSet, value, up);\n    }\n    valueSetsReplace(valueSets, value, up) {\n        let result = null;\n        for (let i = 0, len = valueSets.length; result === null && i < len; i++) {\n            result = this.valueSetReplace(valueSets[i], value, up);\n        }\n        return result;\n    }\n    valueSetReplace(valueSet, value, up) {\n        let idx = valueSet.indexOf(value);\n        if (idx >= 0) {\n            idx += up ? +1 : -1;\n            if (idx < 0) {\n                idx = valueSet.length - 1;\n            }\n            else {\n                idx %= valueSet.length;\n            }\n            return valueSet[idx];\n        }\n        return null;\n    }\n}\nexport { BasicInplaceReplace };\n","var KeyCode;\n( (function(KeyCode) {\n    KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"Digit0\"] = 21] = \"Digit0\";\n    KeyCode[KeyCode[\"Digit1\"] = 22] = \"Digit1\";\n    KeyCode[KeyCode[\"Digit2\"] = 23] = \"Digit2\";\n    KeyCode[KeyCode[\"Digit3\"] = 24] = \"Digit3\";\n    KeyCode[KeyCode[\"Digit4\"] = 25] = \"Digit4\";\n    KeyCode[KeyCode[\"Digit5\"] = 26] = \"Digit5\";\n    KeyCode[KeyCode[\"Digit6\"] = 27] = \"Digit6\";\n    KeyCode[KeyCode[\"Digit7\"] = 28] = \"Digit7\";\n    KeyCode[KeyCode[\"Digit8\"] = 29] = \"Digit8\";\n    KeyCode[KeyCode[\"Digit9\"] = 30] = \"Digit9\";\n    KeyCode[KeyCode[\"KeyA\"] = 31] = \"KeyA\";\n    KeyCode[KeyCode[\"KeyB\"] = 32] = \"KeyB\";\n    KeyCode[KeyCode[\"KeyC\"] = 33] = \"KeyC\";\n    KeyCode[KeyCode[\"KeyD\"] = 34] = \"KeyD\";\n    KeyCode[KeyCode[\"KeyE\"] = 35] = \"KeyE\";\n    KeyCode[KeyCode[\"KeyF\"] = 36] = \"KeyF\";\n    KeyCode[KeyCode[\"KeyG\"] = 37] = \"KeyG\";\n    KeyCode[KeyCode[\"KeyH\"] = 38] = \"KeyH\";\n    KeyCode[KeyCode[\"KeyI\"] = 39] = \"KeyI\";\n    KeyCode[KeyCode[\"KeyJ\"] = 40] = \"KeyJ\";\n    KeyCode[KeyCode[\"KeyK\"] = 41] = \"KeyK\";\n    KeyCode[KeyCode[\"KeyL\"] = 42] = \"KeyL\";\n    KeyCode[KeyCode[\"KeyM\"] = 43] = \"KeyM\";\n    KeyCode[KeyCode[\"KeyN\"] = 44] = \"KeyN\";\n    KeyCode[KeyCode[\"KeyO\"] = 45] = \"KeyO\";\n    KeyCode[KeyCode[\"KeyP\"] = 46] = \"KeyP\";\n    KeyCode[KeyCode[\"KeyQ\"] = 47] = \"KeyQ\";\n    KeyCode[KeyCode[\"KeyR\"] = 48] = \"KeyR\";\n    KeyCode[KeyCode[\"KeyS\"] = 49] = \"KeyS\";\n    KeyCode[KeyCode[\"KeyT\"] = 50] = \"KeyT\";\n    KeyCode[KeyCode[\"KeyU\"] = 51] = \"KeyU\";\n    KeyCode[KeyCode[\"KeyV\"] = 52] = \"KeyV\";\n    KeyCode[KeyCode[\"KeyW\"] = 53] = \"KeyW\";\n    KeyCode[KeyCode[\"KeyX\"] = 54] = \"KeyX\";\n    KeyCode[KeyCode[\"KeyY\"] = 55] = \"KeyY\";\n    KeyCode[KeyCode[\"KeyZ\"] = 56] = \"KeyZ\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"F20\"] = 78] = \"F20\";\n    KeyCode[KeyCode[\"F21\"] = 79] = \"F21\";\n    KeyCode[KeyCode[\"F22\"] = 80] = \"F22\";\n    KeyCode[KeyCode[\"F23\"] = 81] = \"F23\";\n    KeyCode[KeyCode[\"F24\"] = 82] = \"F24\";\n    KeyCode[KeyCode[\"NumLock\"] = 83] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 84] = \"ScrollLock\";\n    KeyCode[KeyCode[\"Semicolon\"] = 85] = \"Semicolon\";\n    KeyCode[KeyCode[\"Equal\"] = 86] = \"Equal\";\n    KeyCode[KeyCode[\"Comma\"] = 87] = \"Comma\";\n    KeyCode[KeyCode[\"Minus\"] = 88] = \"Minus\";\n    KeyCode[KeyCode[\"Period\"] = 89] = \"Period\";\n    KeyCode[KeyCode[\"Slash\"] = 90] = \"Slash\";\n    KeyCode[KeyCode[\"Backquote\"] = 91] = \"Backquote\";\n    KeyCode[KeyCode[\"BracketLeft\"] = 92] = \"BracketLeft\";\n    KeyCode[KeyCode[\"Backslash\"] = 93] = \"Backslash\";\n    KeyCode[KeyCode[\"BracketRight\"] = 94] = \"BracketRight\";\n    KeyCode[KeyCode[\"Quote\"] = 95] = \"Quote\";\n    KeyCode[KeyCode[\"OEM_8\"] = 96] = \"OEM_8\";\n    KeyCode[KeyCode[\"IntlBackslash\"] = 97] = \"IntlBackslash\";\n    KeyCode[KeyCode[\"Numpad0\"] = 98] = \"Numpad0\";\n    KeyCode[KeyCode[\"Numpad1\"] = 99] = \"Numpad1\";\n    KeyCode[KeyCode[\"Numpad2\"] = 100] = \"Numpad2\";\n    KeyCode[KeyCode[\"Numpad3\"] = 101] = \"Numpad3\";\n    KeyCode[KeyCode[\"Numpad4\"] = 102] = \"Numpad4\";\n    KeyCode[KeyCode[\"Numpad5\"] = 103] = \"Numpad5\";\n    KeyCode[KeyCode[\"Numpad6\"] = 104] = \"Numpad6\";\n    KeyCode[KeyCode[\"Numpad7\"] = 105] = \"Numpad7\";\n    KeyCode[KeyCode[\"Numpad8\"] = 106] = \"Numpad8\";\n    KeyCode[KeyCode[\"Numpad9\"] = 107] = \"Numpad9\";\n    KeyCode[KeyCode[\"NumpadMultiply\"] = 108] = \"NumpadMultiply\";\n    KeyCode[KeyCode[\"NumpadAdd\"] = 109] = \"NumpadAdd\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 110] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NumpadSubtract\"] = 111] = \"NumpadSubtract\";\n    KeyCode[KeyCode[\"NumpadDecimal\"] = 112] = \"NumpadDecimal\";\n    KeyCode[KeyCode[\"NumpadDivide\"] = 113] = \"NumpadDivide\";\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 114] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 115] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 116] = \"ABNT_C2\";\n    KeyCode[KeyCode[\"AudioVolumeMute\"] = 117] = \"AudioVolumeMute\";\n    KeyCode[KeyCode[\"AudioVolumeUp\"] = 118] = \"AudioVolumeUp\";\n    KeyCode[KeyCode[\"AudioVolumeDown\"] = 119] = \"AudioVolumeDown\";\n    KeyCode[KeyCode[\"BrowserSearch\"] = 120] = \"BrowserSearch\";\n    KeyCode[KeyCode[\"BrowserHome\"] = 121] = \"BrowserHome\";\n    KeyCode[KeyCode[\"BrowserBack\"] = 122] = \"BrowserBack\";\n    KeyCode[KeyCode[\"BrowserForward\"] = 123] = \"BrowserForward\";\n    KeyCode[KeyCode[\"MediaTrackNext\"] = 124] = \"MediaTrackNext\";\n    KeyCode[KeyCode[\"MediaTrackPrevious\"] = 125] = \"MediaTrackPrevious\";\n    KeyCode[KeyCode[\"MediaStop\"] = 126] = \"MediaStop\";\n    KeyCode[KeyCode[\"MediaPlayPause\"] = 127] = \"MediaPlayPause\";\n    KeyCode[KeyCode[\"LaunchMediaPlayer\"] = 128] = \"LaunchMediaPlayer\";\n    KeyCode[KeyCode[\"LaunchMail\"] = 129] = \"LaunchMail\";\n    KeyCode[KeyCode[\"LaunchApp2\"] = 130] = \"LaunchApp2\";\n    KeyCode[KeyCode[\"Clear\"] = 131] = \"Clear\";\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 132] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {})));\nvar ScanCode;\n( (function(ScanCode) {\n    ScanCode[ScanCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n    ScanCode[ScanCode[\"None\"] = 0] = \"None\";\n    ScanCode[ScanCode[\"Hyper\"] = 1] = \"Hyper\";\n    ScanCode[ScanCode[\"Super\"] = 2] = \"Super\";\n    ScanCode[ScanCode[\"Fn\"] = 3] = \"Fn\";\n    ScanCode[ScanCode[\"FnLock\"] = 4] = \"FnLock\";\n    ScanCode[ScanCode[\"Suspend\"] = 5] = \"Suspend\";\n    ScanCode[ScanCode[\"Resume\"] = 6] = \"Resume\";\n    ScanCode[ScanCode[\"Turbo\"] = 7] = \"Turbo\";\n    ScanCode[ScanCode[\"Sleep\"] = 8] = \"Sleep\";\n    ScanCode[ScanCode[\"WakeUp\"] = 9] = \"WakeUp\";\n    ScanCode[ScanCode[\"KeyA\"] = 10] = \"KeyA\";\n    ScanCode[ScanCode[\"KeyB\"] = 11] = \"KeyB\";\n    ScanCode[ScanCode[\"KeyC\"] = 12] = \"KeyC\";\n    ScanCode[ScanCode[\"KeyD\"] = 13] = \"KeyD\";\n    ScanCode[ScanCode[\"KeyE\"] = 14] = \"KeyE\";\n    ScanCode[ScanCode[\"KeyF\"] = 15] = \"KeyF\";\n    ScanCode[ScanCode[\"KeyG\"] = 16] = \"KeyG\";\n    ScanCode[ScanCode[\"KeyH\"] = 17] = \"KeyH\";\n    ScanCode[ScanCode[\"KeyI\"] = 18] = \"KeyI\";\n    ScanCode[ScanCode[\"KeyJ\"] = 19] = \"KeyJ\";\n    ScanCode[ScanCode[\"KeyK\"] = 20] = \"KeyK\";\n    ScanCode[ScanCode[\"KeyL\"] = 21] = \"KeyL\";\n    ScanCode[ScanCode[\"KeyM\"] = 22] = \"KeyM\";\n    ScanCode[ScanCode[\"KeyN\"] = 23] = \"KeyN\";\n    ScanCode[ScanCode[\"KeyO\"] = 24] = \"KeyO\";\n    ScanCode[ScanCode[\"KeyP\"] = 25] = \"KeyP\";\n    ScanCode[ScanCode[\"KeyQ\"] = 26] = \"KeyQ\";\n    ScanCode[ScanCode[\"KeyR\"] = 27] = \"KeyR\";\n    ScanCode[ScanCode[\"KeyS\"] = 28] = \"KeyS\";\n    ScanCode[ScanCode[\"KeyT\"] = 29] = \"KeyT\";\n    ScanCode[ScanCode[\"KeyU\"] = 30] = \"KeyU\";\n    ScanCode[ScanCode[\"KeyV\"] = 31] = \"KeyV\";\n    ScanCode[ScanCode[\"KeyW\"] = 32] = \"KeyW\";\n    ScanCode[ScanCode[\"KeyX\"] = 33] = \"KeyX\";\n    ScanCode[ScanCode[\"KeyY\"] = 34] = \"KeyY\";\n    ScanCode[ScanCode[\"KeyZ\"] = 35] = \"KeyZ\";\n    ScanCode[ScanCode[\"Digit1\"] = 36] = \"Digit1\";\n    ScanCode[ScanCode[\"Digit2\"] = 37] = \"Digit2\";\n    ScanCode[ScanCode[\"Digit3\"] = 38] = \"Digit3\";\n    ScanCode[ScanCode[\"Digit4\"] = 39] = \"Digit4\";\n    ScanCode[ScanCode[\"Digit5\"] = 40] = \"Digit5\";\n    ScanCode[ScanCode[\"Digit6\"] = 41] = \"Digit6\";\n    ScanCode[ScanCode[\"Digit7\"] = 42] = \"Digit7\";\n    ScanCode[ScanCode[\"Digit8\"] = 43] = \"Digit8\";\n    ScanCode[ScanCode[\"Digit9\"] = 44] = \"Digit9\";\n    ScanCode[ScanCode[\"Digit0\"] = 45] = \"Digit0\";\n    ScanCode[ScanCode[\"Enter\"] = 46] = \"Enter\";\n    ScanCode[ScanCode[\"Escape\"] = 47] = \"Escape\";\n    ScanCode[ScanCode[\"Backspace\"] = 48] = \"Backspace\";\n    ScanCode[ScanCode[\"Tab\"] = 49] = \"Tab\";\n    ScanCode[ScanCode[\"Space\"] = 50] = \"Space\";\n    ScanCode[ScanCode[\"Minus\"] = 51] = \"Minus\";\n    ScanCode[ScanCode[\"Equal\"] = 52] = \"Equal\";\n    ScanCode[ScanCode[\"BracketLeft\"] = 53] = \"BracketLeft\";\n    ScanCode[ScanCode[\"BracketRight\"] = 54] = \"BracketRight\";\n    ScanCode[ScanCode[\"Backslash\"] = 55] = \"Backslash\";\n    ScanCode[ScanCode[\"IntlHash\"] = 56] = \"IntlHash\";\n    ScanCode[ScanCode[\"Semicolon\"] = 57] = \"Semicolon\";\n    ScanCode[ScanCode[\"Quote\"] = 58] = \"Quote\";\n    ScanCode[ScanCode[\"Backquote\"] = 59] = \"Backquote\";\n    ScanCode[ScanCode[\"Comma\"] = 60] = \"Comma\";\n    ScanCode[ScanCode[\"Period\"] = 61] = \"Period\";\n    ScanCode[ScanCode[\"Slash\"] = 62] = \"Slash\";\n    ScanCode[ScanCode[\"CapsLock\"] = 63] = \"CapsLock\";\n    ScanCode[ScanCode[\"F1\"] = 64] = \"F1\";\n    ScanCode[ScanCode[\"F2\"] = 65] = \"F2\";\n    ScanCode[ScanCode[\"F3\"] = 66] = \"F3\";\n    ScanCode[ScanCode[\"F4\"] = 67] = \"F4\";\n    ScanCode[ScanCode[\"F5\"] = 68] = \"F5\";\n    ScanCode[ScanCode[\"F6\"] = 69] = \"F6\";\n    ScanCode[ScanCode[\"F7\"] = 70] = \"F7\";\n    ScanCode[ScanCode[\"F8\"] = 71] = \"F8\";\n    ScanCode[ScanCode[\"F9\"] = 72] = \"F9\";\n    ScanCode[ScanCode[\"F10\"] = 73] = \"F10\";\n    ScanCode[ScanCode[\"F11\"] = 74] = \"F11\";\n    ScanCode[ScanCode[\"F12\"] = 75] = \"F12\";\n    ScanCode[ScanCode[\"PrintScreen\"] = 76] = \"PrintScreen\";\n    ScanCode[ScanCode[\"ScrollLock\"] = 77] = \"ScrollLock\";\n    ScanCode[ScanCode[\"Pause\"] = 78] = \"Pause\";\n    ScanCode[ScanCode[\"Insert\"] = 79] = \"Insert\";\n    ScanCode[ScanCode[\"Home\"] = 80] = \"Home\";\n    ScanCode[ScanCode[\"PageUp\"] = 81] = \"PageUp\";\n    ScanCode[ScanCode[\"Delete\"] = 82] = \"Delete\";\n    ScanCode[ScanCode[\"End\"] = 83] = \"End\";\n    ScanCode[ScanCode[\"PageDown\"] = 84] = \"PageDown\";\n    ScanCode[ScanCode[\"ArrowRight\"] = 85] = \"ArrowRight\";\n    ScanCode[ScanCode[\"ArrowLeft\"] = 86] = \"ArrowLeft\";\n    ScanCode[ScanCode[\"ArrowDown\"] = 87] = \"ArrowDown\";\n    ScanCode[ScanCode[\"ArrowUp\"] = 88] = \"ArrowUp\";\n    ScanCode[ScanCode[\"NumLock\"] = 89] = \"NumLock\";\n    ScanCode[ScanCode[\"NumpadDivide\"] = 90] = \"NumpadDivide\";\n    ScanCode[ScanCode[\"NumpadMultiply\"] = 91] = \"NumpadMultiply\";\n    ScanCode[ScanCode[\"NumpadSubtract\"] = 92] = \"NumpadSubtract\";\n    ScanCode[ScanCode[\"NumpadAdd\"] = 93] = \"NumpadAdd\";\n    ScanCode[ScanCode[\"NumpadEnter\"] = 94] = \"NumpadEnter\";\n    ScanCode[ScanCode[\"Numpad1\"] = 95] = \"Numpad1\";\n    ScanCode[ScanCode[\"Numpad2\"] = 96] = \"Numpad2\";\n    ScanCode[ScanCode[\"Numpad3\"] = 97] = \"Numpad3\";\n    ScanCode[ScanCode[\"Numpad4\"] = 98] = \"Numpad4\";\n    ScanCode[ScanCode[\"Numpad5\"] = 99] = \"Numpad5\";\n    ScanCode[ScanCode[\"Numpad6\"] = 100] = \"Numpad6\";\n    ScanCode[ScanCode[\"Numpad7\"] = 101] = \"Numpad7\";\n    ScanCode[ScanCode[\"Numpad8\"] = 102] = \"Numpad8\";\n    ScanCode[ScanCode[\"Numpad9\"] = 103] = \"Numpad9\";\n    ScanCode[ScanCode[\"Numpad0\"] = 104] = \"Numpad0\";\n    ScanCode[ScanCode[\"NumpadDecimal\"] = 105] = \"NumpadDecimal\";\n    ScanCode[ScanCode[\"IntlBackslash\"] = 106] = \"IntlBackslash\";\n    ScanCode[ScanCode[\"ContextMenu\"] = 107] = \"ContextMenu\";\n    ScanCode[ScanCode[\"Power\"] = 108] = \"Power\";\n    ScanCode[ScanCode[\"NumpadEqual\"] = 109] = \"NumpadEqual\";\n    ScanCode[ScanCode[\"F13\"] = 110] = \"F13\";\n    ScanCode[ScanCode[\"F14\"] = 111] = \"F14\";\n    ScanCode[ScanCode[\"F15\"] = 112] = \"F15\";\n    ScanCode[ScanCode[\"F16\"] = 113] = \"F16\";\n    ScanCode[ScanCode[\"F17\"] = 114] = \"F17\";\n    ScanCode[ScanCode[\"F18\"] = 115] = \"F18\";\n    ScanCode[ScanCode[\"F19\"] = 116] = \"F19\";\n    ScanCode[ScanCode[\"F20\"] = 117] = \"F20\";\n    ScanCode[ScanCode[\"F21\"] = 118] = \"F21\";\n    ScanCode[ScanCode[\"F22\"] = 119] = \"F22\";\n    ScanCode[ScanCode[\"F23\"] = 120] = \"F23\";\n    ScanCode[ScanCode[\"F24\"] = 121] = \"F24\";\n    ScanCode[ScanCode[\"Open\"] = 122] = \"Open\";\n    ScanCode[ScanCode[\"Help\"] = 123] = \"Help\";\n    ScanCode[ScanCode[\"Select\"] = 124] = \"Select\";\n    ScanCode[ScanCode[\"Again\"] = 125] = \"Again\";\n    ScanCode[ScanCode[\"Undo\"] = 126] = \"Undo\";\n    ScanCode[ScanCode[\"Cut\"] = 127] = \"Cut\";\n    ScanCode[ScanCode[\"Copy\"] = 128] = \"Copy\";\n    ScanCode[ScanCode[\"Paste\"] = 129] = \"Paste\";\n    ScanCode[ScanCode[\"Find\"] = 130] = \"Find\";\n    ScanCode[ScanCode[\"AudioVolumeMute\"] = 131] = \"AudioVolumeMute\";\n    ScanCode[ScanCode[\"AudioVolumeUp\"] = 132] = \"AudioVolumeUp\";\n    ScanCode[ScanCode[\"AudioVolumeDown\"] = 133] = \"AudioVolumeDown\";\n    ScanCode[ScanCode[\"NumpadComma\"] = 134] = \"NumpadComma\";\n    ScanCode[ScanCode[\"IntlRo\"] = 135] = \"IntlRo\";\n    ScanCode[ScanCode[\"KanaMode\"] = 136] = \"KanaMode\";\n    ScanCode[ScanCode[\"IntlYen\"] = 137] = \"IntlYen\";\n    ScanCode[ScanCode[\"Convert\"] = 138] = \"Convert\";\n    ScanCode[ScanCode[\"NonConvert\"] = 139] = \"NonConvert\";\n    ScanCode[ScanCode[\"Lang1\"] = 140] = \"Lang1\";\n    ScanCode[ScanCode[\"Lang2\"] = 141] = \"Lang2\";\n    ScanCode[ScanCode[\"Lang3\"] = 142] = \"Lang3\";\n    ScanCode[ScanCode[\"Lang4\"] = 143] = \"Lang4\";\n    ScanCode[ScanCode[\"Lang5\"] = 144] = \"Lang5\";\n    ScanCode[ScanCode[\"Abort\"] = 145] = \"Abort\";\n    ScanCode[ScanCode[\"Props\"] = 146] = \"Props\";\n    ScanCode[ScanCode[\"NumpadParenLeft\"] = 147] = \"NumpadParenLeft\";\n    ScanCode[ScanCode[\"NumpadParenRight\"] = 148] = \"NumpadParenRight\";\n    ScanCode[ScanCode[\"NumpadBackspace\"] = 149] = \"NumpadBackspace\";\n    ScanCode[ScanCode[\"NumpadMemoryStore\"] = 150] = \"NumpadMemoryStore\";\n    ScanCode[ScanCode[\"NumpadMemoryRecall\"] = 151] = \"NumpadMemoryRecall\";\n    ScanCode[ScanCode[\"NumpadMemoryClear\"] = 152] = \"NumpadMemoryClear\";\n    ScanCode[ScanCode[\"NumpadMemoryAdd\"] = 153] = \"NumpadMemoryAdd\";\n    ScanCode[ScanCode[\"NumpadMemorySubtract\"] = 154] = \"NumpadMemorySubtract\";\n    ScanCode[ScanCode[\"NumpadClear\"] = 155] = \"NumpadClear\";\n    ScanCode[ScanCode[\"NumpadClearEntry\"] = 156] = \"NumpadClearEntry\";\n    ScanCode[ScanCode[\"ControlLeft\"] = 157] = \"ControlLeft\";\n    ScanCode[ScanCode[\"ShiftLeft\"] = 158] = \"ShiftLeft\";\n    ScanCode[ScanCode[\"AltLeft\"] = 159] = \"AltLeft\";\n    ScanCode[ScanCode[\"MetaLeft\"] = 160] = \"MetaLeft\";\n    ScanCode[ScanCode[\"ControlRight\"] = 161] = \"ControlRight\";\n    ScanCode[ScanCode[\"ShiftRight\"] = 162] = \"ShiftRight\";\n    ScanCode[ScanCode[\"AltRight\"] = 163] = \"AltRight\";\n    ScanCode[ScanCode[\"MetaRight\"] = 164] = \"MetaRight\";\n    ScanCode[ScanCode[\"BrightnessUp\"] = 165] = \"BrightnessUp\";\n    ScanCode[ScanCode[\"BrightnessDown\"] = 166] = \"BrightnessDown\";\n    ScanCode[ScanCode[\"MediaPlay\"] = 167] = \"MediaPlay\";\n    ScanCode[ScanCode[\"MediaRecord\"] = 168] = \"MediaRecord\";\n    ScanCode[ScanCode[\"MediaFastForward\"] = 169] = \"MediaFastForward\";\n    ScanCode[ScanCode[\"MediaRewind\"] = 170] = \"MediaRewind\";\n    ScanCode[ScanCode[\"MediaTrackNext\"] = 171] = \"MediaTrackNext\";\n    ScanCode[ScanCode[\"MediaTrackPrevious\"] = 172] = \"MediaTrackPrevious\";\n    ScanCode[ScanCode[\"MediaStop\"] = 173] = \"MediaStop\";\n    ScanCode[ScanCode[\"Eject\"] = 174] = \"Eject\";\n    ScanCode[ScanCode[\"MediaPlayPause\"] = 175] = \"MediaPlayPause\";\n    ScanCode[ScanCode[\"MediaSelect\"] = 176] = \"MediaSelect\";\n    ScanCode[ScanCode[\"LaunchMail\"] = 177] = \"LaunchMail\";\n    ScanCode[ScanCode[\"LaunchApp2\"] = 178] = \"LaunchApp2\";\n    ScanCode[ScanCode[\"LaunchApp1\"] = 179] = \"LaunchApp1\";\n    ScanCode[ScanCode[\"SelectTask\"] = 180] = \"SelectTask\";\n    ScanCode[ScanCode[\"LaunchScreenSaver\"] = 181] = \"LaunchScreenSaver\";\n    ScanCode[ScanCode[\"BrowserSearch\"] = 182] = \"BrowserSearch\";\n    ScanCode[ScanCode[\"BrowserHome\"] = 183] = \"BrowserHome\";\n    ScanCode[ScanCode[\"BrowserBack\"] = 184] = \"BrowserBack\";\n    ScanCode[ScanCode[\"BrowserForward\"] = 185] = \"BrowserForward\";\n    ScanCode[ScanCode[\"BrowserStop\"] = 186] = \"BrowserStop\";\n    ScanCode[ScanCode[\"BrowserRefresh\"] = 187] = \"BrowserRefresh\";\n    ScanCode[ScanCode[\"BrowserFavorites\"] = 188] = \"BrowserFavorites\";\n    ScanCode[ScanCode[\"ZoomToggle\"] = 189] = \"ZoomToggle\";\n    ScanCode[ScanCode[\"MailReply\"] = 190] = \"MailReply\";\n    ScanCode[ScanCode[\"MailForward\"] = 191] = \"MailForward\";\n    ScanCode[ScanCode[\"MailSend\"] = 192] = \"MailSend\";\n    ScanCode[ScanCode[\"MAX_VALUE\"] = 193] = \"MAX_VALUE\";\n})(ScanCode || (ScanCode = {})));\nclass KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || KeyCode.Unknown;\n    }\n}\nconst uiMap = ( new KeyCodeStrMap());\nconst userSettingsUSMap = ( new KeyCodeStrMap());\nconst userSettingsGeneralMap = ( new KeyCodeStrMap());\nconst EVENT_KEY_CODE_MAP = ( new Array(230));\nconst NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE = {};\nconst scanCodeIntToStr = [];\nconst scanCodeStrToInt = Object.create(null);\nconst scanCodeLowerCaseStrToInt = Object.create(null);\nconst ScanCodeUtils = {\n    lowerCaseToEnum: (scanCode) => scanCodeLowerCaseStrToInt[scanCode] || ScanCode.None,\n    toEnum: (scanCode) => scanCodeStrToInt[scanCode] || ScanCode.None,\n    toString: (scanCode) => scanCodeIntToStr[scanCode] || 'None'\n};\nconst IMMUTABLE_CODE_TO_KEY_CODE = [];\nconst IMMUTABLE_KEY_CODE_TO_CODE = [];\nfor (let i = 0; i <= ScanCode.MAX_VALUE; i++) {\n    IMMUTABLE_CODE_TO_KEY_CODE[i] = KeyCode.DependsOnKbLayout;\n}\nfor (let i = 0; i <= KeyCode.MAX_VALUE; i++) {\n    IMMUTABLE_KEY_CODE_TO_CODE[i] = ScanCode.DependsOnKbLayout;\n}\n(function () {\n    const empty = '';\n    const mappings = [\n        [1, ScanCode.None, 'None', KeyCode.Unknown, 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n        [1, ScanCode.Hyper, 'Hyper', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Super, 'Super', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Fn, 'Fn', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.FnLock, 'FnLock', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Suspend, 'Suspend', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Resume, 'Resume', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Turbo, 'Turbo', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Sleep, 'Sleep', KeyCode.Unknown, empty, 0, 'VK_SLEEP', empty, empty],\n        [1, ScanCode.WakeUp, 'WakeUp', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [0, ScanCode.KeyA, 'KeyA', KeyCode.KeyA, 'A', 65, 'VK_A', empty, empty],\n        [0, ScanCode.KeyB, 'KeyB', KeyCode.KeyB, 'B', 66, 'VK_B', empty, empty],\n        [0, ScanCode.KeyC, 'KeyC', KeyCode.KeyC, 'C', 67, 'VK_C', empty, empty],\n        [0, ScanCode.KeyD, 'KeyD', KeyCode.KeyD, 'D', 68, 'VK_D', empty, empty],\n        [0, ScanCode.KeyE, 'KeyE', KeyCode.KeyE, 'E', 69, 'VK_E', empty, empty],\n        [0, ScanCode.KeyF, 'KeyF', KeyCode.KeyF, 'F', 70, 'VK_F', empty, empty],\n        [0, ScanCode.KeyG, 'KeyG', KeyCode.KeyG, 'G', 71, 'VK_G', empty, empty],\n        [0, ScanCode.KeyH, 'KeyH', KeyCode.KeyH, 'H', 72, 'VK_H', empty, empty],\n        [0, ScanCode.KeyI, 'KeyI', KeyCode.KeyI, 'I', 73, 'VK_I', empty, empty],\n        [0, ScanCode.KeyJ, 'KeyJ', KeyCode.KeyJ, 'J', 74, 'VK_J', empty, empty],\n        [0, ScanCode.KeyK, 'KeyK', KeyCode.KeyK, 'K', 75, 'VK_K', empty, empty],\n        [0, ScanCode.KeyL, 'KeyL', KeyCode.KeyL, 'L', 76, 'VK_L', empty, empty],\n        [0, ScanCode.KeyM, 'KeyM', KeyCode.KeyM, 'M', 77, 'VK_M', empty, empty],\n        [0, ScanCode.KeyN, 'KeyN', KeyCode.KeyN, 'N', 78, 'VK_N', empty, empty],\n        [0, ScanCode.KeyO, 'KeyO', KeyCode.KeyO, 'O', 79, 'VK_O', empty, empty],\n        [0, ScanCode.KeyP, 'KeyP', KeyCode.KeyP, 'P', 80, 'VK_P', empty, empty],\n        [0, ScanCode.KeyQ, 'KeyQ', KeyCode.KeyQ, 'Q', 81, 'VK_Q', empty, empty],\n        [0, ScanCode.KeyR, 'KeyR', KeyCode.KeyR, 'R', 82, 'VK_R', empty, empty],\n        [0, ScanCode.KeyS, 'KeyS', KeyCode.KeyS, 'S', 83, 'VK_S', empty, empty],\n        [0, ScanCode.KeyT, 'KeyT', KeyCode.KeyT, 'T', 84, 'VK_T', empty, empty],\n        [0, ScanCode.KeyU, 'KeyU', KeyCode.KeyU, 'U', 85, 'VK_U', empty, empty],\n        [0, ScanCode.KeyV, 'KeyV', KeyCode.KeyV, 'V', 86, 'VK_V', empty, empty],\n        [0, ScanCode.KeyW, 'KeyW', KeyCode.KeyW, 'W', 87, 'VK_W', empty, empty],\n        [0, ScanCode.KeyX, 'KeyX', KeyCode.KeyX, 'X', 88, 'VK_X', empty, empty],\n        [0, ScanCode.KeyY, 'KeyY', KeyCode.KeyY, 'Y', 89, 'VK_Y', empty, empty],\n        [0, ScanCode.KeyZ, 'KeyZ', KeyCode.KeyZ, 'Z', 90, 'VK_Z', empty, empty],\n        [0, ScanCode.Digit1, 'Digit1', KeyCode.Digit1, '1', 49, 'VK_1', empty, empty],\n        [0, ScanCode.Digit2, 'Digit2', KeyCode.Digit2, '2', 50, 'VK_2', empty, empty],\n        [0, ScanCode.Digit3, 'Digit3', KeyCode.Digit3, '3', 51, 'VK_3', empty, empty],\n        [0, ScanCode.Digit4, 'Digit4', KeyCode.Digit4, '4', 52, 'VK_4', empty, empty],\n        [0, ScanCode.Digit5, 'Digit5', KeyCode.Digit5, '5', 53, 'VK_5', empty, empty],\n        [0, ScanCode.Digit6, 'Digit6', KeyCode.Digit6, '6', 54, 'VK_6', empty, empty],\n        [0, ScanCode.Digit7, 'Digit7', KeyCode.Digit7, '7', 55, 'VK_7', empty, empty],\n        [0, ScanCode.Digit8, 'Digit8', KeyCode.Digit8, '8', 56, 'VK_8', empty, empty],\n        [0, ScanCode.Digit9, 'Digit9', KeyCode.Digit9, '9', 57, 'VK_9', empty, empty],\n        [0, ScanCode.Digit0, 'Digit0', KeyCode.Digit0, '0', 48, 'VK_0', empty, empty],\n        [1, ScanCode.Enter, 'Enter', KeyCode.Enter, 'Enter', 13, 'VK_RETURN', empty, empty],\n        [1, ScanCode.Escape, 'Escape', KeyCode.Escape, 'Escape', 27, 'VK_ESCAPE', empty, empty],\n        [1, ScanCode.Backspace, 'Backspace', KeyCode.Backspace, 'Backspace', 8, 'VK_BACK', empty, empty],\n        [1, ScanCode.Tab, 'Tab', KeyCode.Tab, 'Tab', 9, 'VK_TAB', empty, empty],\n        [1, ScanCode.Space, 'Space', KeyCode.Space, 'Space', 32, 'VK_SPACE', empty, empty],\n        [0, ScanCode.Minus, 'Minus', KeyCode.Minus, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n        [0, ScanCode.Equal, 'Equal', KeyCode.Equal, '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n        [0, ScanCode.BracketLeft, 'BracketLeft', KeyCode.BracketLeft, '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n        [0, ScanCode.BracketRight, 'BracketRight', KeyCode.BracketRight, ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n        [0, ScanCode.Backslash, 'Backslash', KeyCode.Backslash, '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n        [0, ScanCode.IntlHash, 'IntlHash', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [0, ScanCode.Semicolon, 'Semicolon', KeyCode.Semicolon, ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n        [0, ScanCode.Quote, 'Quote', KeyCode.Quote, '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n        [0, ScanCode.Backquote, 'Backquote', KeyCode.Backquote, '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n        [0, ScanCode.Comma, 'Comma', KeyCode.Comma, ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n        [0, ScanCode.Period, 'Period', KeyCode.Period, '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n        [0, ScanCode.Slash, 'Slash', KeyCode.Slash, '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n        [1, ScanCode.CapsLock, 'CapsLock', KeyCode.CapsLock, 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n        [1, ScanCode.F1, 'F1', KeyCode.F1, 'F1', 112, 'VK_F1', empty, empty],\n        [1, ScanCode.F2, 'F2', KeyCode.F2, 'F2', 113, 'VK_F2', empty, empty],\n        [1, ScanCode.F3, 'F3', KeyCode.F3, 'F3', 114, 'VK_F3', empty, empty],\n        [1, ScanCode.F4, 'F4', KeyCode.F4, 'F4', 115, 'VK_F4', empty, empty],\n        [1, ScanCode.F5, 'F5', KeyCode.F5, 'F5', 116, 'VK_F5', empty, empty],\n        [1, ScanCode.F6, 'F6', KeyCode.F6, 'F6', 117, 'VK_F6', empty, empty],\n        [1, ScanCode.F7, 'F7', KeyCode.F7, 'F7', 118, 'VK_F7', empty, empty],\n        [1, ScanCode.F8, 'F8', KeyCode.F8, 'F8', 119, 'VK_F8', empty, empty],\n        [1, ScanCode.F9, 'F9', KeyCode.F9, 'F9', 120, 'VK_F9', empty, empty],\n        [1, ScanCode.F10, 'F10', KeyCode.F10, 'F10', 121, 'VK_F10', empty, empty],\n        [1, ScanCode.F11, 'F11', KeyCode.F11, 'F11', 122, 'VK_F11', empty, empty],\n        [1, ScanCode.F12, 'F12', KeyCode.F12, 'F12', 123, 'VK_F12', empty, empty],\n        [1, ScanCode.PrintScreen, 'PrintScreen', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.ScrollLock, 'ScrollLock', KeyCode.ScrollLock, 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n        [1, ScanCode.Pause, 'Pause', KeyCode.PauseBreak, 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n        [1, ScanCode.Insert, 'Insert', KeyCode.Insert, 'Insert', 45, 'VK_INSERT', empty, empty],\n        [1, ScanCode.Home, 'Home', KeyCode.Home, 'Home', 36, 'VK_HOME', empty, empty],\n        [1, ScanCode.PageUp, 'PageUp', KeyCode.PageUp, 'PageUp', 33, 'VK_PRIOR', empty, empty],\n        [1, ScanCode.Delete, 'Delete', KeyCode.Delete, 'Delete', 46, 'VK_DELETE', empty, empty],\n        [1, ScanCode.End, 'End', KeyCode.End, 'End', 35, 'VK_END', empty, empty],\n        [1, ScanCode.PageDown, 'PageDown', KeyCode.PageDown, 'PageDown', 34, 'VK_NEXT', empty, empty],\n        [1, ScanCode.ArrowRight, 'ArrowRight', KeyCode.RightArrow, 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n        [1, ScanCode.ArrowLeft, 'ArrowLeft', KeyCode.LeftArrow, 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n        [1, ScanCode.ArrowDown, 'ArrowDown', KeyCode.DownArrow, 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n        [1, ScanCode.ArrowUp, 'ArrowUp', KeyCode.UpArrow, 'UpArrow', 38, 'VK_UP', 'Up', empty],\n        [1, ScanCode.NumLock, 'NumLock', KeyCode.NumLock, 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n        [1, ScanCode.NumpadDivide, 'NumpadDivide', KeyCode.NumpadDivide, 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n        [1, ScanCode.NumpadMultiply, 'NumpadMultiply', KeyCode.NumpadMultiply, 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n        [1, ScanCode.NumpadSubtract, 'NumpadSubtract', KeyCode.NumpadSubtract, 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n        [1, ScanCode.NumpadAdd, 'NumpadAdd', KeyCode.NumpadAdd, 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n        [1, ScanCode.NumpadEnter, 'NumpadEnter', KeyCode.Enter, empty, 0, empty, empty, empty],\n        [1, ScanCode.Numpad1, 'Numpad1', KeyCode.Numpad1, 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n        [1, ScanCode.Numpad2, 'Numpad2', KeyCode.Numpad2, 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n        [1, ScanCode.Numpad3, 'Numpad3', KeyCode.Numpad3, 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n        [1, ScanCode.Numpad4, 'Numpad4', KeyCode.Numpad4, 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n        [1, ScanCode.Numpad5, 'Numpad5', KeyCode.Numpad5, 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n        [1, ScanCode.Numpad6, 'Numpad6', KeyCode.Numpad6, 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n        [1, ScanCode.Numpad7, 'Numpad7', KeyCode.Numpad7, 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n        [1, ScanCode.Numpad8, 'Numpad8', KeyCode.Numpad8, 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n        [1, ScanCode.Numpad9, 'Numpad9', KeyCode.Numpad9, 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n        [1, ScanCode.Numpad0, 'Numpad0', KeyCode.Numpad0, 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n        [1, ScanCode.NumpadDecimal, 'NumpadDecimal', KeyCode.NumpadDecimal, 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n        [0, ScanCode.IntlBackslash, 'IntlBackslash', KeyCode.IntlBackslash, 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n        [1, ScanCode.ContextMenu, 'ContextMenu', KeyCode.ContextMenu, 'ContextMenu', 93, empty, empty, empty],\n        [1, ScanCode.Power, 'Power', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadEqual, 'NumpadEqual', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.F13, 'F13', KeyCode.F13, 'F13', 124, 'VK_F13', empty, empty],\n        [1, ScanCode.F14, 'F14', KeyCode.F14, 'F14', 125, 'VK_F14', empty, empty],\n        [1, ScanCode.F15, 'F15', KeyCode.F15, 'F15', 126, 'VK_F15', empty, empty],\n        [1, ScanCode.F16, 'F16', KeyCode.F16, 'F16', 127, 'VK_F16', empty, empty],\n        [1, ScanCode.F17, 'F17', KeyCode.F17, 'F17', 128, 'VK_F17', empty, empty],\n        [1, ScanCode.F18, 'F18', KeyCode.F18, 'F18', 129, 'VK_F18', empty, empty],\n        [1, ScanCode.F19, 'F19', KeyCode.F19, 'F19', 130, 'VK_F19', empty, empty],\n        [1, ScanCode.F20, 'F20', KeyCode.F20, 'F20', 131, 'VK_F20', empty, empty],\n        [1, ScanCode.F21, 'F21', KeyCode.F21, 'F21', 132, 'VK_F21', empty, empty],\n        [1, ScanCode.F22, 'F22', KeyCode.F22, 'F22', 133, 'VK_F22', empty, empty],\n        [1, ScanCode.F23, 'F23', KeyCode.F23, 'F23', 134, 'VK_F23', empty, empty],\n        [1, ScanCode.F24, 'F24', KeyCode.F24, 'F24', 135, 'VK_F24', empty, empty],\n        [1, ScanCode.Open, 'Open', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Help, 'Help', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Select, 'Select', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Again, 'Again', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Undo, 'Undo', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Cut, 'Cut', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Copy, 'Copy', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Paste, 'Paste', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Find, 'Find', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.AudioVolumeMute, 'AudioVolumeMute', KeyCode.AudioVolumeMute, 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n        [1, ScanCode.AudioVolumeUp, 'AudioVolumeUp', KeyCode.AudioVolumeUp, 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n        [1, ScanCode.AudioVolumeDown, 'AudioVolumeDown', KeyCode.AudioVolumeDown, 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n        [1, ScanCode.NumpadComma, 'NumpadComma', KeyCode.NUMPAD_SEPARATOR, 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n        [0, ScanCode.IntlRo, 'IntlRo', KeyCode.ABNT_C1, 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n        [1, ScanCode.KanaMode, 'KanaMode', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [0, ScanCode.IntlYen, 'IntlYen', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Convert, 'Convert', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NonConvert, 'NonConvert', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Lang1, 'Lang1', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Lang2, 'Lang2', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Lang3, 'Lang3', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Lang4, 'Lang4', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Lang5, 'Lang5', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Abort, 'Abort', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.Props, 'Props', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadParenLeft, 'NumpadParenLeft', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadParenRight, 'NumpadParenRight', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadBackspace, 'NumpadBackspace', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadMemoryStore, 'NumpadMemoryStore', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadMemoryRecall, 'NumpadMemoryRecall', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadMemoryClear, 'NumpadMemoryClear', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadMemoryAdd, 'NumpadMemoryAdd', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadMemorySubtract, 'NumpadMemorySubtract', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.NumpadClear, 'NumpadClear', KeyCode.Clear, 'Clear', 12, 'VK_CLEAR', empty, empty],\n        [1, ScanCode.NumpadClearEntry, 'NumpadClearEntry', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Ctrl, 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Shift, 'Shift', 16, 'VK_SHIFT', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Alt, 'Alt', 18, 'VK_MENU', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Meta, 'Meta', 91, 'VK_COMMAND', empty, empty],\n        [1, ScanCode.ControlLeft, 'ControlLeft', KeyCode.Ctrl, empty, 0, 'VK_LCONTROL', empty, empty],\n        [1, ScanCode.ShiftLeft, 'ShiftLeft', KeyCode.Shift, empty, 0, 'VK_LSHIFT', empty, empty],\n        [1, ScanCode.AltLeft, 'AltLeft', KeyCode.Alt, empty, 0, 'VK_LMENU', empty, empty],\n        [1, ScanCode.MetaLeft, 'MetaLeft', KeyCode.Meta, empty, 0, 'VK_LWIN', empty, empty],\n        [1, ScanCode.ControlRight, 'ControlRight', KeyCode.Ctrl, empty, 0, 'VK_RCONTROL', empty, empty],\n        [1, ScanCode.ShiftRight, 'ShiftRight', KeyCode.Shift, empty, 0, 'VK_RSHIFT', empty, empty],\n        [1, ScanCode.AltRight, 'AltRight', KeyCode.Alt, empty, 0, 'VK_RMENU', empty, empty],\n        [1, ScanCode.MetaRight, 'MetaRight', KeyCode.Meta, empty, 0, 'VK_RWIN', empty, empty],\n        [1, ScanCode.BrightnessUp, 'BrightnessUp', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.BrightnessDown, 'BrightnessDown', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MediaPlay, 'MediaPlay', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MediaRecord, 'MediaRecord', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MediaFastForward, 'MediaFastForward', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MediaRewind, 'MediaRewind', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MediaTrackNext, 'MediaTrackNext', KeyCode.MediaTrackNext, 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n        [1, ScanCode.MediaTrackPrevious, 'MediaTrackPrevious', KeyCode.MediaTrackPrevious, 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n        [1, ScanCode.MediaStop, 'MediaStop', KeyCode.MediaStop, 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n        [1, ScanCode.Eject, 'Eject', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MediaPlayPause, 'MediaPlayPause', KeyCode.MediaPlayPause, 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n        [1, ScanCode.MediaSelect, 'MediaSelect', KeyCode.LaunchMediaPlayer, 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n        [1, ScanCode.LaunchMail, 'LaunchMail', KeyCode.LaunchMail, 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n        [1, ScanCode.LaunchApp2, 'LaunchApp2', KeyCode.LaunchApp2, 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n        [1, ScanCode.LaunchApp1, 'LaunchApp1', KeyCode.Unknown, empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n        [1, ScanCode.SelectTask, 'SelectTask', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.LaunchScreenSaver, 'LaunchScreenSaver', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.BrowserSearch, 'BrowserSearch', KeyCode.BrowserSearch, 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n        [1, ScanCode.BrowserHome, 'BrowserHome', KeyCode.BrowserHome, 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n        [1, ScanCode.BrowserBack, 'BrowserBack', KeyCode.BrowserBack, 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n        [1, ScanCode.BrowserForward, 'BrowserForward', KeyCode.BrowserForward, 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n        [1, ScanCode.BrowserStop, 'BrowserStop', KeyCode.Unknown, empty, 0, 'VK_BROWSER_STOP', empty, empty],\n        [1, ScanCode.BrowserRefresh, 'BrowserRefresh', KeyCode.Unknown, empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n        [1, ScanCode.BrowserFavorites, 'BrowserFavorites', KeyCode.Unknown, empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n        [1, ScanCode.ZoomToggle, 'ZoomToggle', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MailReply, 'MailReply', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MailForward, 'MailForward', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.MailSend, 'MailSend', KeyCode.Unknown, empty, 0, empty, empty, empty],\n        [1, ScanCode.None, empty, KeyCode.KEY_IN_COMPOSITION, 'KeyInComposition', 229, empty, empty, empty],\n        [1, ScanCode.None, empty, KeyCode.ABNT_C2, 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.OEM_8, 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_KANA', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_HANGUL', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_JUNJA', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_FINAL', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_HANJA', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_KANJI', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_CONVERT', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_NONCONVERT', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_ACCEPT', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_MODECHANGE', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_SELECT', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PRINT', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_EXECUTE', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_SNAPSHOT', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_HELP', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_APPS', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PROCESSKEY', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PACKET', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_ATTN', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_CRSEL', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_EXSEL', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_EREOF', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PLAY', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_ZOOM', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_NONAME', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PA1', empty, empty],\n        [1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_OEM_CLEAR', empty, empty],\n    ];\n    const seenKeyCode = [];\n    const seenScanCode = [];\n    for (const mapping of mappings) {\n        const [immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n        if (!seenScanCode[scanCode]) {\n            seenScanCode[scanCode] = true;\n            scanCodeIntToStr[scanCode] = scanCodeStr;\n            scanCodeStrToInt[scanCodeStr] = scanCode;\n            scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n            if (immutable) {\n                IMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n                if ((keyCode !== KeyCode.Unknown)\n                    && (keyCode !== KeyCode.Enter)\n                    && (keyCode !== KeyCode.Ctrl)\n                    && (keyCode !== KeyCode.Shift)\n                    && (keyCode !== KeyCode.Alt)\n                    && (keyCode !== KeyCode.Meta)) {\n                    IMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n                }\n            }\n        }\n        if (!seenKeyCode[keyCode]) {\n            seenKeyCode[keyCode] = true;\n            if (!keyCodeStr) {\n                throw ( new Error(\n                    `String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`\n                ));\n            }\n            uiMap.define(keyCode, keyCodeStr);\n            userSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n            userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n        }\n        if (eventKeyCode) {\n            EVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n        }\n        if (vkey) {\n            NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n        }\n    }\n    IMMUTABLE_KEY_CODE_TO_CODE[KeyCode.Enter] = ScanCode.Enter;\n})();\nvar KeyCodeUtils;\n( (function(KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n    function toElectronAccelerator(keyCode) {\n        if (keyCode >= KeyCode.Numpad0 && keyCode <= KeyCode.NumpadDivide) {\n            return null;\n        }\n        switch (keyCode) {\n            case KeyCode.UpArrow:\n                return 'Up';\n            case KeyCode.DownArrow:\n                return 'Down';\n            case KeyCode.LeftArrow:\n                return 'Left';\n            case KeyCode.RightArrow:\n                return 'Right';\n        }\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toElectronAccelerator = toElectronAccelerator;\n})(KeyCodeUtils || (KeyCodeUtils = {})));\nvar KeyMod$1;\n( (function(KeyMod) {\n    KeyMod[KeyMod[\"CtrlCmd\"] = 2048] = \"CtrlCmd\";\n    KeyMod[KeyMod[\"Shift\"] = 1024] = \"Shift\";\n    KeyMod[KeyMod[\"Alt\"] = 512] = \"Alt\";\n    KeyMod[KeyMod[\"WinCtrl\"] = 256] = \"WinCtrl\";\n})(KeyMod$1 || (KeyMod$1 = {})));\nfunction KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\nexport { EVENT_KEY_CODE_MAP, IMMUTABLE_CODE_TO_KEY_CODE, IMMUTABLE_KEY_CODE_TO_CODE, KeyChord, KeyCode, KeyCodeUtils, KeyMod$1 as KeyMod, NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE, ScanCode, ScanCodeUtils };\n","import { Codicon } from '../../base/common/codicons.js';\nimport { URI } from '../../base/common/uri.js';\nimport { EditOperation } from './core/editOperation.js';\nimport { Range } from './core/range.js';\nimport { TokenizationRegistry as TokenizationRegistry$1 } from './tokenizationRegistry.js';\nimport { localizeWithPath } from '../../nls.js';\nconst _moduleId = \"vs/editor/common/languages\";\nclass Token {\n    constructor(offset, type, language) {\n        this.offset = offset;\n        this.type = type;\n        this.language = language;\n        this._tokenBrand = undefined;\n    }\n    toString() {\n        return '(' + this.offset + ', ' + this.type + ')';\n    }\n}\nclass TokenizationResult {\n    constructor(tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n        this._tokenizationResultBrand = undefined;\n    }\n}\nclass EncodedTokenizationResult {\n    constructor(\n    tokens, endState) {\n        this.tokens = tokens;\n        this.endState = endState;\n        this._encodedTokenizationResultBrand = undefined;\n    }\n}\nvar HoverVerbosityAction;\n( ((function(HoverVerbosityAction) {\n    HoverVerbosityAction[HoverVerbosityAction[\"Increase\"] = 0] = \"Increase\";\n    HoverVerbosityAction[HoverVerbosityAction[\"Decrease\"] = 1] = \"Decrease\";\n})(HoverVerbosityAction || (HoverVerbosityAction = {}))));\nvar CompletionItemKind;\n( ((function(CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\n    CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {}))));\nvar CompletionItemKinds;\n( ((function(CompletionItemKinds) {\n    const byKind = ( (new Map()));\n    byKind.set(CompletionItemKind.Method, Codicon.symbolMethod);\n    byKind.set(CompletionItemKind.Function, Codicon.symbolFunction);\n    byKind.set(CompletionItemKind.Constructor, Codicon.symbolConstructor);\n    byKind.set(CompletionItemKind.Field, Codicon.symbolField);\n    byKind.set(CompletionItemKind.Variable, Codicon.symbolVariable);\n    byKind.set(CompletionItemKind.Class, Codicon.symbolClass);\n    byKind.set(CompletionItemKind.Struct, Codicon.symbolStruct);\n    byKind.set(CompletionItemKind.Interface, Codicon.symbolInterface);\n    byKind.set(CompletionItemKind.Module, Codicon.symbolModule);\n    byKind.set(CompletionItemKind.Property, Codicon.symbolProperty);\n    byKind.set(CompletionItemKind.Event, Codicon.symbolEvent);\n    byKind.set(CompletionItemKind.Operator, Codicon.symbolOperator);\n    byKind.set(CompletionItemKind.Unit, Codicon.symbolUnit);\n    byKind.set(CompletionItemKind.Value, Codicon.symbolValue);\n    byKind.set(CompletionItemKind.Enum, Codicon.symbolEnum);\n    byKind.set(CompletionItemKind.Constant, Codicon.symbolConstant);\n    byKind.set(CompletionItemKind.Enum, Codicon.symbolEnum);\n    byKind.set(CompletionItemKind.EnumMember, Codicon.symbolEnumMember);\n    byKind.set(CompletionItemKind.Keyword, Codicon.symbolKeyword);\n    byKind.set(CompletionItemKind.Snippet, Codicon.symbolSnippet);\n    byKind.set(CompletionItemKind.Text, Codicon.symbolText);\n    byKind.set(CompletionItemKind.Color, Codicon.symbolColor);\n    byKind.set(CompletionItemKind.File, Codicon.symbolFile);\n    byKind.set(CompletionItemKind.Reference, Codicon.symbolReference);\n    byKind.set(CompletionItemKind.Customcolor, Codicon.symbolCustomColor);\n    byKind.set(CompletionItemKind.Folder, Codicon.symbolFolder);\n    byKind.set(CompletionItemKind.TypeParameter, Codicon.symbolTypeParameter);\n    byKind.set(CompletionItemKind.User, Codicon.account);\n    byKind.set(CompletionItemKind.Issue, Codicon.issues);\n    function toIcon(kind) {\n        let codicon = byKind.get(kind);\n        if (!codicon) {\n            console.info('No codicon found for CompletionItemKind ' + kind);\n            codicon = Codicon.symbolProperty;\n        }\n        return codicon;\n    }\n    CompletionItemKinds.toIcon = toIcon;\n    const data = ( (new Map()));\n    data.set('method', CompletionItemKind.Method);\n    data.set('function', CompletionItemKind.Function);\n    data.set('constructor', CompletionItemKind.Constructor);\n    data.set('field', CompletionItemKind.Field);\n    data.set('variable', CompletionItemKind.Variable);\n    data.set('class', CompletionItemKind.Class);\n    data.set('struct', CompletionItemKind.Struct);\n    data.set('interface', CompletionItemKind.Interface);\n    data.set('module', CompletionItemKind.Module);\n    data.set('property', CompletionItemKind.Property);\n    data.set('event', CompletionItemKind.Event);\n    data.set('operator', CompletionItemKind.Operator);\n    data.set('unit', CompletionItemKind.Unit);\n    data.set('value', CompletionItemKind.Value);\n    data.set('constant', CompletionItemKind.Constant);\n    data.set('enum', CompletionItemKind.Enum);\n    data.set('enum-member', CompletionItemKind.EnumMember);\n    data.set('enumMember', CompletionItemKind.EnumMember);\n    data.set('keyword', CompletionItemKind.Keyword);\n    data.set('snippet', CompletionItemKind.Snippet);\n    data.set('text', CompletionItemKind.Text);\n    data.set('color', CompletionItemKind.Color);\n    data.set('file', CompletionItemKind.File);\n    data.set('reference', CompletionItemKind.Reference);\n    data.set('customcolor', CompletionItemKind.Customcolor);\n    data.set('folder', CompletionItemKind.Folder);\n    data.set('type-parameter', CompletionItemKind.TypeParameter);\n    data.set('typeParameter', CompletionItemKind.TypeParameter);\n    data.set('account', CompletionItemKind.User);\n    data.set('issue', CompletionItemKind.Issue);\n    function fromString(value, strict) {\n        let res = data.get(value);\n        if (typeof res === 'undefined' && !strict) {\n            res = CompletionItemKind.Property;\n        }\n        return res;\n    }\n    CompletionItemKinds.fromString = fromString;\n})(CompletionItemKinds || (CompletionItemKinds = {}))));\nvar CompletionItemTag;\n( ((function(CompletionItemTag) {\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(CompletionItemTag || (CompletionItemTag = {}))));\nvar CompletionItemInsertTextRule;\n( ((function(CompletionItemInsertTextRule) {\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"None\"] = 0] = \"None\";\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}))));\nvar PartialAcceptTriggerKind;\n( ((function(PartialAcceptTriggerKind) {\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Word\"] = 0] = \"Word\";\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Line\"] = 1] = \"Line\";\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Suggest\"] = 2] = \"Suggest\";\n})(PartialAcceptTriggerKind || (PartialAcceptTriggerKind = {}))));\nvar CompletionTriggerKind;\n( ((function(CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {}))));\nvar InlineCompletionTriggerKind;\n( ((function(InlineCompletionTriggerKind) {\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}))));\nclass SelectedSuggestionInfo {\n    constructor(range, text, completionKind, isSnippetText) {\n        this.range = range;\n        this.text = text;\n        this.completionKind = completionKind;\n        this.isSnippetText = isSnippetText;\n    }\n    equals(other) {\n        return Range.lift(this.range).equalsRange(other.range)\n            && this.text === other.text\n            && this.completionKind === other.completionKind\n            && this.isSnippetText === other.isSnippetText;\n    }\n}\nvar CodeActionTriggerType;\n( ((function(CodeActionTriggerType) {\n    CodeActionTriggerType[CodeActionTriggerType[\"Invoke\"] = 1] = \"Invoke\";\n    CodeActionTriggerType[CodeActionTriggerType[\"Auto\"] = 2] = \"Auto\";\n})(CodeActionTriggerType || (CodeActionTriggerType = {}))));\nvar DocumentPasteTriggerKind;\n( ((function(DocumentPasteTriggerKind) {\n    DocumentPasteTriggerKind[DocumentPasteTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    DocumentPasteTriggerKind[DocumentPasteTriggerKind[\"PasteAs\"] = 1] = \"PasteAs\";\n})(DocumentPasteTriggerKind || (DocumentPasteTriggerKind = {}))));\nvar SignatureHelpTriggerKind;\n( ((function(SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}))));\nvar DocumentHighlightKind;\n( ((function(DocumentHighlightKind) {\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {}))));\nfunction isLocationLink(thing) {\n    return thing\n        && URI.isUri(thing.uri)\n        && Range.isIRange(thing.range)\n        && (Range.isIRange(thing.originSelectionRange) || Range.isIRange(thing.targetSelectionRange));\n}\nvar SymbolKind;\n( ((function(SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {}))));\nconst symbolKindNames = {\n    [SymbolKind.Array]: ( localizeWithPath(_moduleId, 0, \"array\")),\n    [SymbolKind.Boolean]: ( localizeWithPath(_moduleId, 1, \"boolean\")),\n    [SymbolKind.Class]: ( localizeWithPath(_moduleId, 2, \"class\")),\n    [SymbolKind.Constant]: ( localizeWithPath(_moduleId, 3, \"constant\")),\n    [SymbolKind.Constructor]: ( localizeWithPath(_moduleId, 4, \"constructor\")),\n    [SymbolKind.Enum]: ( localizeWithPath(_moduleId, 5, \"enumeration\")),\n    [SymbolKind.EnumMember]: ( localizeWithPath(_moduleId, 6, \"enumeration member\")),\n    [SymbolKind.Event]: ( localizeWithPath(_moduleId, 7, \"event\")),\n    [SymbolKind.Field]: ( localizeWithPath(_moduleId, 8, \"field\")),\n    [SymbolKind.File]: ( localizeWithPath(_moduleId, 9, \"file\")),\n    [SymbolKind.Function]: ( localizeWithPath(_moduleId, 10, \"function\")),\n    [SymbolKind.Interface]: ( localizeWithPath(_moduleId, 11, \"interface\")),\n    [SymbolKind.Key]: ( localizeWithPath(_moduleId, 12, \"key\")),\n    [SymbolKind.Method]: ( localizeWithPath(_moduleId, 13, \"method\")),\n    [SymbolKind.Module]: ( localizeWithPath(_moduleId, 14, \"module\")),\n    [SymbolKind.Namespace]: ( localizeWithPath(_moduleId, 15, \"namespace\")),\n    [SymbolKind.Null]: ( localizeWithPath(_moduleId, 16, \"null\")),\n    [SymbolKind.Number]: ( localizeWithPath(_moduleId, 17, \"number\")),\n    [SymbolKind.Object]: ( localizeWithPath(_moduleId, 18, \"object\")),\n    [SymbolKind.Operator]: ( localizeWithPath(_moduleId, 19, \"operator\")),\n    [SymbolKind.Package]: ( localizeWithPath(_moduleId, 20, \"package\")),\n    [SymbolKind.Property]: ( localizeWithPath(_moduleId, 21, \"property\")),\n    [SymbolKind.String]: ( localizeWithPath(_moduleId, 22, \"string\")),\n    [SymbolKind.Struct]: ( localizeWithPath(_moduleId, 23, \"struct\")),\n    [SymbolKind.TypeParameter]: ( localizeWithPath(_moduleId, 24, \"type parameter\")),\n    [SymbolKind.Variable]: ( localizeWithPath(_moduleId, 25, \"variable\")),\n};\nfunction getAriaLabelForSymbol(symbolName, kind) {\n    return ( localizeWithPath(_moduleId, 26, '{0} ({1})', symbolName, symbolKindNames[kind]));\n}\nvar SymbolTag;\n( ((function(SymbolTag) {\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(SymbolTag || (SymbolTag = {}))));\nvar SymbolKinds;\n( ((function(SymbolKinds) {\n    const byKind = ( (new Map()));\n    byKind.set(SymbolKind.File, Codicon.symbolFile);\n    byKind.set(SymbolKind.Module, Codicon.symbolModule);\n    byKind.set(SymbolKind.Namespace, Codicon.symbolNamespace);\n    byKind.set(SymbolKind.Package, Codicon.symbolPackage);\n    byKind.set(SymbolKind.Class, Codicon.symbolClass);\n    byKind.set(SymbolKind.Method, Codicon.symbolMethod);\n    byKind.set(SymbolKind.Property, Codicon.symbolProperty);\n    byKind.set(SymbolKind.Field, Codicon.symbolField);\n    byKind.set(SymbolKind.Constructor, Codicon.symbolConstructor);\n    byKind.set(SymbolKind.Enum, Codicon.symbolEnum);\n    byKind.set(SymbolKind.Interface, Codicon.symbolInterface);\n    byKind.set(SymbolKind.Function, Codicon.symbolFunction);\n    byKind.set(SymbolKind.Variable, Codicon.symbolVariable);\n    byKind.set(SymbolKind.Constant, Codicon.symbolConstant);\n    byKind.set(SymbolKind.String, Codicon.symbolString);\n    byKind.set(SymbolKind.Number, Codicon.symbolNumber);\n    byKind.set(SymbolKind.Boolean, Codicon.symbolBoolean);\n    byKind.set(SymbolKind.Array, Codicon.symbolArray);\n    byKind.set(SymbolKind.Object, Codicon.symbolObject);\n    byKind.set(SymbolKind.Key, Codicon.symbolKey);\n    byKind.set(SymbolKind.Null, Codicon.symbolNull);\n    byKind.set(SymbolKind.EnumMember, Codicon.symbolEnumMember);\n    byKind.set(SymbolKind.Struct, Codicon.symbolStruct);\n    byKind.set(SymbolKind.Event, Codicon.symbolEvent);\n    byKind.set(SymbolKind.Operator, Codicon.symbolOperator);\n    byKind.set(SymbolKind.TypeParameter, Codicon.symbolTypeParameter);\n    function toIcon(kind) {\n        let icon = byKind.get(kind);\n        if (!icon) {\n            console.info('No codicon found for SymbolKind ' + kind);\n            icon = Codicon.symbolProperty;\n        }\n        return icon;\n    }\n    SymbolKinds.toIcon = toIcon;\n})(SymbolKinds || (SymbolKinds = {}))));\nclass TextEdit {\n    static asEditOperation(edit) {\n        return EditOperation.replace(Range.lift(edit.range), edit.text);\n    }\n}\nclass FoldingRangeKind {\n    static { this.Comment = ( (new FoldingRangeKind('comment'))); }\n    static { this.Imports = ( (new FoldingRangeKind('imports'))); }\n    static { this.Region = ( (new FoldingRangeKind('region'))); }\n    static fromValue(value) {\n        switch (value) {\n            case 'comment': return FoldingRangeKind.Comment;\n            case 'imports': return FoldingRangeKind.Imports;\n            case 'region': return FoldingRangeKind.Region;\n        }\n        return (\n             (new FoldingRangeKind(value))\n        );\n    }\n    constructor(value) {\n        this.value = value;\n    }\n}\nvar NewSymbolNameTag;\n( ((function(NewSymbolNameTag) {\n    NewSymbolNameTag[NewSymbolNameTag[\"AIGenerated\"] = 1] = \"AIGenerated\";\n})(NewSymbolNameTag || (NewSymbolNameTag = {}))));\nvar NewSymbolNameTriggerKind;\n( ((function(NewSymbolNameTriggerKind) {\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(NewSymbolNameTriggerKind || (NewSymbolNameTriggerKind = {}))));\nvar Command;\n( ((function(Command) {\n    function is(obj) {\n        if (!obj || typeof obj !== 'object') {\n            return false;\n        }\n        return typeof obj.id === 'string' &&\n            typeof obj.title === 'string';\n    }\n    Command.is = is;\n})(Command || (Command = {}))));\nvar CommentThreadCollapsibleState;\n( ((function(CommentThreadCollapsibleState) {\n    CommentThreadCollapsibleState[CommentThreadCollapsibleState[\"Collapsed\"] = 0] = \"Collapsed\";\n    CommentThreadCollapsibleState[CommentThreadCollapsibleState[\"Expanded\"] = 1] = \"Expanded\";\n})(CommentThreadCollapsibleState || (CommentThreadCollapsibleState = {}))));\nvar CommentThreadState;\n( ((function(CommentThreadState) {\n    CommentThreadState[CommentThreadState[\"Unresolved\"] = 0] = \"Unresolved\";\n    CommentThreadState[CommentThreadState[\"Resolved\"] = 1] = \"Resolved\";\n})(CommentThreadState || (CommentThreadState = {}))));\nvar CommentThreadApplicability;\n( ((function(CommentThreadApplicability) {\n    CommentThreadApplicability[CommentThreadApplicability[\"Current\"] = 0] = \"Current\";\n    CommentThreadApplicability[CommentThreadApplicability[\"Outdated\"] = 1] = \"Outdated\";\n})(CommentThreadApplicability || (CommentThreadApplicability = {}))));\nvar CommentMode;\n( ((function(CommentMode) {\n    CommentMode[CommentMode[\"Editing\"] = 0] = \"Editing\";\n    CommentMode[CommentMode[\"Preview\"] = 1] = \"Preview\";\n})(CommentMode || (CommentMode = {}))));\nvar InlayHintKind;\n( ((function(InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {}))));\nclass LazyTokenizationSupport {\n    constructor(createSupport) {\n        this.createSupport = createSupport;\n        this._tokenizationSupport = null;\n    }\n    dispose() {\n        if (this._tokenizationSupport) {\n            this._tokenizationSupport.then((support) => {\n                if (support) {\n                    support.dispose();\n                }\n            });\n        }\n    }\n    get tokenizationSupport() {\n        if (!this._tokenizationSupport) {\n            this._tokenizationSupport = this.createSupport();\n        }\n        return this._tokenizationSupport;\n    }\n}\nconst TokenizationRegistry = ( (new TokenizationRegistry$1()));\nvar ExternalUriOpenerPriority;\n( ((function(ExternalUriOpenerPriority) {\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"None\"] = 0] = \"None\";\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"Option\"] = 1] = \"Option\";\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"Default\"] = 2] = \"Default\";\n    ExternalUriOpenerPriority[ExternalUriOpenerPriority[\"Preferred\"] = 3] = \"Preferred\";\n})(ExternalUriOpenerPriority || (ExternalUriOpenerPriority = {}))));\nvar InlineEditTriggerKind;\n( ((function(InlineEditTriggerKind) {\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(InlineEditTriggerKind || (InlineEditTriggerKind = {}))));\nexport { CodeActionTriggerType, Command, CommentMode, CommentThreadApplicability, CommentThreadCollapsibleState, CommentThreadState, CompletionItemInsertTextRule, CompletionItemKind, CompletionItemKinds, CompletionItemTag, CompletionTriggerKind, DocumentHighlightKind, DocumentPasteTriggerKind, EncodedTokenizationResult, ExternalUriOpenerPriority, FoldingRangeKind, HoverVerbosityAction, InlayHintKind, InlineCompletionTriggerKind, InlineEditTriggerKind, LazyTokenizationSupport, NewSymbolNameTag, NewSymbolNameTriggerKind, PartialAcceptTriggerKind, SelectedSuggestionInfo, SignatureHelpTriggerKind, SymbolKind, SymbolKinds, SymbolTag, TextEdit, Token, TokenizationRegistry, TokenizationResult, getAriaLabelForSymbol, isLocationLink, symbolKindNames };\n","var AccessibilitySupport;\n( (function(AccessibilitySupport) {\n    AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\n    AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\n    AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\n})(AccessibilitySupport || (AccessibilitySupport = {})));\nvar CodeActionTriggerType;\n( (function(CodeActionTriggerType) {\n    CodeActionTriggerType[CodeActionTriggerType[\"Invoke\"] = 1] = \"Invoke\";\n    CodeActionTriggerType[CodeActionTriggerType[\"Auto\"] = 2] = \"Auto\";\n})(CodeActionTriggerType || (CodeActionTriggerType = {})));\nvar CompletionItemInsertTextRule;\n( (function(CompletionItemInsertTextRule) {\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"None\"] = 0] = \"None\";\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {})));\nvar CompletionItemKind;\n( (function(CompletionItemKind) {\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\n    CompletionItemKind[CompletionItemKind[\"User\"] = 25] = \"User\";\n    CompletionItemKind[CompletionItemKind[\"Issue\"] = 26] = \"Issue\";\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 27] = \"Snippet\";\n})(CompletionItemKind || (CompletionItemKind = {})));\nvar CompletionItemTag;\n( (function(CompletionItemTag) {\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(CompletionItemTag || (CompletionItemTag = {})));\nvar CompletionTriggerKind;\n( (function(CompletionTriggerKind) {\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\n})(CompletionTriggerKind || (CompletionTriggerKind = {})));\nvar ContentWidgetPositionPreference;\n( (function(ContentWidgetPositionPreference) {\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {})));\nvar CursorChangeReason;\n( (function(CursorChangeReason) {\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\n})(CursorChangeReason || (CursorChangeReason = {})));\nvar DefaultEndOfLine;\n( (function(DefaultEndOfLine) {\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {})));\nvar DocumentHighlightKind;\n( (function(DocumentHighlightKind) {\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\n})(DocumentHighlightKind || (DocumentHighlightKind = {})));\nvar EditorAutoIndentStrategy;\n( (function(EditorAutoIndentStrategy) {\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"None\"] = 0] = \"None\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Keep\"] = 1] = \"Keep\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Brackets\"] = 2] = \"Brackets\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Advanced\"] = 3] = \"Advanced\";\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Full\"] = 4] = \"Full\";\n})(EditorAutoIndentStrategy || (EditorAutoIndentStrategy = {})));\nvar EditorOption;\n( (function(EditorOption) {\n    EditorOption[EditorOption[\"acceptSuggestionOnCommitCharacter\"] = 0] = \"acceptSuggestionOnCommitCharacter\";\n    EditorOption[EditorOption[\"acceptSuggestionOnEnter\"] = 1] = \"acceptSuggestionOnEnter\";\n    EditorOption[EditorOption[\"accessibilitySupport\"] = 2] = \"accessibilitySupport\";\n    EditorOption[EditorOption[\"accessibilityPageSize\"] = 3] = \"accessibilityPageSize\";\n    EditorOption[EditorOption[\"ariaLabel\"] = 4] = \"ariaLabel\";\n    EditorOption[EditorOption[\"ariaRequired\"] = 5] = \"ariaRequired\";\n    EditorOption[EditorOption[\"autoClosingBrackets\"] = 6] = \"autoClosingBrackets\";\n    EditorOption[EditorOption[\"autoClosingComments\"] = 7] = \"autoClosingComments\";\n    EditorOption[EditorOption[\"screenReaderAnnounceInlineSuggestion\"] = 8] = \"screenReaderAnnounceInlineSuggestion\";\n    EditorOption[EditorOption[\"autoClosingDelete\"] = 9] = \"autoClosingDelete\";\n    EditorOption[EditorOption[\"autoClosingOvertype\"] = 10] = \"autoClosingOvertype\";\n    EditorOption[EditorOption[\"autoClosingQuotes\"] = 11] = \"autoClosingQuotes\";\n    EditorOption[EditorOption[\"autoIndent\"] = 12] = \"autoIndent\";\n    EditorOption[EditorOption[\"automaticLayout\"] = 13] = \"automaticLayout\";\n    EditorOption[EditorOption[\"autoSurround\"] = 14] = \"autoSurround\";\n    EditorOption[EditorOption[\"bracketPairColorization\"] = 15] = \"bracketPairColorization\";\n    EditorOption[EditorOption[\"guides\"] = 16] = \"guides\";\n    EditorOption[EditorOption[\"codeLens\"] = 17] = \"codeLens\";\n    EditorOption[EditorOption[\"codeLensFontFamily\"] = 18] = \"codeLensFontFamily\";\n    EditorOption[EditorOption[\"codeLensFontSize\"] = 19] = \"codeLensFontSize\";\n    EditorOption[EditorOption[\"colorDecorators\"] = 20] = \"colorDecorators\";\n    EditorOption[EditorOption[\"colorDecoratorsLimit\"] = 21] = \"colorDecoratorsLimit\";\n    EditorOption[EditorOption[\"columnSelection\"] = 22] = \"columnSelection\";\n    EditorOption[EditorOption[\"comments\"] = 23] = \"comments\";\n    EditorOption[EditorOption[\"contextmenu\"] = 24] = \"contextmenu\";\n    EditorOption[EditorOption[\"copyWithSyntaxHighlighting\"] = 25] = \"copyWithSyntaxHighlighting\";\n    EditorOption[EditorOption[\"cursorBlinking\"] = 26] = \"cursorBlinking\";\n    EditorOption[EditorOption[\"cursorSmoothCaretAnimation\"] = 27] = \"cursorSmoothCaretAnimation\";\n    EditorOption[EditorOption[\"cursorStyle\"] = 28] = \"cursorStyle\";\n    EditorOption[EditorOption[\"cursorSurroundingLines\"] = 29] = \"cursorSurroundingLines\";\n    EditorOption[EditorOption[\"cursorSurroundingLinesStyle\"] = 30] = \"cursorSurroundingLinesStyle\";\n    EditorOption[EditorOption[\"cursorWidth\"] = 31] = \"cursorWidth\";\n    EditorOption[EditorOption[\"disableLayerHinting\"] = 32] = \"disableLayerHinting\";\n    EditorOption[EditorOption[\"disableMonospaceOptimizations\"] = 33] = \"disableMonospaceOptimizations\";\n    EditorOption[EditorOption[\"domReadOnly\"] = 34] = \"domReadOnly\";\n    EditorOption[EditorOption[\"dragAndDrop\"] = 35] = \"dragAndDrop\";\n    EditorOption[EditorOption[\"dropIntoEditor\"] = 36] = \"dropIntoEditor\";\n    EditorOption[EditorOption[\"emptySelectionClipboard\"] = 37] = \"emptySelectionClipboard\";\n    EditorOption[EditorOption[\"experimentalWhitespaceRendering\"] = 38] = \"experimentalWhitespaceRendering\";\n    EditorOption[EditorOption[\"extraEditorClassName\"] = 39] = \"extraEditorClassName\";\n    EditorOption[EditorOption[\"fastScrollSensitivity\"] = 40] = \"fastScrollSensitivity\";\n    EditorOption[EditorOption[\"find\"] = 41] = \"find\";\n    EditorOption[EditorOption[\"fixedOverflowWidgets\"] = 42] = \"fixedOverflowWidgets\";\n    EditorOption[EditorOption[\"folding\"] = 43] = \"folding\";\n    EditorOption[EditorOption[\"foldingStrategy\"] = 44] = \"foldingStrategy\";\n    EditorOption[EditorOption[\"foldingHighlight\"] = 45] = \"foldingHighlight\";\n    EditorOption[EditorOption[\"foldingImportsByDefault\"] = 46] = \"foldingImportsByDefault\";\n    EditorOption[EditorOption[\"foldingMaximumRegions\"] = 47] = \"foldingMaximumRegions\";\n    EditorOption[EditorOption[\"unfoldOnClickAfterEndOfLine\"] = 48] = \"unfoldOnClickAfterEndOfLine\";\n    EditorOption[EditorOption[\"fontFamily\"] = 49] = \"fontFamily\";\n    EditorOption[EditorOption[\"fontInfo\"] = 50] = \"fontInfo\";\n    EditorOption[EditorOption[\"fontLigatures\"] = 51] = \"fontLigatures\";\n    EditorOption[EditorOption[\"fontSize\"] = 52] = \"fontSize\";\n    EditorOption[EditorOption[\"fontWeight\"] = 53] = \"fontWeight\";\n    EditorOption[EditorOption[\"fontVariations\"] = 54] = \"fontVariations\";\n    EditorOption[EditorOption[\"formatOnPaste\"] = 55] = \"formatOnPaste\";\n    EditorOption[EditorOption[\"formatOnType\"] = 56] = \"formatOnType\";\n    EditorOption[EditorOption[\"glyphMargin\"] = 57] = \"glyphMargin\";\n    EditorOption[EditorOption[\"gotoLocation\"] = 58] = \"gotoLocation\";\n    EditorOption[EditorOption[\"hideCursorInOverviewRuler\"] = 59] = \"hideCursorInOverviewRuler\";\n    EditorOption[EditorOption[\"hover\"] = 60] = \"hover\";\n    EditorOption[EditorOption[\"inDiffEditor\"] = 61] = \"inDiffEditor\";\n    EditorOption[EditorOption[\"inlineSuggest\"] = 62] = \"inlineSuggest\";\n    EditorOption[EditorOption[\"inlineEdit\"] = 63] = \"inlineEdit\";\n    EditorOption[EditorOption[\"letterSpacing\"] = 64] = \"letterSpacing\";\n    EditorOption[EditorOption[\"lightbulb\"] = 65] = \"lightbulb\";\n    EditorOption[EditorOption[\"lineDecorationsWidth\"] = 66] = \"lineDecorationsWidth\";\n    EditorOption[EditorOption[\"lineHeight\"] = 67] = \"lineHeight\";\n    EditorOption[EditorOption[\"lineNumbers\"] = 68] = \"lineNumbers\";\n    EditorOption[EditorOption[\"lineNumbersMinChars\"] = 69] = \"lineNumbersMinChars\";\n    EditorOption[EditorOption[\"linkedEditing\"] = 70] = \"linkedEditing\";\n    EditorOption[EditorOption[\"links\"] = 71] = \"links\";\n    EditorOption[EditorOption[\"matchBrackets\"] = 72] = \"matchBrackets\";\n    EditorOption[EditorOption[\"minimap\"] = 73] = \"minimap\";\n    EditorOption[EditorOption[\"mouseStyle\"] = 74] = \"mouseStyle\";\n    EditorOption[EditorOption[\"mouseWheelScrollSensitivity\"] = 75] = \"mouseWheelScrollSensitivity\";\n    EditorOption[EditorOption[\"mouseWheelZoom\"] = 76] = \"mouseWheelZoom\";\n    EditorOption[EditorOption[\"multiCursorMergeOverlapping\"] = 77] = \"multiCursorMergeOverlapping\";\n    EditorOption[EditorOption[\"multiCursorModifier\"] = 78] = \"multiCursorModifier\";\n    EditorOption[EditorOption[\"multiCursorPaste\"] = 79] = \"multiCursorPaste\";\n    EditorOption[EditorOption[\"multiCursorLimit\"] = 80] = \"multiCursorLimit\";\n    EditorOption[EditorOption[\"occurrencesHighlight\"] = 81] = \"occurrencesHighlight\";\n    EditorOption[EditorOption[\"overviewRulerBorder\"] = 82] = \"overviewRulerBorder\";\n    EditorOption[EditorOption[\"overviewRulerLanes\"] = 83] = \"overviewRulerLanes\";\n    EditorOption[EditorOption[\"padding\"] = 84] = \"padding\";\n    EditorOption[EditorOption[\"pasteAs\"] = 85] = \"pasteAs\";\n    EditorOption[EditorOption[\"parameterHints\"] = 86] = \"parameterHints\";\n    EditorOption[EditorOption[\"peekWidgetDefaultFocus\"] = 87] = \"peekWidgetDefaultFocus\";\n    EditorOption[EditorOption[\"placeholder\"] = 88] = \"placeholder\";\n    EditorOption[EditorOption[\"definitionLinkOpensInPeek\"] = 89] = \"definitionLinkOpensInPeek\";\n    EditorOption[EditorOption[\"quickSuggestions\"] = 90] = \"quickSuggestions\";\n    EditorOption[EditorOption[\"quickSuggestionsDelay\"] = 91] = \"quickSuggestionsDelay\";\n    EditorOption[EditorOption[\"readOnly\"] = 92] = \"readOnly\";\n    EditorOption[EditorOption[\"readOnlyMessage\"] = 93] = \"readOnlyMessage\";\n    EditorOption[EditorOption[\"renameOnType\"] = 94] = \"renameOnType\";\n    EditorOption[EditorOption[\"renderControlCharacters\"] = 95] = \"renderControlCharacters\";\n    EditorOption[EditorOption[\"renderFinalNewline\"] = 96] = \"renderFinalNewline\";\n    EditorOption[EditorOption[\"renderLineHighlight\"] = 97] = \"renderLineHighlight\";\n    EditorOption[EditorOption[\"renderLineHighlightOnlyWhenFocus\"] = 98] = \"renderLineHighlightOnlyWhenFocus\";\n    EditorOption[EditorOption[\"renderValidationDecorations\"] = 99] = \"renderValidationDecorations\";\n    EditorOption[EditorOption[\"renderWhitespace\"] = 100] = \"renderWhitespace\";\n    EditorOption[EditorOption[\"revealHorizontalRightPadding\"] = 101] = \"revealHorizontalRightPadding\";\n    EditorOption[EditorOption[\"roundedSelection\"] = 102] = \"roundedSelection\";\n    EditorOption[EditorOption[\"rulers\"] = 103] = \"rulers\";\n    EditorOption[EditorOption[\"scrollbar\"] = 104] = \"scrollbar\";\n    EditorOption[EditorOption[\"scrollBeyondLastColumn\"] = 105] = \"scrollBeyondLastColumn\";\n    EditorOption[EditorOption[\"scrollBeyondLastLine\"] = 106] = \"scrollBeyondLastLine\";\n    EditorOption[EditorOption[\"scrollPredominantAxis\"] = 107] = \"scrollPredominantAxis\";\n    EditorOption[EditorOption[\"selectionClipboard\"] = 108] = \"selectionClipboard\";\n    EditorOption[EditorOption[\"selectionHighlight\"] = 109] = \"selectionHighlight\";\n    EditorOption[EditorOption[\"selectOnLineNumbers\"] = 110] = \"selectOnLineNumbers\";\n    EditorOption[EditorOption[\"showFoldingControls\"] = 111] = \"showFoldingControls\";\n    EditorOption[EditorOption[\"showUnused\"] = 112] = \"showUnused\";\n    EditorOption[EditorOption[\"snippetSuggestions\"] = 113] = \"snippetSuggestions\";\n    EditorOption[EditorOption[\"smartSelect\"] = 114] = \"smartSelect\";\n    EditorOption[EditorOption[\"smoothScrolling\"] = 115] = \"smoothScrolling\";\n    EditorOption[EditorOption[\"stickyScroll\"] = 116] = \"stickyScroll\";\n    EditorOption[EditorOption[\"stickyTabStops\"] = 117] = \"stickyTabStops\";\n    EditorOption[EditorOption[\"stopRenderingLineAfter\"] = 118] = \"stopRenderingLineAfter\";\n    EditorOption[EditorOption[\"suggest\"] = 119] = \"suggest\";\n    EditorOption[EditorOption[\"suggestFontSize\"] = 120] = \"suggestFontSize\";\n    EditorOption[EditorOption[\"suggestLineHeight\"] = 121] = \"suggestLineHeight\";\n    EditorOption[EditorOption[\"suggestOnTriggerCharacters\"] = 122] = \"suggestOnTriggerCharacters\";\n    EditorOption[EditorOption[\"suggestSelection\"] = 123] = \"suggestSelection\";\n    EditorOption[EditorOption[\"tabCompletion\"] = 124] = \"tabCompletion\";\n    EditorOption[EditorOption[\"tabIndex\"] = 125] = \"tabIndex\";\n    EditorOption[EditorOption[\"unicodeHighlighting\"] = 126] = \"unicodeHighlighting\";\n    EditorOption[EditorOption[\"unusualLineTerminators\"] = 127] = \"unusualLineTerminators\";\n    EditorOption[EditorOption[\"useShadowDOM\"] = 128] = \"useShadowDOM\";\n    EditorOption[EditorOption[\"useTabStops\"] = 129] = \"useTabStops\";\n    EditorOption[EditorOption[\"wordBreak\"] = 130] = \"wordBreak\";\n    EditorOption[EditorOption[\"wordSegmenterLocales\"] = 131] = \"wordSegmenterLocales\";\n    EditorOption[EditorOption[\"wordSeparators\"] = 132] = \"wordSeparators\";\n    EditorOption[EditorOption[\"wordWrap\"] = 133] = \"wordWrap\";\n    EditorOption[EditorOption[\"wordWrapBreakAfterCharacters\"] = 134] = \"wordWrapBreakAfterCharacters\";\n    EditorOption[EditorOption[\"wordWrapBreakBeforeCharacters\"] = 135] = \"wordWrapBreakBeforeCharacters\";\n    EditorOption[EditorOption[\"wordWrapColumn\"] = 136] = \"wordWrapColumn\";\n    EditorOption[EditorOption[\"wordWrapOverride1\"] = 137] = \"wordWrapOverride1\";\n    EditorOption[EditorOption[\"wordWrapOverride2\"] = 138] = \"wordWrapOverride2\";\n    EditorOption[EditorOption[\"wrappingIndent\"] = 139] = \"wrappingIndent\";\n    EditorOption[EditorOption[\"wrappingStrategy\"] = 140] = \"wrappingStrategy\";\n    EditorOption[EditorOption[\"showDeprecated\"] = 141] = \"showDeprecated\";\n    EditorOption[EditorOption[\"inlayHints\"] = 142] = \"inlayHints\";\n    EditorOption[EditorOption[\"editorClassName\"] = 143] = \"editorClassName\";\n    EditorOption[EditorOption[\"pixelRatio\"] = 144] = \"pixelRatio\";\n    EditorOption[EditorOption[\"tabFocusMode\"] = 145] = \"tabFocusMode\";\n    EditorOption[EditorOption[\"layoutInfo\"] = 146] = \"layoutInfo\";\n    EditorOption[EditorOption[\"wrappingInfo\"] = 147] = \"wrappingInfo\";\n    EditorOption[EditorOption[\"defaultColorDecorators\"] = 148] = \"defaultColorDecorators\";\n    EditorOption[EditorOption[\"colorDecoratorsActivatedOn\"] = 149] = \"colorDecoratorsActivatedOn\";\n    EditorOption[EditorOption[\"inlineCompletionsAccessibilityVerbose\"] = 150] = \"inlineCompletionsAccessibilityVerbose\";\n})(EditorOption || (EditorOption = {})));\nvar EndOfLinePreference;\n( (function(EndOfLinePreference) {\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {})));\nvar EndOfLineSequence;\n( (function(EndOfLineSequence) {\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {})));\nvar GlyphMarginLane;\n( (function(GlyphMarginLane) {\n    GlyphMarginLane[GlyphMarginLane[\"Left\"] = 1] = \"Left\";\n    GlyphMarginLane[GlyphMarginLane[\"Center\"] = 2] = \"Center\";\n    GlyphMarginLane[GlyphMarginLane[\"Right\"] = 3] = \"Right\";\n})(GlyphMarginLane || (GlyphMarginLane = {})));\nvar HoverVerbosityAction;\n( (function(HoverVerbosityAction) {\n    HoverVerbosityAction[HoverVerbosityAction[\"Increase\"] = 0] = \"Increase\";\n    HoverVerbosityAction[HoverVerbosityAction[\"Decrease\"] = 1] = \"Decrease\";\n})(HoverVerbosityAction || (HoverVerbosityAction = {})));\nvar IndentAction;\n( (function(IndentAction) {\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\n})(IndentAction || (IndentAction = {})));\nvar InjectedTextCursorStops;\n( (function(InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {})));\nvar InlayHintKind;\n( (function(InlayHintKind) {\n    InlayHintKind[InlayHintKind[\"Type\"] = 1] = \"Type\";\n    InlayHintKind[InlayHintKind[\"Parameter\"] = 2] = \"Parameter\";\n})(InlayHintKind || (InlayHintKind = {})));\nvar InlineCompletionTriggerKind;\n( (function(InlineCompletionTriggerKind) {\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Automatic\"] = 0] = \"Automatic\";\n    InlineCompletionTriggerKind[InlineCompletionTriggerKind[\"Explicit\"] = 1] = \"Explicit\";\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {})));\nvar InlineEditTriggerKind;\n( (function(InlineEditTriggerKind) {\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    InlineEditTriggerKind[InlineEditTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(InlineEditTriggerKind || (InlineEditTriggerKind = {})));\nvar KeyCode;\n( (function(KeyCode) {\n    KeyCode[KeyCode[\"DependsOnKbLayout\"] = -1] = \"DependsOnKbLayout\";\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\n    KeyCode[KeyCode[\"Digit0\"] = 21] = \"Digit0\";\n    KeyCode[KeyCode[\"Digit1\"] = 22] = \"Digit1\";\n    KeyCode[KeyCode[\"Digit2\"] = 23] = \"Digit2\";\n    KeyCode[KeyCode[\"Digit3\"] = 24] = \"Digit3\";\n    KeyCode[KeyCode[\"Digit4\"] = 25] = \"Digit4\";\n    KeyCode[KeyCode[\"Digit5\"] = 26] = \"Digit5\";\n    KeyCode[KeyCode[\"Digit6\"] = 27] = \"Digit6\";\n    KeyCode[KeyCode[\"Digit7\"] = 28] = \"Digit7\";\n    KeyCode[KeyCode[\"Digit8\"] = 29] = \"Digit8\";\n    KeyCode[KeyCode[\"Digit9\"] = 30] = \"Digit9\";\n    KeyCode[KeyCode[\"KeyA\"] = 31] = \"KeyA\";\n    KeyCode[KeyCode[\"KeyB\"] = 32] = \"KeyB\";\n    KeyCode[KeyCode[\"KeyC\"] = 33] = \"KeyC\";\n    KeyCode[KeyCode[\"KeyD\"] = 34] = \"KeyD\";\n    KeyCode[KeyCode[\"KeyE\"] = 35] = \"KeyE\";\n    KeyCode[KeyCode[\"KeyF\"] = 36] = \"KeyF\";\n    KeyCode[KeyCode[\"KeyG\"] = 37] = \"KeyG\";\n    KeyCode[KeyCode[\"KeyH\"] = 38] = \"KeyH\";\n    KeyCode[KeyCode[\"KeyI\"] = 39] = \"KeyI\";\n    KeyCode[KeyCode[\"KeyJ\"] = 40] = \"KeyJ\";\n    KeyCode[KeyCode[\"KeyK\"] = 41] = \"KeyK\";\n    KeyCode[KeyCode[\"KeyL\"] = 42] = \"KeyL\";\n    KeyCode[KeyCode[\"KeyM\"] = 43] = \"KeyM\";\n    KeyCode[KeyCode[\"KeyN\"] = 44] = \"KeyN\";\n    KeyCode[KeyCode[\"KeyO\"] = 45] = \"KeyO\";\n    KeyCode[KeyCode[\"KeyP\"] = 46] = \"KeyP\";\n    KeyCode[KeyCode[\"KeyQ\"] = 47] = \"KeyQ\";\n    KeyCode[KeyCode[\"KeyR\"] = 48] = \"KeyR\";\n    KeyCode[KeyCode[\"KeyS\"] = 49] = \"KeyS\";\n    KeyCode[KeyCode[\"KeyT\"] = 50] = \"KeyT\";\n    KeyCode[KeyCode[\"KeyU\"] = 51] = \"KeyU\";\n    KeyCode[KeyCode[\"KeyV\"] = 52] = \"KeyV\";\n    KeyCode[KeyCode[\"KeyW\"] = 53] = \"KeyW\";\n    KeyCode[KeyCode[\"KeyX\"] = 54] = \"KeyX\";\n    KeyCode[KeyCode[\"KeyY\"] = 55] = \"KeyY\";\n    KeyCode[KeyCode[\"KeyZ\"] = 56] = \"KeyZ\";\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\n    KeyCode[KeyCode[\"F20\"] = 78] = \"F20\";\n    KeyCode[KeyCode[\"F21\"] = 79] = \"F21\";\n    KeyCode[KeyCode[\"F22\"] = 80] = \"F22\";\n    KeyCode[KeyCode[\"F23\"] = 81] = \"F23\";\n    KeyCode[KeyCode[\"F24\"] = 82] = \"F24\";\n    KeyCode[KeyCode[\"NumLock\"] = 83] = \"NumLock\";\n    KeyCode[KeyCode[\"ScrollLock\"] = 84] = \"ScrollLock\";\n    KeyCode[KeyCode[\"Semicolon\"] = 85] = \"Semicolon\";\n    KeyCode[KeyCode[\"Equal\"] = 86] = \"Equal\";\n    KeyCode[KeyCode[\"Comma\"] = 87] = \"Comma\";\n    KeyCode[KeyCode[\"Minus\"] = 88] = \"Minus\";\n    KeyCode[KeyCode[\"Period\"] = 89] = \"Period\";\n    KeyCode[KeyCode[\"Slash\"] = 90] = \"Slash\";\n    KeyCode[KeyCode[\"Backquote\"] = 91] = \"Backquote\";\n    KeyCode[KeyCode[\"BracketLeft\"] = 92] = \"BracketLeft\";\n    KeyCode[KeyCode[\"Backslash\"] = 93] = \"Backslash\";\n    KeyCode[KeyCode[\"BracketRight\"] = 94] = \"BracketRight\";\n    KeyCode[KeyCode[\"Quote\"] = 95] = \"Quote\";\n    KeyCode[KeyCode[\"OEM_8\"] = 96] = \"OEM_8\";\n    KeyCode[KeyCode[\"IntlBackslash\"] = 97] = \"IntlBackslash\";\n    KeyCode[KeyCode[\"Numpad0\"] = 98] = \"Numpad0\";\n    KeyCode[KeyCode[\"Numpad1\"] = 99] = \"Numpad1\";\n    KeyCode[KeyCode[\"Numpad2\"] = 100] = \"Numpad2\";\n    KeyCode[KeyCode[\"Numpad3\"] = 101] = \"Numpad3\";\n    KeyCode[KeyCode[\"Numpad4\"] = 102] = \"Numpad4\";\n    KeyCode[KeyCode[\"Numpad5\"] = 103] = \"Numpad5\";\n    KeyCode[KeyCode[\"Numpad6\"] = 104] = \"Numpad6\";\n    KeyCode[KeyCode[\"Numpad7\"] = 105] = \"Numpad7\";\n    KeyCode[KeyCode[\"Numpad8\"] = 106] = \"Numpad8\";\n    KeyCode[KeyCode[\"Numpad9\"] = 107] = \"Numpad9\";\n    KeyCode[KeyCode[\"NumpadMultiply\"] = 108] = \"NumpadMultiply\";\n    KeyCode[KeyCode[\"NumpadAdd\"] = 109] = \"NumpadAdd\";\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 110] = \"NUMPAD_SEPARATOR\";\n    KeyCode[KeyCode[\"NumpadSubtract\"] = 111] = \"NumpadSubtract\";\n    KeyCode[KeyCode[\"NumpadDecimal\"] = 112] = \"NumpadDecimal\";\n    KeyCode[KeyCode[\"NumpadDivide\"] = 113] = \"NumpadDivide\";\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 114] = \"KEY_IN_COMPOSITION\";\n    KeyCode[KeyCode[\"ABNT_C1\"] = 115] = \"ABNT_C1\";\n    KeyCode[KeyCode[\"ABNT_C2\"] = 116] = \"ABNT_C2\";\n    KeyCode[KeyCode[\"AudioVolumeMute\"] = 117] = \"AudioVolumeMute\";\n    KeyCode[KeyCode[\"AudioVolumeUp\"] = 118] = \"AudioVolumeUp\";\n    KeyCode[KeyCode[\"AudioVolumeDown\"] = 119] = \"AudioVolumeDown\";\n    KeyCode[KeyCode[\"BrowserSearch\"] = 120] = \"BrowserSearch\";\n    KeyCode[KeyCode[\"BrowserHome\"] = 121] = \"BrowserHome\";\n    KeyCode[KeyCode[\"BrowserBack\"] = 122] = \"BrowserBack\";\n    KeyCode[KeyCode[\"BrowserForward\"] = 123] = \"BrowserForward\";\n    KeyCode[KeyCode[\"MediaTrackNext\"] = 124] = \"MediaTrackNext\";\n    KeyCode[KeyCode[\"MediaTrackPrevious\"] = 125] = \"MediaTrackPrevious\";\n    KeyCode[KeyCode[\"MediaStop\"] = 126] = \"MediaStop\";\n    KeyCode[KeyCode[\"MediaPlayPause\"] = 127] = \"MediaPlayPause\";\n    KeyCode[KeyCode[\"LaunchMediaPlayer\"] = 128] = \"LaunchMediaPlayer\";\n    KeyCode[KeyCode[\"LaunchMail\"] = 129] = \"LaunchMail\";\n    KeyCode[KeyCode[\"LaunchApp2\"] = 130] = \"LaunchApp2\";\n    KeyCode[KeyCode[\"Clear\"] = 131] = \"Clear\";\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 132] = \"MAX_VALUE\";\n})(KeyCode || (KeyCode = {})));\nvar MarkerSeverity;\n( (function(MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {})));\nvar MarkerTag;\n( (function(MarkerTag) {\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\n    MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\n})(MarkerTag || (MarkerTag = {})));\nvar MinimapPosition;\n( (function(MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {})));\nvar MinimapSectionHeaderStyle;\n( (function(MinimapSectionHeaderStyle) {\n    MinimapSectionHeaderStyle[MinimapSectionHeaderStyle[\"Normal\"] = 1] = \"Normal\";\n    MinimapSectionHeaderStyle[MinimapSectionHeaderStyle[\"Underlined\"] = 2] = \"Underlined\";\n})(MinimapSectionHeaderStyle || (MinimapSectionHeaderStyle = {})));\nvar MouseTargetType;\n( (function(MouseTargetType) {\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\n})(MouseTargetType || (MouseTargetType = {})));\nvar NewSymbolNameTag;\n( (function(NewSymbolNameTag) {\n    NewSymbolNameTag[NewSymbolNameTag[\"AIGenerated\"] = 1] = \"AIGenerated\";\n})(NewSymbolNameTag || (NewSymbolNameTag = {})));\nvar NewSymbolNameTriggerKind;\n( (function(NewSymbolNameTriggerKind) {\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\n    NewSymbolNameTriggerKind[NewSymbolNameTriggerKind[\"Automatic\"] = 1] = \"Automatic\";\n})(NewSymbolNameTriggerKind || (NewSymbolNameTriggerKind = {})));\nvar OverlayWidgetPositionPreference;\n( (function(OverlayWidgetPositionPreference) {\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {})));\nvar OverviewRulerLane;\n( (function(OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {})));\nvar PartialAcceptTriggerKind;\n( (function(PartialAcceptTriggerKind) {\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Word\"] = 0] = \"Word\";\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Line\"] = 1] = \"Line\";\n    PartialAcceptTriggerKind[PartialAcceptTriggerKind[\"Suggest\"] = 2] = \"Suggest\";\n})(PartialAcceptTriggerKind || (PartialAcceptTriggerKind = {})));\nvar PositionAffinity;\n( (function(PositionAffinity) {\n    PositionAffinity[PositionAffinity[\"Left\"] = 0] = \"Left\";\n    PositionAffinity[PositionAffinity[\"Right\"] = 1] = \"Right\";\n    PositionAffinity[PositionAffinity[\"None\"] = 2] = \"None\";\n    PositionAffinity[PositionAffinity[\"LeftOfInjectedText\"] = 3] = \"LeftOfInjectedText\";\n    PositionAffinity[PositionAffinity[\"RightOfInjectedText\"] = 4] = \"RightOfInjectedText\";\n})(PositionAffinity || (PositionAffinity = {})));\nvar RenderLineNumbersType;\n( (function(RenderLineNumbersType) {\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\n})(RenderLineNumbersType || (RenderLineNumbersType = {})));\nvar RenderMinimap;\n( (function(RenderMinimap) {\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\n    RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\n    RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\n})(RenderMinimap || (RenderMinimap = {})));\nvar ScrollType;\n( (function(ScrollType) {\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\n})(ScrollType || (ScrollType = {})));\nvar ScrollbarVisibility;\n( (function(ScrollbarVisibility) {\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\n})(ScrollbarVisibility || (ScrollbarVisibility = {})));\nvar SelectionDirection;\n( (function(SelectionDirection) {\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\n})(SelectionDirection || (SelectionDirection = {})));\nvar ShowLightbulbIconMode;\n( (function(ShowLightbulbIconMode) {\n    ShowLightbulbIconMode[\"Off\"] = \"off\";\n    ShowLightbulbIconMode[\"OnCode\"] = \"onCode\";\n    ShowLightbulbIconMode[\"On\"] = \"on\";\n})(ShowLightbulbIconMode || (ShowLightbulbIconMode = {})));\nvar SignatureHelpTriggerKind;\n( (function(SignatureHelpTriggerKind) {\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {})));\nvar SymbolKind;\n( (function(SymbolKind) {\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\n})(SymbolKind || (SymbolKind = {})));\nvar SymbolTag;\n( (function(SymbolTag) {\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\n})(SymbolTag || (SymbolTag = {})));\nvar TextEditorCursorBlinkingStyle;\n( (function(TextEditorCursorBlinkingStyle) {\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {})));\nvar TextEditorCursorStyle;\n( (function(TextEditorCursorStyle) {\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {})));\nvar TrackedRangeStickiness;\n( (function(TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {})));\nvar WrappingIndent;\n( (function(WrappingIndent) {\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\n})(WrappingIndent || (WrappingIndent = {})));\nexport { AccessibilitySupport, CodeActionTriggerType, CompletionItemInsertTextRule, CompletionItemKind, CompletionItemTag, CompletionTriggerKind, ContentWidgetPositionPreference, CursorChangeReason, DefaultEndOfLine, DocumentHighlightKind, EditorAutoIndentStrategy, EditorOption, EndOfLinePreference, EndOfLineSequence, GlyphMarginLane, HoverVerbosityAction, IndentAction, InjectedTextCursorStops, InlayHintKind, InlineCompletionTriggerKind, InlineEditTriggerKind, KeyCode, MarkerSeverity, MarkerTag, MinimapPosition, MinimapSectionHeaderStyle, MouseTargetType, NewSymbolNameTag, NewSymbolNameTriggerKind, OverlayWidgetPositionPreference, OverviewRulerLane, PartialAcceptTriggerKind, PositionAffinity, RenderLineNumbersType, RenderMinimap, ScrollType, ScrollbarVisibility, SelectionDirection, ShowLightbulbIconMode, SignatureHelpTriggerKind, SymbolKind, SymbolTag, TextEditorCursorBlinkingStyle, TextEditorCursorStyle, TrackedRangeStickiness, WrappingIndent };\n","import { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyMod as KeyMod$1, KeyChord } from '../../../base/common/keyCodes.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { Selection } from '../core/selection.js';\nimport { Token } from '../languages.js';\nimport { KeyCode, SelectionDirection, MarkerSeverity, MarkerTag } from '../standalone/standaloneEnums.js';\nclass KeyMod {\n    static { this.CtrlCmd = KeyMod$1.CtrlCmd; }\n    static { this.Shift = KeyMod$1.Shift; }\n    static { this.Alt = KeyMod$1.Alt; }\n    static { this.WinCtrl = KeyMod$1.WinCtrl; }\n    static chord(firstPart, secondPart) {\n        return KeyChord(firstPart, secondPart);\n    }\n}\nfunction createMonacoBaseAPI() {\n    return {\n        editor: undefined,\n        languages: undefined,\n        CancellationTokenSource: CancellationTokenSource,\n        Emitter: Emitter,\n        KeyCode: KeyCode,\n        KeyMod: KeyMod,\n        Position: Position,\n        Range: Range,\n        Selection: Selection,\n        SelectionDirection: SelectionDirection,\n        MarkerSeverity: MarkerSeverity,\n        MarkerTag: MarkerTag,\n        Uri: URI,\n        Token: Token\n    };\n}\nexport { KeyMod, createMonacoBaseAPI };\n","import { CharCode } from '../../../base/common/charCode.js';\nimport { LRUCache } from '../../../base/common/map.js';\nimport { CharacterClassifier } from './characterClassifier.js';\nvar WordCharacterClass;\n( (function(WordCharacterClass) {\n    WordCharacterClass[WordCharacterClass[\"Regular\"] = 0] = \"Regular\";\n    WordCharacterClass[WordCharacterClass[\"Whitespace\"] = 1] = \"Whitespace\";\n    WordCharacterClass[WordCharacterClass[\"WordSeparator\"] = 2] = \"WordSeparator\";\n})(WordCharacterClass || (WordCharacterClass = {})));\nclass WordCharacterClassifier extends CharacterClassifier {\n    constructor(wordSeparators, intlSegmenterLocales) {\n        super(WordCharacterClass.Regular);\n        this._segmenter = null;\n        this._cachedLine = null;\n        this._cachedSegments = [];\n        this.intlSegmenterLocales = intlSegmenterLocales;\n        if (this.intlSegmenterLocales.length > 0) {\n            this._segmenter = new Intl.Segmenter(this.intlSegmenterLocales, { granularity: 'word' });\n        }\n        else {\n            this._segmenter = null;\n        }\n        for (let i = 0, len = wordSeparators.length; i < len; i++) {\n            this.set(wordSeparators.charCodeAt(i), WordCharacterClass.WordSeparator);\n        }\n        this.set(CharCode.Space, WordCharacterClass.Whitespace);\n        this.set(CharCode.Tab, WordCharacterClass.Whitespace);\n    }\n    findPrevIntlWordBeforeOrAtOffset(line, offset) {\n        let candidate = null;\n        for (const segment of this._getIntlSegmenterWordsOnLine(line)) {\n            if (segment.index > offset) {\n                break;\n            }\n            candidate = segment;\n        }\n        return candidate;\n    }\n    findNextIntlWordAtOrAfterOffset(lineContent, offset) {\n        for (const segment of this._getIntlSegmenterWordsOnLine(lineContent)) {\n            if (segment.index < offset) {\n                continue;\n            }\n            return segment;\n        }\n        return null;\n    }\n    _getIntlSegmenterWordsOnLine(line) {\n        if (!this._segmenter) {\n            return [];\n        }\n        if (this._cachedLine === line) {\n            return this._cachedSegments;\n        }\n        this._cachedLine = line;\n        this._cachedSegments = this._filterWordSegments(this._segmenter.segment(line));\n        return this._cachedSegments;\n    }\n    _filterWordSegments(segments) {\n        const result = [];\n        for (const segment of segments) {\n            if (this._isWordLike(segment)) {\n                result.push(segment);\n            }\n        }\n        return result;\n    }\n    _isWordLike(segment) {\n        if (segment.isWordLike) {\n            return true;\n        }\n        return false;\n    }\n}\nconst wordClassifierCache = ( new LRUCache(10));\nfunction getMapForWordSeparators(wordSeparators, intlSegmenterLocales) {\n    const key = `${wordSeparators}/${intlSegmenterLocales.join(',')}`;\n    let result = wordClassifierCache.get(key);\n    if (!result) {\n        result = ( new WordCharacterClassifier(wordSeparators, intlSegmenterLocales));\n        wordClassifierCache.set(key, result);\n    }\n    return result;\n}\nexport { WordCharacterClass, WordCharacterClassifier, getMapForWordSeparators };\n","import { equals } from '../../base/common/objects.js';\nvar OverviewRulerLane;\n( (function(OverviewRulerLane) {\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\n})(OverviewRulerLane || (OverviewRulerLane = {})));\nvar GlyphMarginLane;\n( (function(GlyphMarginLane) {\n    GlyphMarginLane[GlyphMarginLane[\"Left\"] = 1] = \"Left\";\n    GlyphMarginLane[GlyphMarginLane[\"Center\"] = 2] = \"Center\";\n    GlyphMarginLane[GlyphMarginLane[\"Right\"] = 3] = \"Right\";\n})(GlyphMarginLane || (GlyphMarginLane = {})));\nvar MinimapPosition;\n( (function(MinimapPosition) {\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\n})(MinimapPosition || (MinimapPosition = {})));\nvar MinimapSectionHeaderStyle;\n( (function(MinimapSectionHeaderStyle) {\n    MinimapSectionHeaderStyle[MinimapSectionHeaderStyle[\"Normal\"] = 1] = \"Normal\";\n    MinimapSectionHeaderStyle[MinimapSectionHeaderStyle[\"Underlined\"] = 2] = \"Underlined\";\n})(MinimapSectionHeaderStyle || (MinimapSectionHeaderStyle = {})));\nvar InjectedTextCursorStops;\n( (function(InjectedTextCursorStops) {\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Both\"] = 0] = \"Both\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Right\"] = 1] = \"Right\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"Left\"] = 2] = \"Left\";\n    InjectedTextCursorStops[InjectedTextCursorStops[\"None\"] = 3] = \"None\";\n})(InjectedTextCursorStops || (InjectedTextCursorStops = {})));\nvar EndOfLinePreference;\n( (function(EndOfLinePreference) {\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\n})(EndOfLinePreference || (EndOfLinePreference = {})));\nvar DefaultEndOfLine;\n( (function(DefaultEndOfLine) {\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\n})(DefaultEndOfLine || (DefaultEndOfLine = {})));\nvar EndOfLineSequence;\n( (function(EndOfLineSequence) {\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\n})(EndOfLineSequence || (EndOfLineSequence = {})));\nclass TextModelResolvedOptions {\n    get originalIndentSize() {\n        return this._indentSizeIsTabSize ? 'tabSize' : this.indentSize;\n    }\n    constructor(src) {\n        this._textModelResolvedOptionsBrand = undefined;\n        this.tabSize = Math.max(1, src.tabSize | 0);\n        if (src.indentSize === 'tabSize') {\n            this.indentSize = this.tabSize;\n            this._indentSizeIsTabSize = true;\n        }\n        else {\n            this.indentSize = Math.max(1, src.indentSize | 0);\n            this._indentSizeIsTabSize = false;\n        }\n        this.insertSpaces = Boolean(src.insertSpaces);\n        this.defaultEOL = src.defaultEOL | 0;\n        this.trimAutoWhitespace = Boolean(src.trimAutoWhitespace);\n        this.bracketPairColorizationOptions = src.bracketPairColorizationOptions;\n    }\n    equals(other) {\n        return (this.tabSize === other.tabSize\n            && this._indentSizeIsTabSize === other._indentSizeIsTabSize\n            && this.indentSize === other.indentSize\n            && this.insertSpaces === other.insertSpaces\n            && this.defaultEOL === other.defaultEOL\n            && this.trimAutoWhitespace === other.trimAutoWhitespace\n            && equals(this.bracketPairColorizationOptions, other.bracketPairColorizationOptions));\n    }\n    createChangeEvent(newOpts) {\n        return {\n            tabSize: this.tabSize !== newOpts.tabSize,\n            indentSize: this.indentSize !== newOpts.indentSize,\n            insertSpaces: this.insertSpaces !== newOpts.insertSpaces,\n            trimAutoWhitespace: this.trimAutoWhitespace !== newOpts.trimAutoWhitespace,\n        };\n    }\n}\nclass FindMatch {\n    constructor(range, matches) {\n        this._findMatchBrand = undefined;\n        this.range = range;\n        this.matches = matches;\n    }\n}\nvar TrackedRangeStickiness;\n( (function(TrackedRangeStickiness) {\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {})));\nfunction isITextSnapshot(obj) {\n    return (obj && typeof obj.read === 'function');\n}\nvar PositionAffinity;\n( (function(PositionAffinity) {\n    PositionAffinity[PositionAffinity[\"Left\"] = 0] = \"Left\";\n    PositionAffinity[PositionAffinity[\"Right\"] = 1] = \"Right\";\n    PositionAffinity[PositionAffinity[\"None\"] = 2] = \"None\";\n    PositionAffinity[PositionAffinity[\"LeftOfInjectedText\"] = 3] = \"LeftOfInjectedText\";\n    PositionAffinity[PositionAffinity[\"RightOfInjectedText\"] = 4] = \"RightOfInjectedText\";\n})(PositionAffinity || (PositionAffinity = {})));\nvar ModelConstants;\n( (function(ModelConstants) {\n    ModelConstants[ModelConstants[\"FIRST_LINE_DETECTION_LENGTH_LIMIT\"] = 1000] = \"FIRST_LINE_DETECTION_LENGTH_LIMIT\";\n})(ModelConstants || (ModelConstants = {})));\nclass ValidAnnotatedEditOperation {\n    constructor(identifier, range, text, forceMoveMarkers, isAutoWhitespaceEdit, _isTracked) {\n        this.identifier = identifier;\n        this.range = range;\n        this.text = text;\n        this.forceMoveMarkers = forceMoveMarkers;\n        this.isAutoWhitespaceEdit = isAutoWhitespaceEdit;\n        this._isTracked = _isTracked;\n    }\n}\nclass SearchData {\n    constructor(regex, wordSeparators, simpleSearch) {\n        this.regex = regex;\n        this.wordSeparators = wordSeparators;\n        this.simpleSearch = simpleSearch;\n    }\n}\nclass ApplyEditsResult {\n    constructor(reverseEdits, changes, trimAutoWhitespaceLineNumbers) {\n        this.reverseEdits = reverseEdits;\n        this.changes = changes;\n        this.trimAutoWhitespaceLineNumbers = trimAutoWhitespaceLineNumbers;\n    }\n}\nfunction shouldSynchronizeModel(model) {\n    return (!model.isTooLargeForSyncing() && !model.isForSimpleWidget);\n}\nexport { ApplyEditsResult, DefaultEndOfLine, EndOfLinePreference, EndOfLineSequence, FindMatch, GlyphMarginLane, InjectedTextCursorStops, MinimapPosition, MinimapSectionHeaderStyle, ModelConstants, OverviewRulerLane, PositionAffinity, SearchData, TextModelResolvedOptions, TrackedRangeStickiness, ValidAnnotatedEditOperation, isITextSnapshot, shouldSynchronizeModel };\n","import { Range } from '../core/range.js';\nimport { Searcher } from '../model/textModelSearch.js';\nimport { isHighSurrogate, AmbiguousCharacters, escapeRegExpCharacters, InvisibleCharacters, isBasicASCII } from '../../../base/common/strings.js';\nimport { assertNever } from '../../../base/common/assert.js';\nimport { getWordAtText, DEFAULT_WORD_REGEXP } from '../core/wordHelper.js';\nclass UnicodeTextModelHighlighter {\n    static computeUnicodeHighlights(model, options, range) {\n        const startLine = range ? range.startLineNumber : 1;\n        const endLine = range ? range.endLineNumber : model.getLineCount();\n        const codePointHighlighter = ( new CodePointHighlighter(options));\n        const candidates = codePointHighlighter.getCandidateCodePoints();\n        let regex;\n        if (candidates === 'allNonBasicAscii') {\n            regex = ( new RegExp('[^\\\\t\\\\n\\\\r\\\\x20-\\\\x7E]', 'g'));\n        }\n        else {\n            regex = ( new RegExp(`${buildRegExpCharClassExpr(Array.from(candidates))}`, 'g'));\n        }\n        const searcher = ( new Searcher(null, regex));\n        const ranges = [];\n        let hasMore = false;\n        let m;\n        let ambiguousCharacterCount = 0;\n        let invisibleCharacterCount = 0;\n        let nonBasicAsciiCharacterCount = 0;\n        forLoop: for (let lineNumber = startLine, lineCount = endLine; lineNumber <= lineCount; lineNumber++) {\n            const lineContent = model.getLineContent(lineNumber);\n            const lineLength = lineContent.length;\n            searcher.reset(0);\n            do {\n                m = searcher.next(lineContent);\n                if (m) {\n                    let startIndex = m.index;\n                    let endIndex = m.index + m[0].length;\n                    if (startIndex > 0) {\n                        const charCodeBefore = lineContent.charCodeAt(startIndex - 1);\n                        if (isHighSurrogate(charCodeBefore)) {\n                            startIndex--;\n                        }\n                    }\n                    if (endIndex + 1 < lineLength) {\n                        const charCodeBefore = lineContent.charCodeAt(endIndex - 1);\n                        if (isHighSurrogate(charCodeBefore)) {\n                            endIndex++;\n                        }\n                    }\n                    const str = lineContent.substring(startIndex, endIndex);\n                    let word = getWordAtText(startIndex + 1, DEFAULT_WORD_REGEXP, lineContent, 0);\n                    if (word && word.endColumn <= startIndex + 1) {\n                        word = null;\n                    }\n                    const highlightReason = codePointHighlighter.shouldHighlightNonBasicASCII(str, word ? word.word : null);\n                    if (highlightReason !== SimpleHighlightReason.None) {\n                        if (highlightReason === SimpleHighlightReason.Ambiguous) {\n                            ambiguousCharacterCount++;\n                        }\n                        else if (highlightReason === SimpleHighlightReason.Invisible) {\n                            invisibleCharacterCount++;\n                        }\n                        else if (highlightReason === SimpleHighlightReason.NonBasicASCII) {\n                            nonBasicAsciiCharacterCount++;\n                        }\n                        else {\n                            assertNever();\n                        }\n                        const MAX_RESULT_LENGTH = 1000;\n                        if (ranges.length >= MAX_RESULT_LENGTH) {\n                            hasMore = true;\n                            break forLoop;\n                        }\n                        ranges.push(( new Range(lineNumber, startIndex + 1, lineNumber, endIndex + 1)));\n                    }\n                }\n            } while (m);\n        }\n        return {\n            ranges,\n            hasMore,\n            ambiguousCharacterCount,\n            invisibleCharacterCount,\n            nonBasicAsciiCharacterCount\n        };\n    }\n    static computeUnicodeHighlightReason(char, options) {\n        const codePointHighlighter = ( new CodePointHighlighter(options));\n        const reason = codePointHighlighter.shouldHighlightNonBasicASCII(char, null);\n        switch (reason) {\n            case SimpleHighlightReason.None:\n                return null;\n            case SimpleHighlightReason.Invisible:\n                return { kind: UnicodeHighlighterReasonKind.Invisible };\n            case SimpleHighlightReason.Ambiguous: {\n                const codePoint = char.codePointAt(0);\n                const primaryConfusable = codePointHighlighter.ambiguousCharacters.getPrimaryConfusable(codePoint);\n                const notAmbiguousInLocales = AmbiguousCharacters.getLocales().filter((l) => !AmbiguousCharacters.getInstance(( new Set([...options.allowedLocales, l]))).isAmbiguous(codePoint));\n                return { kind: UnicodeHighlighterReasonKind.Ambiguous, confusableWith: String.fromCodePoint(primaryConfusable), notAmbiguousInLocales };\n            }\n            case SimpleHighlightReason.NonBasicASCII:\n                return { kind: UnicodeHighlighterReasonKind.NonBasicAscii };\n        }\n    }\n}\nfunction buildRegExpCharClassExpr(codePoints, flags) {\n    const src = `[${escapeRegExpCharacters(( codePoints.map((i) => String.fromCodePoint(i))).join(''))}]`;\n    return src;\n}\nvar UnicodeHighlighterReasonKind;\n( (function(UnicodeHighlighterReasonKind) {\n    UnicodeHighlighterReasonKind[UnicodeHighlighterReasonKind[\"Ambiguous\"] = 0] = \"Ambiguous\";\n    UnicodeHighlighterReasonKind[UnicodeHighlighterReasonKind[\"Invisible\"] = 1] = \"Invisible\";\n    UnicodeHighlighterReasonKind[UnicodeHighlighterReasonKind[\"NonBasicAscii\"] = 2] = \"NonBasicAscii\";\n})(UnicodeHighlighterReasonKind || (UnicodeHighlighterReasonKind = {})));\nclass CodePointHighlighter {\n    constructor(options) {\n        this.options = options;\n        this.allowedCodePoints = ( new Set(options.allowedCodePoints));\n        this.ambiguousCharacters = AmbiguousCharacters.getInstance(( new Set(options.allowedLocales)));\n    }\n    getCandidateCodePoints() {\n        if (this.options.nonBasicASCII) {\n            return 'allNonBasicAscii';\n        }\n        const set = ( new Set());\n        if (this.options.invisibleCharacters) {\n            for (const cp of InvisibleCharacters.codePoints) {\n                if (!isAllowedInvisibleCharacter(String.fromCodePoint(cp))) {\n                    set.add(cp);\n                }\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            for (const cp of this.ambiguousCharacters.getConfusableCodePoints()) {\n                set.add(cp);\n            }\n        }\n        for (const cp of this.allowedCodePoints) {\n            set.delete(cp);\n        }\n        return set;\n    }\n    shouldHighlightNonBasicASCII(character, wordContext) {\n        const codePoint = character.codePointAt(0);\n        if (( this.allowedCodePoints.has(codePoint))) {\n            return SimpleHighlightReason.None;\n        }\n        if (this.options.nonBasicASCII) {\n            return SimpleHighlightReason.NonBasicASCII;\n        }\n        let hasBasicASCIICharacters = false;\n        let hasNonConfusableNonBasicAsciiCharacter = false;\n        if (wordContext) {\n            for (const char of wordContext) {\n                const codePoint = char.codePointAt(0);\n                const isBasicASCII$1 = isBasicASCII(char);\n                hasBasicASCIICharacters = hasBasicASCIICharacters || isBasicASCII$1;\n                if (!isBasicASCII$1 &&\n                    !this.ambiguousCharacters.isAmbiguous(codePoint) &&\n                    !InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                    hasNonConfusableNonBasicAsciiCharacter = true;\n                }\n            }\n        }\n        if (\n         !hasBasicASCIICharacters &&\n             hasNonConfusableNonBasicAsciiCharacter) {\n            return SimpleHighlightReason.None;\n        }\n        if (this.options.invisibleCharacters) {\n            if (!isAllowedInvisibleCharacter(character) && InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                return SimpleHighlightReason.Invisible;\n            }\n        }\n        if (this.options.ambiguousCharacters) {\n            if (this.ambiguousCharacters.isAmbiguous(codePoint)) {\n                return SimpleHighlightReason.Ambiguous;\n            }\n        }\n        return SimpleHighlightReason.None;\n    }\n}\nfunction isAllowedInvisibleCharacter(character) {\n    return character === ' ' || character === '\\n' || character === '\\t';\n}\nvar SimpleHighlightReason;\n( (function(SimpleHighlightReason) {\n    SimpleHighlightReason[SimpleHighlightReason[\"None\"] = 0] = \"None\";\n    SimpleHighlightReason[SimpleHighlightReason[\"NonBasicASCII\"] = 1] = \"NonBasicASCII\";\n    SimpleHighlightReason[SimpleHighlightReason[\"Invisible\"] = 2] = \"Invisible\";\n    SimpleHighlightReason[SimpleHighlightReason[\"Ambiguous\"] = 3] = \"Ambiguous\";\n})(SimpleHighlightReason || (SimpleHighlightReason = {})));\nexport { UnicodeHighlighterReasonKind, UnicodeTextModelHighlighter };\n","import { CharCode } from '../../../base/common/charCode.js';\nimport { createRegExp, getNextCodePoint } from '../../../base/common/strings.js';\nimport { getMapForWordSeparators, WordCharacterClass } from '../core/wordCharacterClassifier.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { SearchData, EndOfLinePreference, FindMatch } from '../model.js';\nconst LIMIT_FIND_COUNT = 999;\nclass SearchParams {\n    constructor(searchString, isRegex, matchCase, wordSeparators) {\n        this.searchString = searchString;\n        this.isRegex = isRegex;\n        this.matchCase = matchCase;\n        this.wordSeparators = wordSeparators;\n    }\n    parseSearchRequest() {\n        if (this.searchString === '') {\n            return null;\n        }\n        let multiline;\n        if (this.isRegex) {\n            multiline = isMultilineRegexSource(this.searchString);\n        }\n        else {\n            multiline = (this.searchString.indexOf('\\n') >= 0);\n        }\n        let regex = null;\n        try {\n            regex = createRegExp(this.searchString, this.isRegex, {\n                matchCase: this.matchCase,\n                wholeWord: false,\n                multiline: multiline,\n                global: true,\n                unicode: true\n            });\n        }\n        catch (err) {\n            return null;\n        }\n        if (!regex) {\n            return null;\n        }\n        let canUseSimpleSearch = (!this.isRegex && !multiline);\n        if (canUseSimpleSearch && this.searchString.toLowerCase() !== this.searchString.toUpperCase()) {\n            canUseSimpleSearch = this.matchCase;\n        }\n        return ( new SearchData(\n            regex,\n            this.wordSeparators ? getMapForWordSeparators(this.wordSeparators, []) : null,\n            canUseSimpleSearch ? this.searchString : null\n        ));\n    }\n}\nfunction isMultilineRegexSource(searchString) {\n    if (!searchString || searchString.length === 0) {\n        return false;\n    }\n    for (let i = 0, len = searchString.length; i < len; i++) {\n        const chCode = searchString.charCodeAt(i);\n        if (chCode === CharCode.LineFeed) {\n            return true;\n        }\n        if (chCode === CharCode.Backslash) {\n            i++;\n            if (i >= len) {\n                break;\n            }\n            const nextChCode = searchString.charCodeAt(i);\n            if (nextChCode === CharCode.n || nextChCode === CharCode.r || nextChCode === CharCode.W) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction createFindMatch(range, rawMatches, captureMatches) {\n    if (!captureMatches) {\n        return ( new FindMatch(range, null));\n    }\n    const matches = [];\n    for (let i = 0, len = rawMatches.length; i < len; i++) {\n        matches[i] = rawMatches[i];\n    }\n    return ( new FindMatch(range, matches));\n}\nclass LineFeedCounter {\n    constructor(text) {\n        const lineFeedsOffsets = [];\n        let lineFeedsOffsetsLen = 0;\n        for (let i = 0, textLen = text.length; i < textLen; i++) {\n            if (text.charCodeAt(i) === CharCode.LineFeed) {\n                lineFeedsOffsets[lineFeedsOffsetsLen++] = i;\n            }\n        }\n        this._lineFeedsOffsets = lineFeedsOffsets;\n    }\n    findLineFeedCountBeforeOffset(offset) {\n        const lineFeedsOffsets = this._lineFeedsOffsets;\n        let min = 0;\n        let max = lineFeedsOffsets.length - 1;\n        if (max === -1) {\n            return 0;\n        }\n        if (offset <= lineFeedsOffsets[0]) {\n            return 0;\n        }\n        while (min < max) {\n            const mid = min + ((max - min) / 2 >> 0);\n            if (lineFeedsOffsets[mid] >= offset) {\n                max = mid - 1;\n            }\n            else {\n                if (lineFeedsOffsets[mid + 1] >= offset) {\n                    min = mid;\n                    max = mid;\n                }\n                else {\n                    min = mid + 1;\n                }\n            }\n        }\n        return min + 1;\n    }\n}\nclass TextModelSearch {\n    static findMatches(model, searchParams, searchRange, captureMatches, limitResultCount) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return [];\n        }\n        if (searchData.regex.multiline) {\n            return this._doFindMatchesMultiline(model, searchRange, ( new Searcher(searchData.wordSeparators, searchData.regex)), captureMatches, limitResultCount);\n        }\n        return this._doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount);\n    }\n    static _getMultilineMatchRange(model, deltaOffset, text, lfCounter, matchIndex, match0) {\n        let startOffset;\n        let lineFeedCountBeforeMatch = 0;\n        if (lfCounter) {\n            lineFeedCountBeforeMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex);\n            startOffset = deltaOffset + matchIndex + lineFeedCountBeforeMatch ;\n        }\n        else {\n            startOffset = deltaOffset + matchIndex;\n        }\n        let endOffset;\n        if (lfCounter) {\n            const lineFeedCountBeforeEndOfMatch = lfCounter.findLineFeedCountBeforeOffset(matchIndex + match0.length);\n            const lineFeedCountInMatch = lineFeedCountBeforeEndOfMatch - lineFeedCountBeforeMatch;\n            endOffset = startOffset + match0.length + lineFeedCountInMatch ;\n        }\n        else {\n            endOffset = startOffset + match0.length;\n        }\n        const startPosition = model.getPositionAt(startOffset);\n        const endPosition = model.getPositionAt(endOffset);\n        return ( new Range(\n            startPosition.lineNumber,\n            startPosition.column,\n            endPosition.lineNumber,\n            endPosition.column\n        ));\n    }\n    static _doFindMatchesMultiline(model, searchRange, searcher, captureMatches, limitResultCount) {\n        const deltaOffset = model.getOffsetAt(searchRange.getStartPosition());\n        const text = model.getValueInRange(searchRange, EndOfLinePreference.LF);\n        const lfCounter = (model.getEOL() === '\\r\\n' ? ( new LineFeedCounter(text)) : null);\n        const result = [];\n        let counter = 0;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            result[counter++] = createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n            if (counter >= limitResultCount) {\n                return result;\n            }\n        }\n        return result;\n    }\n    static _doFindMatchesLineByLine(model, searchRange, searchData, captureMatches, limitResultCount) {\n        const result = [];\n        let resultLen = 0;\n        if (searchRange.startLineNumber === searchRange.endLineNumber) {\n            const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n            return result;\n        }\n        const text = model.getLineContent(searchRange.startLineNumber).substring(searchRange.startColumn - 1);\n        resultLen = this._findMatchesInLine(searchData, text, searchRange.startLineNumber, searchRange.startColumn - 1, resultLen, result, captureMatches, limitResultCount);\n        for (let lineNumber = searchRange.startLineNumber + 1; lineNumber < searchRange.endLineNumber && resultLen < limitResultCount; lineNumber++) {\n            resultLen = this._findMatchesInLine(searchData, model.getLineContent(lineNumber), lineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        if (resultLen < limitResultCount) {\n            const text = model.getLineContent(searchRange.endLineNumber).substring(0, searchRange.endColumn - 1);\n            resultLen = this._findMatchesInLine(searchData, text, searchRange.endLineNumber, 0, resultLen, result, captureMatches, limitResultCount);\n        }\n        return result;\n    }\n    static _findMatchesInLine(searchData, text, lineNumber, deltaOffset, resultLen, result, captureMatches, limitResultCount) {\n        const wordSeparators = searchData.wordSeparators;\n        if (!captureMatches && searchData.simpleSearch) {\n            const searchString = searchData.simpleSearch;\n            const searchStringLen = searchString.length;\n            const textLength = text.length;\n            let lastMatchIndex = -searchStringLen;\n            while ((lastMatchIndex = text.indexOf(searchString, lastMatchIndex + searchStringLen)) !== -1) {\n                if (!wordSeparators || isValidMatch(wordSeparators, text, textLength, lastMatchIndex, searchStringLen)) {\n                    result[resultLen++] = ( new FindMatch(( new Range(\n                        lineNumber,\n                        lastMatchIndex + 1 + deltaOffset,\n                        lineNumber,\n                        lastMatchIndex + 1 + searchStringLen + deltaOffset\n                    )), null));\n                    if (resultLen >= limitResultCount) {\n                        return resultLen;\n                    }\n                }\n            }\n            return resultLen;\n        }\n        const searcher = ( new Searcher(searchData.wordSeparators, searchData.regex));\n        let m;\n        searcher.reset(0);\n        do {\n            m = searcher.next(text);\n            if (m) {\n                result[resultLen++] = createFindMatch(( new Range(\n                    lineNumber,\n                    m.index + 1 + deltaOffset,\n                    lineNumber,\n                    m.index + 1 + m[0].length + deltaOffset\n                )), m, captureMatches);\n                if (resultLen >= limitResultCount) {\n                    return resultLen;\n                }\n            }\n        } while (m);\n        return resultLen;\n    }\n    static findNextMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = ( new Searcher(searchData.wordSeparators, searchData.regex));\n        if (searchData.regex.multiline) {\n            return this._doFindNextMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindNextMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const searchTextStart = ( new Position(searchStart.lineNumber, 1));\n        const deltaOffset = model.getOffsetAt(searchTextStart);\n        const lineCount = model.getLineCount();\n        const text = model.getValueInRange(( new Range(\n            searchTextStart.lineNumber,\n            searchTextStart.column,\n            lineCount,\n            model.getLineMaxColumn(lineCount)\n        )), EndOfLinePreference.LF);\n        const lfCounter = (model.getEOL() === '\\r\\n' ? ( new LineFeedCounter(text)) : null);\n        searcher.reset(searchStart.column - 1);\n        const m = searcher.next(text);\n        if (m) {\n            return createFindMatch(this._getMultilineMatchRange(model, deltaOffset, text, lfCounter, m.index, m[0]), m, captureMatches);\n        }\n        if (searchStart.lineNumber !== 1 || searchStart.column !== 1) {\n            return this._doFindNextMatchMultiline(model, ( new Position(1, 1)), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindNextMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        const text = model.getLineContent(startLineNumber);\n        const r = this._findFirstMatchInLine(searcher, text, startLineNumber, searchStart.column, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (startLineNumber + i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findFirstMatchInLine(searcher, text, lineIndex + 1, 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findFirstMatchInLine(searcher, text, lineNumber, fromColumn, captureMatches) {\n        searcher.reset(fromColumn - 1);\n        const m = searcher.next(text);\n        if (m) {\n            return createFindMatch(( new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length)), m, captureMatches);\n        }\n        return null;\n    }\n    static findPreviousMatch(model, searchParams, searchStart, captureMatches) {\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return null;\n        }\n        const searcher = ( new Searcher(searchData.wordSeparators, searchData.regex));\n        if (searchData.regex.multiline) {\n            return this._doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches);\n        }\n        return this._doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches);\n    }\n    static _doFindPreviousMatchMultiline(model, searchStart, searcher, captureMatches) {\n        const matches = this._doFindMatchesMultiline(model, ( new Range(1, 1, searchStart.lineNumber, searchStart.column)), searcher, captureMatches, 10 * LIMIT_FIND_COUNT);\n        if (matches.length > 0) {\n            return matches[matches.length - 1];\n        }\n        const lineCount = model.getLineCount();\n        if (searchStart.lineNumber !== lineCount || searchStart.column !== model.getLineMaxColumn(lineCount)) {\n            return this._doFindPreviousMatchMultiline(model, ( new Position(lineCount, model.getLineMaxColumn(lineCount))), searcher, captureMatches);\n        }\n        return null;\n    }\n    static _doFindPreviousMatchLineByLine(model, searchStart, searcher, captureMatches) {\n        const lineCount = model.getLineCount();\n        const startLineNumber = searchStart.lineNumber;\n        const text = model.getLineContent(startLineNumber).substring(0, searchStart.column - 1);\n        const r = this._findLastMatchInLine(searcher, text, startLineNumber, captureMatches);\n        if (r) {\n            return r;\n        }\n        for (let i = 1; i <= lineCount; i++) {\n            const lineIndex = (lineCount + startLineNumber - i - 1) % lineCount;\n            const text = model.getLineContent(lineIndex + 1);\n            const r = this._findLastMatchInLine(searcher, text, lineIndex + 1, captureMatches);\n            if (r) {\n                return r;\n            }\n        }\n        return null;\n    }\n    static _findLastMatchInLine(searcher, text, lineNumber, captureMatches) {\n        let bestResult = null;\n        let m;\n        searcher.reset(0);\n        while ((m = searcher.next(text))) {\n            bestResult = createFindMatch(( new Range(lineNumber, m.index + 1, lineNumber, m.index + 1 + m[0].length)), m, captureMatches);\n        }\n        return bestResult;\n    }\n}\nfunction leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex === 0) {\n        return true;\n    }\n    const charBefore = text.charCodeAt(matchStartIndex - 1);\n    if (wordSeparators.get(charBefore) !== WordCharacterClass.Regular) {\n        return true;\n    }\n    if (charBefore === CharCode.CarriageReturn || charBefore === CharCode.LineFeed) {\n        return true;\n    }\n    if (matchLength > 0) {\n        const firstCharInMatch = text.charCodeAt(matchStartIndex);\n        if (wordSeparators.get(firstCharInMatch) !== WordCharacterClass.Regular) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    if (matchStartIndex + matchLength === textLength) {\n        return true;\n    }\n    const charAfter = text.charCodeAt(matchStartIndex + matchLength);\n    if (wordSeparators.get(charAfter) !== WordCharacterClass.Regular) {\n        return true;\n    }\n    if (charAfter === CharCode.CarriageReturn || charAfter === CharCode.LineFeed) {\n        return true;\n    }\n    if (matchLength > 0) {\n        const lastCharInMatch = text.charCodeAt(matchStartIndex + matchLength - 1);\n        if (wordSeparators.get(lastCharInMatch) !== WordCharacterClass.Regular) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isValidMatch(wordSeparators, text, textLength, matchStartIndex, matchLength) {\n    return (leftIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength)\n        && rightIsWordBounday(wordSeparators, text, textLength, matchStartIndex, matchLength));\n}\nclass Searcher {\n    constructor(wordSeparators, searchRegex) {\n        this._wordSeparators = wordSeparators;\n        this._searchRegex = searchRegex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    reset(lastIndex) {\n        this._searchRegex.lastIndex = lastIndex;\n        this._prevMatchStartIndex = -1;\n        this._prevMatchLength = 0;\n    }\n    next(text) {\n        const textLength = text.length;\n        let m;\n        do {\n            if (this._prevMatchStartIndex + this._prevMatchLength === textLength) {\n                return null;\n            }\n            m = this._searchRegex.exec(text);\n            if (!m) {\n                return null;\n            }\n            const matchStartIndex = m.index;\n            const matchLength = m[0].length;\n            if (matchStartIndex === this._prevMatchStartIndex && matchLength === this._prevMatchLength) {\n                if (matchLength === 0) {\n                    if (getNextCodePoint(text, textLength, this._searchRegex.lastIndex) > 0xFFFF) {\n                        this._searchRegex.lastIndex += 2;\n                    }\n                    else {\n                        this._searchRegex.lastIndex += 1;\n                    }\n                    continue;\n                }\n                return null;\n            }\n            this._prevMatchStartIndex = matchStartIndex;\n            this._prevMatchLength = matchLength;\n            if (!this._wordSeparators || isValidMatch(this._wordSeparators, text, textLength, matchStartIndex, matchLength)) {\n                return m;\n            }\n        } while (m);\n        return null;\n    }\n}\nexport { SearchParams, Searcher, TextModelSearch, createFindMatch, isMultilineRegexSource, isValidMatch };\n","import { onUnexpectedError, BugIndicatingError } from './errors.js';\nfunction ok(value, message) {\n    if (!value) {\n        throw ( new Error(message ? `Assertion failed (${message})` : 'Assertion Failed'));\n    }\n}\nfunction assertNever(value, message = 'Unreachable') {\n    throw ( new Error(message));\n}\nfunction assert(condition, message = 'unexpected state') {\n    if (!condition) {\n        throw ( new BugIndicatingError(`Assertion Failed: ${message}`));\n    }\n}\nfunction softAssert(condition) {\n    if (!condition) {\n        onUnexpectedError(( new BugIndicatingError('Soft Assertion Failed')));\n    }\n}\nfunction assertFn(condition) {\n    if (!condition()) {\n        debugger;\n        condition();\n        onUnexpectedError(( new BugIndicatingError('Assertion Failed')));\n    }\n}\nfunction checkAdjacentItems(items, predicate) {\n    let i = 0;\n    while (i < items.length - 1) {\n        const a = items[i];\n        const b = items[i + 1];\n        if (!predicate(a, b)) {\n            return false;\n        }\n        i++;\n    }\n    return true;\n}\nexport { assert, assertFn, assertNever, checkAdjacentItems, ok, softAssert };\n","class LinesDiff {\n    constructor(changes,\n    moves,\n    hitTimeout) {\n        this.changes = changes;\n        this.moves = moves;\n        this.hitTimeout = hitTimeout;\n    }\n}\nclass MovedText {\n    constructor(lineRangeMapping, changes) {\n        this.lineRangeMapping = lineRangeMapping;\n        this.changes = changes;\n    }\n    flip() {\n        return ( new MovedText(this.lineRangeMapping.flip(), ( this.changes.map(c => c.flip()))));\n    }\n}\nexport { LinesDiff, MovedText };\n","import { BugIndicatingError } from '../../../base/common/errors.js';\nclass OffsetRange {\n    static addRange(range, sortedRanges) {\n        let i = 0;\n        while (i < sortedRanges.length && sortedRanges[i].endExclusive < range.start) {\n            i++;\n        }\n        let j = i;\n        while (j < sortedRanges.length && sortedRanges[j].start <= range.endExclusive) {\n            j++;\n        }\n        if (i === j) {\n            sortedRanges.splice(i, 0, range);\n        }\n        else {\n            const start = Math.min(range.start, sortedRanges[i].start);\n            const end = Math.max(range.endExclusive, sortedRanges[j - 1].endExclusive);\n            sortedRanges.splice(i, j - i, ( new OffsetRange(start, end)));\n        }\n    }\n    static tryCreate(start, endExclusive) {\n        if (start > endExclusive) {\n            return undefined;\n        }\n        return ( new OffsetRange(start, endExclusive));\n    }\n    static ofLength(length) {\n        return ( new OffsetRange(0, length));\n    }\n    static ofStartAndLength(start, length) {\n        return ( new OffsetRange(start, start + length));\n    }\n    constructor(start, endExclusive) {\n        this.start = start;\n        this.endExclusive = endExclusive;\n        if (start > endExclusive) {\n            throw ( new BugIndicatingError(`Invalid range: ${( this.toString())}`));\n        }\n    }\n    get isEmpty() {\n        return this.start === this.endExclusive;\n    }\n    delta(offset) {\n        return ( new OffsetRange(this.start + offset, this.endExclusive + offset));\n    }\n    deltaStart(offset) {\n        return ( new OffsetRange(this.start + offset, this.endExclusive));\n    }\n    deltaEnd(offset) {\n        return ( new OffsetRange(this.start, this.endExclusive + offset));\n    }\n    get length() {\n        return this.endExclusive - this.start;\n    }\n    toString() {\n        return `[${this.start}, ${this.endExclusive})`;\n    }\n    equals(other) {\n        return this.start === other.start && this.endExclusive === other.endExclusive;\n    }\n    containsRange(other) {\n        return this.start <= other.start && other.endExclusive <= this.endExclusive;\n    }\n    contains(offset) {\n        return this.start <= offset && offset < this.endExclusive;\n    }\n    join(other) {\n        return ( new OffsetRange(\n            Math.min(this.start, other.start),\n            Math.max(this.endExclusive, other.endExclusive)\n        ));\n    }\n    intersect(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        if (start <= end) {\n            return ( new OffsetRange(start, end));\n        }\n        return undefined;\n    }\n    intersects(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        return start < end;\n    }\n    intersectsOrTouches(other) {\n        const start = Math.max(this.start, other.start);\n        const end = Math.min(this.endExclusive, other.endExclusive);\n        return start <= end;\n    }\n    isBefore(other) {\n        return this.endExclusive <= other.start;\n    }\n    isAfter(other) {\n        return this.start >= other.endExclusive;\n    }\n    slice(arr) {\n        return arr.slice(this.start, this.endExclusive);\n    }\n    substring(str) {\n        return str.substring(this.start, this.endExclusive);\n    }\n    clip(value) {\n        if (this.isEmpty) {\n            throw ( new BugIndicatingError(`Invalid clipping range: ${( this.toString())}`));\n        }\n        return Math.max(this.start, Math.min(this.endExclusive - 1, value));\n    }\n    clipCyclic(value) {\n        if (this.isEmpty) {\n            throw ( new BugIndicatingError(`Invalid clipping range: ${( this.toString())}`));\n        }\n        if (value < this.start) {\n            return this.endExclusive - ((this.start - value) % this.length);\n        }\n        if (value >= this.endExclusive) {\n            return this.start + ((value - this.start) % this.length);\n        }\n        return value;\n    }\n    map(f) {\n        const result = [];\n        for (let i = this.start; i < this.endExclusive; i++) {\n            result.push(f(i));\n        }\n        return result;\n    }\n    forEach(f) {\n        for (let i = this.start; i < this.endExclusive; i++) {\n            f(i);\n        }\n    }\n}\nclass OffsetRangeSet {\n    constructor() {\n        this._sortedRanges = [];\n    }\n    addRange(range) {\n        let i = 0;\n        while (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive < range.start) {\n            i++;\n        }\n        let j = i;\n        while (j < this._sortedRanges.length && this._sortedRanges[j].start <= range.endExclusive) {\n            j++;\n        }\n        if (i === j) {\n            this._sortedRanges.splice(i, 0, range);\n        }\n        else {\n            const start = Math.min(range.start, this._sortedRanges[i].start);\n            const end = Math.max(range.endExclusive, this._sortedRanges[j - 1].endExclusive);\n            this._sortedRanges.splice(i, j - i, ( new OffsetRange(start, end)));\n        }\n    }\n    toString() {\n        return ( this._sortedRanges.map(r => ( r.toString()))).join(', ');\n    }\n    intersectsStrict(other) {\n        let i = 0;\n        while (i < this._sortedRanges.length && this._sortedRanges[i].endExclusive <= other.start) {\n            i++;\n        }\n        return i < this._sortedRanges.length && this._sortedRanges[i].start < other.endExclusive;\n    }\n    intersectWithRange(other) {\n        const result = ( new OffsetRangeSet());\n        for (const range of this._sortedRanges) {\n            const intersection = range.intersect(other);\n            if (intersection) {\n                result.addRange(intersection);\n            }\n        }\n        return result;\n    }\n    intersectWithRangeLength(other) {\n        return this.intersectWithRange(other).length;\n    }\n    get length() {\n        return this._sortedRanges.reduce((prev, cur) => prev + cur.length, 0);\n    }\n}\nexport { OffsetRange, OffsetRangeSet };\n","import { BugIndicatingError } from '../../../base/common/errors.js';\nimport { OffsetRange } from './offsetRange.js';\nimport { Range } from './range.js';\nimport { findFirstIdxMonotonousOrArrLen, findLastMonotonous, findLastIdxMonotonous } from '../../../base/common/arraysFind.js';\nclass LineRange {\n    static fromRange(range) {\n        return ( new LineRange(range.startLineNumber, range.endLineNumber));\n    }\n    static fromRangeInclusive(range) {\n        return ( new LineRange(range.startLineNumber, range.endLineNumber + 1));\n    }\n    static subtract(a, b) {\n        if (!b) {\n            return [a];\n        }\n        if (a.startLineNumber < b.startLineNumber && b.endLineNumberExclusive < a.endLineNumberExclusive) {\n            return [\n                ( new LineRange(a.startLineNumber, b.startLineNumber)),\n                ( new LineRange(b.endLineNumberExclusive, a.endLineNumberExclusive))\n            ];\n        }\n        else if (b.startLineNumber <= a.startLineNumber && a.endLineNumberExclusive <= b.endLineNumberExclusive) {\n            return [];\n        }\n        else if (b.endLineNumberExclusive < a.endLineNumberExclusive) {\n            return [( new LineRange(\n                Math.max(b.endLineNumberExclusive, a.startLineNumber),\n                a.endLineNumberExclusive\n            ))];\n        }\n        else {\n            return [( new LineRange(a.startLineNumber, Math.min(b.startLineNumber, a.endLineNumberExclusive)))];\n        }\n    }\n    static joinMany(lineRanges) {\n        if (lineRanges.length === 0) {\n            return [];\n        }\n        let result = ( new LineRangeSet(lineRanges[0].slice()));\n        for (let i = 1; i < lineRanges.length; i++) {\n            result = result.getUnion(( new LineRangeSet(lineRanges[i].slice())));\n        }\n        return result.ranges;\n    }\n    static join(lineRanges) {\n        if (lineRanges.length === 0) {\n            throw ( new BugIndicatingError('lineRanges cannot be empty'));\n        }\n        let startLineNumber = lineRanges[0].startLineNumber;\n        let endLineNumberExclusive = lineRanges[0].endLineNumberExclusive;\n        for (let i = 1; i < lineRanges.length; i++) {\n            startLineNumber = Math.min(startLineNumber, lineRanges[i].startLineNumber);\n            endLineNumberExclusive = Math.max(endLineNumberExclusive, lineRanges[i].endLineNumberExclusive);\n        }\n        return ( new LineRange(startLineNumber, endLineNumberExclusive));\n    }\n    static ofLength(startLineNumber, length) {\n        return ( new LineRange(startLineNumber, startLineNumber + length));\n    }\n    static deserialize(lineRange) {\n        return ( new LineRange(lineRange[0], lineRange[1]));\n    }\n    constructor(startLineNumber, endLineNumberExclusive) {\n        if (startLineNumber > endLineNumberExclusive) {\n            throw ( new BugIndicatingError(\n                `startLineNumber ${startLineNumber} cannot be after endLineNumberExclusive ${endLineNumberExclusive}`\n            ));\n        }\n        this.startLineNumber = startLineNumber;\n        this.endLineNumberExclusive = endLineNumberExclusive;\n    }\n    contains(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    get isEmpty() {\n        return this.startLineNumber === this.endLineNumberExclusive;\n    }\n    delta(offset) {\n        return ( new LineRange(this.startLineNumber + offset, this.endLineNumberExclusive + offset));\n    }\n    deltaLength(offset) {\n        return ( new LineRange(this.startLineNumber, this.endLineNumberExclusive + offset));\n    }\n    get length() {\n        return this.endLineNumberExclusive - this.startLineNumber;\n    }\n    join(other) {\n        return ( new LineRange(\n            Math.min(this.startLineNumber, other.startLineNumber),\n            Math.max(this.endLineNumberExclusive, other.endLineNumberExclusive)\n        ));\n    }\n    toString() {\n        return `[${this.startLineNumber},${this.endLineNumberExclusive})`;\n    }\n    intersect(other) {\n        const startLineNumber = Math.max(this.startLineNumber, other.startLineNumber);\n        const endLineNumberExclusive = Math.min(this.endLineNumberExclusive, other.endLineNumberExclusive);\n        if (startLineNumber <= endLineNumberExclusive) {\n            return ( new LineRange(startLineNumber, endLineNumberExclusive));\n        }\n        return undefined;\n    }\n    intersectsStrict(other) {\n        return this.startLineNumber < other.endLineNumberExclusive && other.startLineNumber < this.endLineNumberExclusive;\n    }\n    overlapOrTouch(other) {\n        return this.startLineNumber <= other.endLineNumberExclusive && other.startLineNumber <= this.endLineNumberExclusive;\n    }\n    equals(b) {\n        return this.startLineNumber === b.startLineNumber && this.endLineNumberExclusive === b.endLineNumberExclusive;\n    }\n    toInclusiveRange() {\n        if (this.isEmpty) {\n            return null;\n        }\n        return ( new Range(\n            this.startLineNumber,\n            1,\n            this.endLineNumberExclusive - 1,\n            Number.MAX_SAFE_INTEGER\n        ));\n    }\n    toExclusiveRange() {\n        return ( new Range(this.startLineNumber, 1, this.endLineNumberExclusive, 1));\n    }\n    mapToLineArray(f) {\n        const result = [];\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            result.push(f(lineNumber));\n        }\n        return result;\n    }\n    forEach(f) {\n        for (let lineNumber = this.startLineNumber; lineNumber < this.endLineNumberExclusive; lineNumber++) {\n            f(lineNumber);\n        }\n    }\n    serialize() {\n        return [this.startLineNumber, this.endLineNumberExclusive];\n    }\n    includes(lineNumber) {\n        return this.startLineNumber <= lineNumber && lineNumber < this.endLineNumberExclusive;\n    }\n    toOffsetRange() {\n        return ( new OffsetRange(this.startLineNumber - 1, this.endLineNumberExclusive - 1));\n    }\n}\nclass LineRangeSet {\n    constructor(\n    _normalizedRanges = []) {\n        this._normalizedRanges = _normalizedRanges;\n    }\n    get ranges() {\n        return this._normalizedRanges;\n    }\n    addRange(range) {\n        if (range.length === 0) {\n            return;\n        }\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            this._normalizedRanges.splice(joinRangeStartIdx, 0, range);\n        }\n        else if (joinRangeStartIdx === joinRangeEndIdxExclusive - 1) {\n            const joinRange = this._normalizedRanges[joinRangeStartIdx];\n            this._normalizedRanges[joinRangeStartIdx] = joinRange.join(range);\n        }\n        else {\n            const joinRange = this._normalizedRanges[joinRangeStartIdx].join(this._normalizedRanges[joinRangeEndIdxExclusive - 1]).join(range);\n            this._normalizedRanges.splice(joinRangeStartIdx, joinRangeEndIdxExclusive - joinRangeStartIdx, joinRange);\n        }\n    }\n    contains(lineNumber) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber <= lineNumber);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > lineNumber;\n    }\n    intersects(range) {\n        const rangeThatStartsBeforeEnd = findLastMonotonous(this._normalizedRanges, r => r.startLineNumber < range.endLineNumberExclusive);\n        return !!rangeThatStartsBeforeEnd && rangeThatStartsBeforeEnd.endLineNumberExclusive > range.startLineNumber;\n    }\n    getUnion(other) {\n        if (this._normalizedRanges.length === 0) {\n            return other;\n        }\n        if (other._normalizedRanges.length === 0) {\n            return this;\n        }\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        let current = null;\n        while (i1 < this._normalizedRanges.length || i2 < other._normalizedRanges.length) {\n            let next = null;\n            if (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n                const lineRange1 = this._normalizedRanges[i1];\n                const lineRange2 = other._normalizedRanges[i2];\n                if (lineRange1.startLineNumber < lineRange2.startLineNumber) {\n                    next = lineRange1;\n                    i1++;\n                }\n                else {\n                    next = lineRange2;\n                    i2++;\n                }\n            }\n            else if (i1 < this._normalizedRanges.length) {\n                next = this._normalizedRanges[i1];\n                i1++;\n            }\n            else {\n                next = other._normalizedRanges[i2];\n                i2++;\n            }\n            if (current === null) {\n                current = next;\n            }\n            else {\n                if (current.endLineNumberExclusive >= next.startLineNumber) {\n                    current = ( new LineRange(\n                        current.startLineNumber,\n                        Math.max(current.endLineNumberExclusive, next.endLineNumberExclusive)\n                    ));\n                }\n                else {\n                    result.push(current);\n                    current = next;\n                }\n            }\n        }\n        if (current !== null) {\n            result.push(current);\n        }\n        return ( new LineRangeSet(result));\n    }\n    subtractFrom(range) {\n        const joinRangeStartIdx = findFirstIdxMonotonousOrArrLen(this._normalizedRanges, r => r.endLineNumberExclusive >= range.startLineNumber);\n        const joinRangeEndIdxExclusive = findLastIdxMonotonous(this._normalizedRanges, r => r.startLineNumber <= range.endLineNumberExclusive) + 1;\n        if (joinRangeStartIdx === joinRangeEndIdxExclusive) {\n            return ( new LineRangeSet([range]));\n        }\n        const result = [];\n        let startLineNumber = range.startLineNumber;\n        for (let i = joinRangeStartIdx; i < joinRangeEndIdxExclusive; i++) {\n            const r = this._normalizedRanges[i];\n            if (r.startLineNumber > startLineNumber) {\n                result.push(( new LineRange(startLineNumber, r.startLineNumber)));\n            }\n            startLineNumber = r.endLineNumberExclusive;\n        }\n        if (startLineNumber < range.endLineNumberExclusive) {\n            result.push(( new LineRange(startLineNumber, range.endLineNumberExclusive)));\n        }\n        return ( new LineRangeSet(result));\n    }\n    toString() {\n        return ( this._normalizedRanges.map(r => ( r.toString()))).join(', ');\n    }\n    getIntersection(other) {\n        const result = [];\n        let i1 = 0;\n        let i2 = 0;\n        while (i1 < this._normalizedRanges.length && i2 < other._normalizedRanges.length) {\n            const r1 = this._normalizedRanges[i1];\n            const r2 = other._normalizedRanges[i2];\n            const i = r1.intersect(r2);\n            if (i && !i.isEmpty) {\n                result.push(i);\n            }\n            if (r1.endLineNumberExclusive < r2.endLineNumberExclusive) {\n                i1++;\n            }\n            else {\n                i2++;\n            }\n        }\n        return ( new LineRangeSet(result));\n    }\n    getWithDelta(value) {\n        return ( new LineRangeSet(( this._normalizedRanges.map(r => r.delta(value)))));\n    }\n}\nexport { LineRange, LineRangeSet };\n","import { Position } from './position.js';\nimport { Range } from './range.js';\nclass TextLength {\n    static { this.zero = ( new TextLength(0, 0)); }\n    static lengthDiffNonNegative(start, end) {\n        if (end.isLessThan(start)) {\n            return TextLength.zero;\n        }\n        if (start.lineCount === end.lineCount) {\n            return ( new TextLength(0, end.columnCount - start.columnCount));\n        }\n        else {\n            return ( new TextLength(end.lineCount - start.lineCount, end.columnCount));\n        }\n    }\n    static betweenPositions(position1, position2) {\n        if (position1.lineNumber === position2.lineNumber) {\n            return ( new TextLength(0, position2.column - position1.column));\n        }\n        else {\n            return ( new TextLength(position2.lineNumber - position1.lineNumber, position2.column - 1));\n        }\n    }\n    static ofRange(range) {\n        return TextLength.betweenPositions(range.getStartPosition(), range.getEndPosition());\n    }\n    static ofText(text) {\n        let line = 0;\n        let column = 0;\n        for (const c of text) {\n            if (c === '\\n') {\n                line++;\n                column = 0;\n            }\n            else {\n                column++;\n            }\n        }\n        return ( new TextLength(line, column));\n    }\n    constructor(lineCount, columnCount) {\n        this.lineCount = lineCount;\n        this.columnCount = columnCount;\n    }\n    isZero() {\n        return this.lineCount === 0 && this.columnCount === 0;\n    }\n    isLessThan(other) {\n        if (this.lineCount !== other.lineCount) {\n            return this.lineCount < other.lineCount;\n        }\n        return this.columnCount < other.columnCount;\n    }\n    isGreaterThan(other) {\n        if (this.lineCount !== other.lineCount) {\n            return this.lineCount > other.lineCount;\n        }\n        return this.columnCount > other.columnCount;\n    }\n    isGreaterThanOrEqualTo(other) {\n        if (this.lineCount !== other.lineCount) {\n            return this.lineCount > other.lineCount;\n        }\n        return this.columnCount >= other.columnCount;\n    }\n    equals(other) {\n        return this.lineCount === other.lineCount && this.columnCount === other.columnCount;\n    }\n    compare(other) {\n        if (this.lineCount !== other.lineCount) {\n            return this.lineCount - other.lineCount;\n        }\n        return this.columnCount - other.columnCount;\n    }\n    add(other) {\n        if (other.lineCount === 0) {\n            return ( new TextLength(this.lineCount, this.columnCount + other.columnCount));\n        }\n        else {\n            return ( new TextLength(this.lineCount + other.lineCount, other.columnCount));\n        }\n    }\n    createRange(startPosition) {\n        if (this.lineCount === 0) {\n            return ( new Range(\n                startPosition.lineNumber,\n                startPosition.column,\n                startPosition.lineNumber,\n                startPosition.column + this.columnCount\n            ));\n        }\n        else {\n            return ( new Range(\n                startPosition.lineNumber,\n                startPosition.column,\n                startPosition.lineNumber + this.lineCount,\n                this.columnCount + 1\n            ));\n        }\n    }\n    toRange() {\n        return ( new Range(1, 1, this.lineCount + 1, this.columnCount + 1));\n    }\n    addToPosition(position) {\n        if (this.lineCount === 0) {\n            return ( new Position(position.lineNumber, position.column + this.columnCount));\n        }\n        else {\n            return ( new Position(position.lineNumber + this.lineCount, this.columnCount + 1));\n        }\n    }\n    toString() {\n        return `${this.lineCount},${this.columnCount}`;\n    }\n}\nexport { TextLength };\n","import { assertFn, checkAdjacentItems } from '../../../base/common/assert.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { Position } from './position.js';\nimport { PositionOffsetTransformer } from './positionToOffset.js';\nimport { Range } from './range.js';\nimport { TextLength } from './textLength.js';\nclass TextEdit {\n    static single(originalRange, newText) {\n        return ( new TextEdit([( new SingleTextEdit(originalRange, newText))]));\n    }\n    constructor(edits) {\n        this.edits = edits;\n        assertFn(() => checkAdjacentItems(edits, (a, b) => a.range.getEndPosition().isBeforeOrEqual(b.range.getStartPosition())));\n    }\n    normalize() {\n        const edits = [];\n        for (const edit of this.edits) {\n            if (edits.length > 0 && edits[edits.length - 1].range.getEndPosition().equals(edit.range.getStartPosition())) {\n                const last = edits[edits.length - 1];\n                edits[edits.length - 1] = ( new SingleTextEdit(last.range.plusRange(edit.range), last.text + edit.text));\n            }\n            else if (!edit.isEmpty) {\n                edits.push(edit);\n            }\n        }\n        return ( new TextEdit(edits));\n    }\n    mapPosition(position) {\n        let lineDelta = 0;\n        let curLine = 0;\n        let columnDeltaInCurLine = 0;\n        for (const edit of this.edits) {\n            const start = edit.range.getStartPosition();\n            const end = edit.range.getEndPosition();\n            if (position.isBeforeOrEqual(start)) {\n                break;\n            }\n            const len = TextLength.ofText(edit.text);\n            if (position.isBefore(end)) {\n                const startPos = ( new Position(\n                    start.lineNumber + lineDelta,\n                    start.column + (start.lineNumber + lineDelta === curLine ? columnDeltaInCurLine : 0)\n                ));\n                const endPos = len.addToPosition(startPos);\n                return rangeFromPositions(startPos, endPos);\n            }\n            lineDelta += len.lineCount - (edit.range.endLineNumber - edit.range.startLineNumber);\n            if (len.lineCount === 0) {\n                if (end.lineNumber !== start.lineNumber) {\n                    columnDeltaInCurLine += len.columnCount - (end.column - 1);\n                }\n                else {\n                    columnDeltaInCurLine += len.columnCount - (end.column - start.column);\n                }\n            }\n            else {\n                columnDeltaInCurLine = len.columnCount;\n            }\n            curLine = end.lineNumber + lineDelta;\n        }\n        return ( new Position(\n            position.lineNumber + lineDelta,\n            position.column + (position.lineNumber + lineDelta === curLine ? columnDeltaInCurLine : 0)\n        ));\n    }\n    mapRange(range) {\n        function getStart(p) {\n            return p instanceof Position ? p : p.getStartPosition();\n        }\n        function getEnd(p) {\n            return p instanceof Position ? p : p.getEndPosition();\n        }\n        const start = getStart(this.mapPosition(range.getStartPosition()));\n        const end = getEnd(this.mapPosition(range.getEndPosition()));\n        return rangeFromPositions(start, end);\n    }\n    inverseMapPosition(positionAfterEdit, doc) {\n        const reversed = this.inverse(doc);\n        return reversed.mapPosition(positionAfterEdit);\n    }\n    inverseMapRange(range, doc) {\n        const reversed = this.inverse(doc);\n        return reversed.mapRange(range);\n    }\n    apply(text) {\n        let result = '';\n        let lastEditEnd = ( new Position(1, 1));\n        for (const edit of this.edits) {\n            const editRange = edit.range;\n            const editStart = editRange.getStartPosition();\n            const editEnd = editRange.getEndPosition();\n            const r = rangeFromPositions(lastEditEnd, editStart);\n            if (!r.isEmpty()) {\n                result += text.getValueOfRange(r);\n            }\n            result += edit.text;\n            lastEditEnd = editEnd;\n        }\n        const r = rangeFromPositions(lastEditEnd, text.endPositionExclusive);\n        if (!r.isEmpty()) {\n            result += text.getValueOfRange(r);\n        }\n        return result;\n    }\n    applyToString(str) {\n        const strText = ( new StringText(str));\n        return this.apply(strText);\n    }\n    inverse(doc) {\n        const ranges = this.getNewRanges();\n        return ( new TextEdit(( this.edits.map((e, idx) => ( new SingleTextEdit(ranges[idx], doc.getValueOfRange(e.range)))))));\n    }\n    getNewRanges() {\n        const newRanges = [];\n        let previousEditEndLineNumber = 0;\n        let lineOffset = 0;\n        let columnOffset = 0;\n        for (const edit of this.edits) {\n            const textLength = TextLength.ofText(edit.text);\n            const newRangeStart = Position.lift({\n                lineNumber: edit.range.startLineNumber + lineOffset,\n                column: edit.range.startColumn + (edit.range.startLineNumber === previousEditEndLineNumber ? columnOffset : 0)\n            });\n            const newRange = textLength.createRange(newRangeStart);\n            newRanges.push(newRange);\n            lineOffset = newRange.endLineNumber - edit.range.endLineNumber;\n            columnOffset = newRange.endColumn - edit.range.endColumn;\n            previousEditEndLineNumber = edit.range.endLineNumber;\n        }\n        return newRanges;\n    }\n}\nclass SingleTextEdit {\n    constructor(range, text) {\n        this.range = range;\n        this.text = text;\n    }\n    get isEmpty() {\n        return this.range.isEmpty() && this.text.length === 0;\n    }\n    static equals(first, second) {\n        return first.range.equalsRange(second.range) && first.text === second.text;\n    }\n    toSingleEditOperation() {\n        return {\n            range: this.range,\n            text: this.text,\n        };\n    }\n}\nfunction rangeFromPositions(start, end) {\n    if (start.lineNumber === end.lineNumber && start.column === Number.MAX_SAFE_INTEGER) {\n        return Range.fromPositions(end, end);\n    }\n    else if (!start.isBeforeOrEqual(end)) {\n        throw ( new BugIndicatingError('start must be before end'));\n    }\n    return ( new Range(start.lineNumber, start.column, end.lineNumber, end.column));\n}\nclass AbstractText {\n    get endPositionExclusive() {\n        return this.length.addToPosition(( new Position(1, 1)));\n    }\n    getValue() {\n        return this.getValueOfRange(this.length.toRange());\n    }\n}\nclass StringText extends AbstractText {\n    constructor(value) {\n        super();\n        this.value = value;\n        this._t = ( new PositionOffsetTransformer(this.value));\n    }\n    getValueOfRange(range) {\n        return this._t.getOffsetRange(range).substring(this.value);\n    }\n    get length() {\n        return this._t.textLength;\n    }\n}\nexport { AbstractText, SingleTextEdit, StringText, TextEdit };\n","import { BugIndicatingError } from '../../../base/common/errors.js';\nimport { LineRange } from '../core/lineRange.js';\nimport { Range } from '../core/range.js';\nimport { SingleTextEdit } from '../core/textEdit.js';\nclass LineRangeMapping {\n    static inverse(mapping, originalLineCount, modifiedLineCount) {\n        const result = [];\n        let lastOriginalEndLineNumber = 1;\n        let lastModifiedEndLineNumber = 1;\n        for (const m of mapping) {\n            const r = ( new LineRangeMapping(( new LineRange(lastOriginalEndLineNumber, m.original.startLineNumber)), ( new LineRange(lastModifiedEndLineNumber, m.modified.startLineNumber))));\n            if (!r.modified.isEmpty) {\n                result.push(r);\n            }\n            lastOriginalEndLineNumber = m.original.endLineNumberExclusive;\n            lastModifiedEndLineNumber = m.modified.endLineNumberExclusive;\n        }\n        const r = ( new LineRangeMapping(( new LineRange(lastOriginalEndLineNumber, originalLineCount + 1)), ( new LineRange(lastModifiedEndLineNumber, modifiedLineCount + 1))));\n        if (!r.modified.isEmpty) {\n            result.push(r);\n        }\n        return result;\n    }\n    static clip(mapping, originalRange, modifiedRange) {\n        const result = [];\n        for (const m of mapping) {\n            const original = m.original.intersect(originalRange);\n            const modified = m.modified.intersect(modifiedRange);\n            if (original && !original.isEmpty && modified && !modified.isEmpty) {\n                result.push(( new LineRangeMapping(original, modified)));\n            }\n        }\n        return result;\n    }\n    constructor(originalRange, modifiedRange) {\n        this.original = originalRange;\n        this.modified = modifiedRange;\n    }\n    toString() {\n        return `{${( this.original.toString())}->${( this.modified.toString())}}`;\n    }\n    flip() {\n        return ( new LineRangeMapping(this.modified, this.original));\n    }\n    join(other) {\n        return ( new LineRangeMapping(this.original.join(other.original), this.modified.join(other.modified)));\n    }\n    get changedLineCount() {\n        return Math.max(this.original.length, this.modified.length);\n    }\n    toRangeMapping() {\n        const origInclusiveRange = this.original.toInclusiveRange();\n        const modInclusiveRange = this.modified.toInclusiveRange();\n        if (origInclusiveRange && modInclusiveRange) {\n            return ( new RangeMapping(origInclusiveRange, modInclusiveRange));\n        }\n        else if (this.original.startLineNumber === 1 || this.modified.startLineNumber === 1) {\n            if (!(this.modified.startLineNumber === 1 && this.original.startLineNumber === 1)) {\n                throw ( new BugIndicatingError('not a valid diff'));\n            }\n            return ( new RangeMapping(( new Range(this.original.startLineNumber, 1, this.original.endLineNumberExclusive, 1)), ( new Range(this.modified.startLineNumber, 1, this.modified.endLineNumberExclusive, 1))));\n        }\n        else {\n            return ( new RangeMapping(( new Range(\n                this.original.startLineNumber - 1,\n                Number.MAX_SAFE_INTEGER,\n                this.original.endLineNumberExclusive - 1,\n                Number.MAX_SAFE_INTEGER\n            )), ( new Range(\n                this.modified.startLineNumber - 1,\n                Number.MAX_SAFE_INTEGER,\n                this.modified.endLineNumberExclusive - 1,\n                Number.MAX_SAFE_INTEGER\n            ))));\n        }\n    }\n}\nclass DetailedLineRangeMapping extends LineRangeMapping {\n    static fromRangeMappings(rangeMappings) {\n        const originalRange = LineRange.join(( rangeMappings.map(r => LineRange.fromRangeInclusive(r.originalRange))));\n        const modifiedRange = LineRange.join(( rangeMappings.map(r => LineRange.fromRangeInclusive(r.modifiedRange))));\n        return ( new DetailedLineRangeMapping(originalRange, modifiedRange, rangeMappings));\n    }\n    constructor(originalRange, modifiedRange, innerChanges) {\n        super(originalRange, modifiedRange);\n        this.innerChanges = innerChanges;\n    }\n    flip() {\n        return ( new DetailedLineRangeMapping(this.modified, this.original, this.innerChanges?.map(c => c.flip())));\n    }\n    withInnerChangesFromLineRanges() {\n        return ( new DetailedLineRangeMapping(this.original, this.modified, [this.toRangeMapping()]));\n    }\n}\nclass RangeMapping {\n    constructor(originalRange, modifiedRange) {\n        this.originalRange = originalRange;\n        this.modifiedRange = modifiedRange;\n    }\n    toString() {\n        return `{${( this.originalRange.toString())}->${( this.modifiedRange.toString())}}`;\n    }\n    flip() {\n        return ( new RangeMapping(this.modifiedRange, this.originalRange));\n    }\n    toTextEdit(modified) {\n        const newText = modified.getValueOfRange(this.modifiedRange);\n        return ( new SingleTextEdit(this.originalRange, newText));\n    }\n}\nexport { DetailedLineRangeMapping, LineRangeMapping, RangeMapping };\n","import { CharCode } from '../../../base/common/charCode.js';\nimport { LcsDiff } from '../../../base/common/diff/diff.js';\nimport { LinesDiff } from './linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping } from './rangeMapping.js';\nimport { firstNonWhitespaceIndex, lastNonWhitespaceIndex } from '../../../base/common/strings.js';\nimport { Range } from '../core/range.js';\nimport { assertFn, checkAdjacentItems } from '../../../base/common/assert.js';\nimport { LineRange } from '../core/lineRange.js';\nconst MINIMUM_MATCHING_CHARACTER_LENGTH = 3;\nclass LegacyLinesDiffComputer {\n    computeDiff(originalLines, modifiedLines, options) {\n        const diffComputer = ( new DiffComputer(originalLines, modifiedLines, {\n            maxComputationTime: options.maxComputationTimeMs,\n            shouldIgnoreTrimWhitespace: options.ignoreTrimWhitespace,\n            shouldComputeCharChanges: true,\n            shouldMakePrettyDiff: true,\n            shouldPostProcessCharChanges: true,\n        }));\n        const result = diffComputer.computeDiff();\n        const changes = [];\n        let lastChange = null;\n        for (const c of result.changes) {\n            let originalRange;\n            if (c.originalEndLineNumber === 0) {\n                originalRange = ( new LineRange(c.originalStartLineNumber + 1, c.originalStartLineNumber + 1));\n            }\n            else {\n                originalRange = ( new LineRange(c.originalStartLineNumber, c.originalEndLineNumber + 1));\n            }\n            let modifiedRange;\n            if (c.modifiedEndLineNumber === 0) {\n                modifiedRange = ( new LineRange(c.modifiedStartLineNumber + 1, c.modifiedStartLineNumber + 1));\n            }\n            else {\n                modifiedRange = ( new LineRange(c.modifiedStartLineNumber, c.modifiedEndLineNumber + 1));\n            }\n            let change = ( new DetailedLineRangeMapping(originalRange, modifiedRange, c.charChanges?.map(c => ( new RangeMapping(( new Range(\n                c.originalStartLineNumber,\n                c.originalStartColumn,\n                c.originalEndLineNumber,\n                c.originalEndColumn\n            )), ( new Range(\n                c.modifiedStartLineNumber,\n                c.modifiedStartColumn,\n                c.modifiedEndLineNumber,\n                c.modifiedEndColumn\n            )))))));\n            if (lastChange) {\n                if (lastChange.modified.endLineNumberExclusive === change.modified.startLineNumber\n                    || lastChange.original.endLineNumberExclusive === change.original.startLineNumber) {\n                    change = ( new DetailedLineRangeMapping(\n                        lastChange.original.join(change.original),\n                        lastChange.modified.join(change.modified),\n                        lastChange.innerChanges && change.innerChanges ?\n                            lastChange.innerChanges.concat(change.innerChanges) : undefined\n                    ));\n                    changes.pop();\n                }\n            }\n            changes.push(change);\n            lastChange = change;\n        }\n        assertFn(() => {\n            return checkAdjacentItems(changes, (m1, m2) => m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n                m1.original.endLineNumberExclusive < m2.original.startLineNumber &&\n                m1.modified.endLineNumberExclusive < m2.modified.startLineNumber);\n        });\n        return ( new LinesDiff(changes, [], result.quitEarly));\n    }\n}\nfunction computeDiff(originalSequence, modifiedSequence, continueProcessingPredicate, pretty) {\n    const diffAlgo = ( new LcsDiff(originalSequence, modifiedSequence, continueProcessingPredicate));\n    return diffAlgo.ComputeDiff(pretty);\n}\nclass LineSequence {\n    constructor(lines) {\n        const startColumns = [];\n        const endColumns = [];\n        for (let i = 0, length = lines.length; i < length; i++) {\n            startColumns[i] = getFirstNonBlankColumn(lines[i], 1);\n            endColumns[i] = getLastNonBlankColumn(lines[i], 1);\n        }\n        this.lines = lines;\n        this._startColumns = startColumns;\n        this._endColumns = endColumns;\n    }\n    getElements() {\n        const elements = [];\n        for (let i = 0, len = this.lines.length; i < len; i++) {\n            elements[i] = this.lines[i].substring(this._startColumns[i] - 1, this._endColumns[i] - 1);\n        }\n        return elements;\n    }\n    getStrictElement(index) {\n        return this.lines[index];\n    }\n    getStartLineNumber(i) {\n        return i + 1;\n    }\n    getEndLineNumber(i) {\n        return i + 1;\n    }\n    createCharSequence(shouldIgnoreTrimWhitespace, startIndex, endIndex) {\n        const charCodes = [];\n        const lineNumbers = [];\n        const columns = [];\n        let len = 0;\n        for (let index = startIndex; index <= endIndex; index++) {\n            const lineContent = this.lines[index];\n            const startColumn = (shouldIgnoreTrimWhitespace ? this._startColumns[index] : 1);\n            const endColumn = (shouldIgnoreTrimWhitespace ? this._endColumns[index] : lineContent.length + 1);\n            for (let col = startColumn; col < endColumn; col++) {\n                charCodes[len] = lineContent.charCodeAt(col - 1);\n                lineNumbers[len] = index + 1;\n                columns[len] = col;\n                len++;\n            }\n            if (!shouldIgnoreTrimWhitespace && index < endIndex) {\n                charCodes[len] = CharCode.LineFeed;\n                lineNumbers[len] = index + 1;\n                columns[len] = lineContent.length + 1;\n                len++;\n            }\n        }\n        return ( new CharSequence(charCodes, lineNumbers, columns));\n    }\n}\nclass CharSequence {\n    constructor(charCodes, lineNumbers, columns) {\n        this._charCodes = charCodes;\n        this._lineNumbers = lineNumbers;\n        this._columns = columns;\n    }\n    toString() {\n        return ('[' + ( this._charCodes.map(\n            (s, idx) => (s === CharCode.LineFeed ? '\\\\n' : String.fromCharCode(s)) + `-(${this._lineNumbers[idx]},${this._columns[idx]})`\n        )).join(', ') + ']');\n    }\n    _assertIndex(index, arr) {\n        if (index < 0 || index >= arr.length) {\n            throw ( new Error(`Illegal index`));\n        }\n    }\n    getElements() {\n        return this._charCodes;\n    }\n    getStartLineNumber(i) {\n        if (i > 0 && i === this._lineNumbers.length) {\n            return this.getEndLineNumber(i - 1);\n        }\n        this._assertIndex(i, this._lineNumbers);\n        return this._lineNumbers[i];\n    }\n    getEndLineNumber(i) {\n        if (i === -1) {\n            return this.getStartLineNumber(i + 1);\n        }\n        this._assertIndex(i, this._lineNumbers);\n        if (this._charCodes[i] === CharCode.LineFeed) {\n            return this._lineNumbers[i] + 1;\n        }\n        return this._lineNumbers[i];\n    }\n    getStartColumn(i) {\n        if (i > 0 && i === this._columns.length) {\n            return this.getEndColumn(i - 1);\n        }\n        this._assertIndex(i, this._columns);\n        return this._columns[i];\n    }\n    getEndColumn(i) {\n        if (i === -1) {\n            return this.getStartColumn(i + 1);\n        }\n        this._assertIndex(i, this._columns);\n        if (this._charCodes[i] === CharCode.LineFeed) {\n            return 1;\n        }\n        return this._columns[i] + 1;\n    }\n}\nclass CharChange {\n    constructor(originalStartLineNumber, originalStartColumn, originalEndLineNumber, originalEndColumn, modifiedStartLineNumber, modifiedStartColumn, modifiedEndLineNumber, modifiedEndColumn) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalStartColumn = originalStartColumn;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.originalEndColumn = originalEndColumn;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedStartColumn = modifiedStartColumn;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.modifiedEndColumn = modifiedEndColumn;\n    }\n    static createFromDiffChange(diffChange, originalCharSequence, modifiedCharSequence) {\n        const originalStartLineNumber = originalCharSequence.getStartLineNumber(diffChange.originalStart);\n        const originalStartColumn = originalCharSequence.getStartColumn(diffChange.originalStart);\n        const originalEndLineNumber = originalCharSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        const originalEndColumn = originalCharSequence.getEndColumn(diffChange.originalStart + diffChange.originalLength - 1);\n        const modifiedStartLineNumber = modifiedCharSequence.getStartLineNumber(diffChange.modifiedStart);\n        const modifiedStartColumn = modifiedCharSequence.getStartColumn(diffChange.modifiedStart);\n        const modifiedEndLineNumber = modifiedCharSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        const modifiedEndColumn = modifiedCharSequence.getEndColumn(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        return ( new CharChange(\n            originalStartLineNumber,\n            originalStartColumn,\n            originalEndLineNumber,\n            originalEndColumn,\n            modifiedStartLineNumber,\n            modifiedStartColumn,\n            modifiedEndLineNumber,\n            modifiedEndColumn\n        ));\n    }\n}\nfunction postProcessCharChanges(rawChanges) {\n    if (rawChanges.length <= 1) {\n        return rawChanges;\n    }\n    const result = [rawChanges[0]];\n    let prevChange = result[0];\n    for (let i = 1, len = rawChanges.length; i < len; i++) {\n        const currChange = rawChanges[i];\n        const originalMatchingLength = currChange.originalStart - (prevChange.originalStart + prevChange.originalLength);\n        const modifiedMatchingLength = currChange.modifiedStart - (prevChange.modifiedStart + prevChange.modifiedLength);\n        const matchingLength = Math.min(originalMatchingLength, modifiedMatchingLength);\n        if (matchingLength < MINIMUM_MATCHING_CHARACTER_LENGTH) {\n            prevChange.originalLength = (currChange.originalStart + currChange.originalLength) - prevChange.originalStart;\n            prevChange.modifiedLength = (currChange.modifiedStart + currChange.modifiedLength) - prevChange.modifiedStart;\n        }\n        else {\n            result.push(currChange);\n            prevChange = currChange;\n        }\n    }\n    return result;\n}\nclass LineChange {\n    constructor(originalStartLineNumber, originalEndLineNumber, modifiedStartLineNumber, modifiedEndLineNumber, charChanges) {\n        this.originalStartLineNumber = originalStartLineNumber;\n        this.originalEndLineNumber = originalEndLineNumber;\n        this.modifiedStartLineNumber = modifiedStartLineNumber;\n        this.modifiedEndLineNumber = modifiedEndLineNumber;\n        this.charChanges = charChanges;\n    }\n    static createFromDiffResult(shouldIgnoreTrimWhitespace, diffChange, originalLineSequence, modifiedLineSequence, continueCharDiff, shouldComputeCharChanges, shouldPostProcessCharChanges) {\n        let originalStartLineNumber;\n        let originalEndLineNumber;\n        let modifiedStartLineNumber;\n        let modifiedEndLineNumber;\n        let charChanges = undefined;\n        if (diffChange.originalLength === 0) {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart) - 1;\n            originalEndLineNumber = 0;\n        }\n        else {\n            originalStartLineNumber = originalLineSequence.getStartLineNumber(diffChange.originalStart);\n            originalEndLineNumber = originalLineSequence.getEndLineNumber(diffChange.originalStart + diffChange.originalLength - 1);\n        }\n        if (diffChange.modifiedLength === 0) {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart) - 1;\n            modifiedEndLineNumber = 0;\n        }\n        else {\n            modifiedStartLineNumber = modifiedLineSequence.getStartLineNumber(diffChange.modifiedStart);\n            modifiedEndLineNumber = modifiedLineSequence.getEndLineNumber(diffChange.modifiedStart + diffChange.modifiedLength - 1);\n        }\n        if (shouldComputeCharChanges && diffChange.originalLength > 0 && diffChange.originalLength < 20 && diffChange.modifiedLength > 0 && diffChange.modifiedLength < 20 && continueCharDiff()) {\n            const originalCharSequence = originalLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.originalStart, diffChange.originalStart + diffChange.originalLength - 1);\n            const modifiedCharSequence = modifiedLineSequence.createCharSequence(shouldIgnoreTrimWhitespace, diffChange.modifiedStart, diffChange.modifiedStart + diffChange.modifiedLength - 1);\n            if (originalCharSequence.getElements().length > 0 && modifiedCharSequence.getElements().length > 0) {\n                let rawChanges = computeDiff(originalCharSequence, modifiedCharSequence, continueCharDiff, true).changes;\n                if (shouldPostProcessCharChanges) {\n                    rawChanges = postProcessCharChanges(rawChanges);\n                }\n                charChanges = [];\n                for (let i = 0, length = rawChanges.length; i < length; i++) {\n                    charChanges.push(CharChange.createFromDiffChange(rawChanges[i], originalCharSequence, modifiedCharSequence));\n                }\n            }\n        }\n        return ( new LineChange(\n            originalStartLineNumber,\n            originalEndLineNumber,\n            modifiedStartLineNumber,\n            modifiedEndLineNumber,\n            charChanges\n        ));\n    }\n}\nclass DiffComputer {\n    constructor(originalLines, modifiedLines, opts) {\n        this.shouldComputeCharChanges = opts.shouldComputeCharChanges;\n        this.shouldPostProcessCharChanges = opts.shouldPostProcessCharChanges;\n        this.shouldIgnoreTrimWhitespace = opts.shouldIgnoreTrimWhitespace;\n        this.shouldMakePrettyDiff = opts.shouldMakePrettyDiff;\n        this.originalLines = originalLines;\n        this.modifiedLines = modifiedLines;\n        this.original = ( new LineSequence(originalLines));\n        this.modified = ( new LineSequence(modifiedLines));\n        this.continueLineDiff = createContinueProcessingPredicate(opts.maxComputationTime);\n        this.continueCharDiff = createContinueProcessingPredicate(opts.maxComputationTime === 0 ? 0 : Math.min(opts.maxComputationTime, 5000));\n    }\n    computeDiff() {\n        if (this.original.lines.length === 1 && this.original.lines[0].length === 0) {\n            if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n                return {\n                    quitEarly: false,\n                    changes: []\n                };\n            }\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: 1,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: this.modified.lines.length,\n                        charChanges: undefined\n                    }]\n            };\n        }\n        if (this.modified.lines.length === 1 && this.modified.lines[0].length === 0) {\n            return {\n                quitEarly: false,\n                changes: [{\n                        originalStartLineNumber: 1,\n                        originalEndLineNumber: this.original.lines.length,\n                        modifiedStartLineNumber: 1,\n                        modifiedEndLineNumber: 1,\n                        charChanges: undefined\n                    }]\n            };\n        }\n        const diffResult = computeDiff(this.original, this.modified, this.continueLineDiff, this.shouldMakePrettyDiff);\n        const rawChanges = diffResult.changes;\n        const quitEarly = diffResult.quitEarly;\n        if (this.shouldIgnoreTrimWhitespace) {\n            const lineChanges = [];\n            for (let i = 0, length = rawChanges.length; i < length; i++) {\n                lineChanges.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, rawChanges[i], this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n            }\n            return {\n                quitEarly: quitEarly,\n                changes: lineChanges\n            };\n        }\n        const result = [];\n        let originalLineIndex = 0;\n        let modifiedLineIndex = 0;\n        for (let i = -1 , len = rawChanges.length; i < len; i++) {\n            const nextChange = (i + 1 < len ? rawChanges[i + 1] : null);\n            const originalStop = (nextChange ? nextChange.originalStart : this.originalLines.length);\n            const modifiedStop = (nextChange ? nextChange.modifiedStart : this.modifiedLines.length);\n            while (originalLineIndex < originalStop && modifiedLineIndex < modifiedStop) {\n                const originalLine = this.originalLines[originalLineIndex];\n                const modifiedLine = this.modifiedLines[modifiedLineIndex];\n                if (originalLine !== modifiedLine) {\n                    {\n                        let originalStartColumn = getFirstNonBlankColumn(originalLine, 1);\n                        let modifiedStartColumn = getFirstNonBlankColumn(modifiedLine, 1);\n                        while (originalStartColumn > 1 && modifiedStartColumn > 1) {\n                            const originalChar = originalLine.charCodeAt(originalStartColumn - 2);\n                            const modifiedChar = modifiedLine.charCodeAt(modifiedStartColumn - 2);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalStartColumn--;\n                            modifiedStartColumn--;\n                        }\n                        if (originalStartColumn > 1 || modifiedStartColumn > 1) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, 1, originalStartColumn, modifiedLineIndex + 1, 1, modifiedStartColumn);\n                        }\n                    }\n                    {\n                        let originalEndColumn = getLastNonBlankColumn(originalLine, 1);\n                        let modifiedEndColumn = getLastNonBlankColumn(modifiedLine, 1);\n                        const originalMaxColumn = originalLine.length + 1;\n                        const modifiedMaxColumn = modifiedLine.length + 1;\n                        while (originalEndColumn < originalMaxColumn && modifiedEndColumn < modifiedMaxColumn) {\n                            const originalChar = originalLine.charCodeAt(originalEndColumn - 1);\n                            const modifiedChar = originalLine.charCodeAt(modifiedEndColumn - 1);\n                            if (originalChar !== modifiedChar) {\n                                break;\n                            }\n                            originalEndColumn++;\n                            modifiedEndColumn++;\n                        }\n                        if (originalEndColumn < originalMaxColumn || modifiedEndColumn < modifiedMaxColumn) {\n                            this._pushTrimWhitespaceCharChange(result, originalLineIndex + 1, originalEndColumn, originalMaxColumn, modifiedLineIndex + 1, modifiedEndColumn, modifiedMaxColumn);\n                        }\n                    }\n                }\n                originalLineIndex++;\n                modifiedLineIndex++;\n            }\n            if (nextChange) {\n                result.push(LineChange.createFromDiffResult(this.shouldIgnoreTrimWhitespace, nextChange, this.original, this.modified, this.continueCharDiff, this.shouldComputeCharChanges, this.shouldPostProcessCharChanges));\n                originalLineIndex += nextChange.originalLength;\n                modifiedLineIndex += nextChange.modifiedLength;\n            }\n        }\n        return {\n            quitEarly: quitEarly,\n            changes: result\n        };\n    }\n    _pushTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        if (this._mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn)) {\n            return;\n        }\n        let charChanges = undefined;\n        if (this.shouldComputeCharChanges) {\n            charChanges = [( new CharChange(\n                originalLineNumber,\n                originalStartColumn,\n                originalLineNumber,\n                originalEndColumn,\n                modifiedLineNumber,\n                modifiedStartColumn,\n                modifiedLineNumber,\n                modifiedEndColumn\n            ))];\n        }\n        result.push(( new LineChange(\n            originalLineNumber,\n            originalLineNumber,\n            modifiedLineNumber,\n            modifiedLineNumber,\n            charChanges\n        )));\n    }\n    _mergeTrimWhitespaceCharChange(result, originalLineNumber, originalStartColumn, originalEndColumn, modifiedLineNumber, modifiedStartColumn, modifiedEndColumn) {\n        const len = result.length;\n        if (len === 0) {\n            return false;\n        }\n        const prevChange = result[len - 1];\n        if (prevChange.originalEndLineNumber === 0 || prevChange.modifiedEndLineNumber === 0) {\n            return false;\n        }\n        if (prevChange.originalEndLineNumber === originalLineNumber && prevChange.modifiedEndLineNumber === modifiedLineNumber) {\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(( new CharChange(\n                    originalLineNumber,\n                    originalStartColumn,\n                    originalLineNumber,\n                    originalEndColumn,\n                    modifiedLineNumber,\n                    modifiedStartColumn,\n                    modifiedLineNumber,\n                    modifiedEndColumn\n                )));\n            }\n            return true;\n        }\n        if (prevChange.originalEndLineNumber + 1 === originalLineNumber && prevChange.modifiedEndLineNumber + 1 === modifiedLineNumber) {\n            prevChange.originalEndLineNumber = originalLineNumber;\n            prevChange.modifiedEndLineNumber = modifiedLineNumber;\n            if (this.shouldComputeCharChanges && prevChange.charChanges) {\n                prevChange.charChanges.push(( new CharChange(\n                    originalLineNumber,\n                    originalStartColumn,\n                    originalLineNumber,\n                    originalEndColumn,\n                    modifiedLineNumber,\n                    modifiedStartColumn,\n                    modifiedLineNumber,\n                    modifiedEndColumn\n                )));\n            }\n            return true;\n        }\n        return false;\n    }\n}\nfunction getFirstNonBlankColumn(txt, defaultValue) {\n    const r = firstNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 1;\n}\nfunction getLastNonBlankColumn(txt, defaultValue) {\n    const r = lastNonWhitespaceIndex(txt);\n    if (r === -1) {\n        return defaultValue;\n    }\n    return r + 2;\n}\nfunction createContinueProcessingPredicate(maximumRuntime) {\n    if (maximumRuntime === 0) {\n        return () => true;\n    }\n    const startTime = Date.now();\n    return () => {\n        return Date.now() - startTime < maximumRuntime;\n    };\n}\nexport { DiffComputer, LegacyLinesDiffComputer };\n","import { findLastIdxMonotonous, findLastMonotonous, findFirstMonotonous } from '../../../../base/common/arraysFind.js';\nimport { CharCode } from '../../../../base/common/charCode.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { Position } from '../../core/position.js';\nimport { Range } from '../../core/range.js';\nimport { isSpace } from './utils.js';\nclass LinesSliceCharSequence {\n    constructor(lines, lineRange, considerWhitespaceChanges) {\n        this.lines = lines;\n        this.considerWhitespaceChanges = considerWhitespaceChanges;\n        this.elements = [];\n        this.firstCharOffsetByLine = [];\n        this.additionalOffsetByLine = [];\n        let trimFirstLineFully = false;\n        if (lineRange.start > 0 && lineRange.endExclusive >= lines.length) {\n            lineRange = ( new OffsetRange(lineRange.start - 1, lineRange.endExclusive));\n            trimFirstLineFully = true;\n        }\n        this.lineRange = lineRange;\n        this.firstCharOffsetByLine[0] = 0;\n        for (let i = this.lineRange.start; i < this.lineRange.endExclusive; i++) {\n            let line = lines[i];\n            let offset = 0;\n            if (trimFirstLineFully) {\n                offset = line.length;\n                line = '';\n                trimFirstLineFully = false;\n            }\n            else if (!considerWhitespaceChanges) {\n                const trimmedStartLine = line.trimStart();\n                offset = line.length - trimmedStartLine.length;\n                line = trimmedStartLine.trimEnd();\n            }\n            this.additionalOffsetByLine.push(offset);\n            for (let i = 0; i < line.length; i++) {\n                this.elements.push(line.charCodeAt(i));\n            }\n            if (i < lines.length - 1) {\n                this.elements.push('\\n'.charCodeAt(0));\n                this.firstCharOffsetByLine[i - this.lineRange.start + 1] = this.elements.length;\n            }\n        }\n        this.additionalOffsetByLine.push(0);\n    }\n    toString() {\n        return `Slice: \"${this.text}\"`;\n    }\n    get text() {\n        return this.getText(( new OffsetRange(0, this.length)));\n    }\n    getText(range) {\n        return ( this.elements.slice(range.start, range.endExclusive).map(e => String.fromCharCode(e))).join('');\n    }\n    getElement(offset) {\n        return this.elements[offset];\n    }\n    get length() {\n        return this.elements.length;\n    }\n    getBoundaryScore(length) {\n        const prevCategory = getCategory(length > 0 ? this.elements[length - 1] : -1);\n        const nextCategory = getCategory(length < this.elements.length ? this.elements[length] : -1);\n        if (prevCategory === CharBoundaryCategory.LineBreakCR && nextCategory === CharBoundaryCategory.LineBreakLF) {\n            return 0;\n        }\n        if (prevCategory === CharBoundaryCategory.LineBreakLF) {\n            return 150;\n        }\n        let score = 0;\n        if (prevCategory !== nextCategory) {\n            score += 10;\n            if (prevCategory === CharBoundaryCategory.WordLower && nextCategory === CharBoundaryCategory.WordUpper) {\n                score += 1;\n            }\n        }\n        score += getCategoryBoundaryScore(prevCategory);\n        score += getCategoryBoundaryScore(nextCategory);\n        return score;\n    }\n    translateOffset(offset) {\n        if (this.lineRange.isEmpty) {\n            return ( new Position(this.lineRange.start + 1, 1));\n        }\n        const i = findLastIdxMonotonous(this.firstCharOffsetByLine, (value) => value <= offset);\n        return ( new Position(\n            this.lineRange.start + i + 1,\n            offset - this.firstCharOffsetByLine[i] + this.additionalOffsetByLine[i] + 1\n        ));\n    }\n    translateRange(range) {\n        return Range.fromPositions(this.translateOffset(range.start), this.translateOffset(range.endExclusive));\n    }\n    findWordContaining(offset) {\n        if (offset < 0 || offset >= this.elements.length) {\n            return undefined;\n        }\n        if (!isWordChar(this.elements[offset])) {\n            return undefined;\n        }\n        let start = offset;\n        while (start > 0 && isWordChar(this.elements[start - 1])) {\n            start--;\n        }\n        let end = offset;\n        while (end < this.elements.length && isWordChar(this.elements[end])) {\n            end++;\n        }\n        return ( new OffsetRange(start, end));\n    }\n    countLinesIn(range) {\n        return this.translateOffset(range.endExclusive).lineNumber - this.translateOffset(range.start).lineNumber;\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.elements[offset1] === this.elements[offset2];\n    }\n    extendToFullLines(range) {\n        const start = findLastMonotonous(this.firstCharOffsetByLine, x => x <= range.start) ?? 0;\n        const end = findFirstMonotonous(this.firstCharOffsetByLine, x => range.endExclusive <= x) ?? this.elements.length;\n        return ( new OffsetRange(start, end));\n    }\n}\nfunction isWordChar(charCode) {\n    return charCode >= CharCode.a && charCode <= CharCode.z\n        || charCode >= CharCode.A && charCode <= CharCode.Z\n        || charCode >= CharCode.Digit0 && charCode <= CharCode.Digit9;\n}\nvar CharBoundaryCategory;\n( (function(CharBoundaryCategory) {\n    CharBoundaryCategory[CharBoundaryCategory[\"WordLower\"] = 0] = \"WordLower\";\n    CharBoundaryCategory[CharBoundaryCategory[\"WordUpper\"] = 1] = \"WordUpper\";\n    CharBoundaryCategory[CharBoundaryCategory[\"WordNumber\"] = 2] = \"WordNumber\";\n    CharBoundaryCategory[CharBoundaryCategory[\"End\"] = 3] = \"End\";\n    CharBoundaryCategory[CharBoundaryCategory[\"Other\"] = 4] = \"Other\";\n    CharBoundaryCategory[CharBoundaryCategory[\"Separator\"] = 5] = \"Separator\";\n    CharBoundaryCategory[CharBoundaryCategory[\"Space\"] = 6] = \"Space\";\n    CharBoundaryCategory[CharBoundaryCategory[\"LineBreakCR\"] = 7] = \"LineBreakCR\";\n    CharBoundaryCategory[CharBoundaryCategory[\"LineBreakLF\"] = 8] = \"LineBreakLF\";\n})(CharBoundaryCategory || (CharBoundaryCategory = {})));\nconst score = {\n    [CharBoundaryCategory.WordLower]: 0,\n    [CharBoundaryCategory.WordUpper]: 0,\n    [CharBoundaryCategory.WordNumber]: 0,\n    [CharBoundaryCategory.End]: 10,\n    [CharBoundaryCategory.Other]: 2,\n    [CharBoundaryCategory.Separator]: 30,\n    [CharBoundaryCategory.Space]: 3,\n    [CharBoundaryCategory.LineBreakCR]: 10,\n    [CharBoundaryCategory.LineBreakLF]: 10,\n};\nfunction getCategoryBoundaryScore(category) {\n    return score[category];\n}\nfunction getCategory(charCode) {\n    if (charCode === CharCode.LineFeed) {\n        return CharBoundaryCategory.LineBreakLF;\n    }\n    else if (charCode === CharCode.CarriageReturn) {\n        return CharBoundaryCategory.LineBreakCR;\n    }\n    else if (isSpace(charCode)) {\n        return CharBoundaryCategory.Space;\n    }\n    else if (charCode >= CharCode.a && charCode <= CharCode.z) {\n        return CharBoundaryCategory.WordLower;\n    }\n    else if (charCode >= CharCode.A && charCode <= CharCode.Z) {\n        return CharBoundaryCategory.WordUpper;\n    }\n    else if (charCode >= CharCode.Digit0 && charCode <= CharCode.Digit9) {\n        return CharBoundaryCategory.WordNumber;\n    }\n    else if (charCode === -1) {\n        return CharBoundaryCategory.End;\n    }\n    else if (charCode === CharCode.Comma || charCode === CharCode.Semicolon) {\n        return CharBoundaryCategory.Separator;\n    }\n    else {\n        return CharBoundaryCategory.Other;\n    }\n}\nexport { LinesSliceCharSequence };\n","import { forEachAdjacent } from '../../../../../base/common/arrays.js';\nimport { BugIndicatingError } from '../../../../../base/common/errors.js';\nimport { OffsetRange } from '../../../core/offsetRange.js';\nclass DiffAlgorithmResult {\n    static trivial(seq1, seq2) {\n        return ( new DiffAlgorithmResult([( new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length)))], false));\n    }\n    static trivialTimedOut(seq1, seq2) {\n        return ( new DiffAlgorithmResult([( new SequenceDiff(OffsetRange.ofLength(seq1.length), OffsetRange.ofLength(seq2.length)))], true));\n    }\n    constructor(diffs,\n    hitTimeout) {\n        this.diffs = diffs;\n        this.hitTimeout = hitTimeout;\n    }\n}\nclass SequenceDiff {\n    static invert(sequenceDiffs, doc1Length) {\n        const result = [];\n        forEachAdjacent(sequenceDiffs, (a, b) => {\n            result.push(SequenceDiff.fromOffsetPairs(a ? a.getEndExclusives() : OffsetPair.zero, b ? b.getStarts() : ( new OffsetPair(\n                doc1Length,\n                (a ? a.seq2Range.endExclusive - a.seq1Range.endExclusive : 0) + doc1Length\n            ))));\n        });\n        return result;\n    }\n    static fromOffsetPairs(start, endExclusive) {\n        return ( new SequenceDiff(( new OffsetRange(start.offset1, endExclusive.offset1)), ( new OffsetRange(start.offset2, endExclusive.offset2))));\n    }\n    constructor(seq1Range, seq2Range) {\n        this.seq1Range = seq1Range;\n        this.seq2Range = seq2Range;\n    }\n    swap() {\n        return ( new SequenceDiff(this.seq2Range, this.seq1Range));\n    }\n    toString() {\n        return `${this.seq1Range} <-> ${this.seq2Range}`;\n    }\n    join(other) {\n        return ( new SequenceDiff(this.seq1Range.join(other.seq1Range), this.seq2Range.join(other.seq2Range)));\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return ( new SequenceDiff(this.seq1Range.delta(offset), this.seq2Range.delta(offset)));\n    }\n    deltaStart(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return ( new SequenceDiff(this.seq1Range.deltaStart(offset), this.seq2Range.deltaStart(offset)));\n    }\n    deltaEnd(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return ( new SequenceDiff(this.seq1Range.deltaEnd(offset), this.seq2Range.deltaEnd(offset)));\n    }\n    intersectsOrTouches(other) {\n        return this.seq1Range.intersectsOrTouches(other.seq1Range) || this.seq2Range.intersectsOrTouches(other.seq2Range);\n    }\n    intersect(other) {\n        const i1 = this.seq1Range.intersect(other.seq1Range);\n        const i2 = this.seq2Range.intersect(other.seq2Range);\n        if (!i1 || !i2) {\n            return undefined;\n        }\n        return ( new SequenceDiff(i1, i2));\n    }\n    getStarts() {\n        return ( new OffsetPair(this.seq1Range.start, this.seq2Range.start));\n    }\n    getEndExclusives() {\n        return ( new OffsetPair(this.seq1Range.endExclusive, this.seq2Range.endExclusive));\n    }\n}\nclass OffsetPair {\n    static { this.zero = ( new OffsetPair(0, 0)); }\n    static { this.max = ( new OffsetPair(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER)); }\n    constructor(offset1, offset2) {\n        this.offset1 = offset1;\n        this.offset2 = offset2;\n    }\n    toString() {\n        return `${this.offset1} <-> ${this.offset2}`;\n    }\n    delta(offset) {\n        if (offset === 0) {\n            return this;\n        }\n        return ( new OffsetPair(this.offset1 + offset, this.offset2 + offset));\n    }\n    equals(other) {\n        return this.offset1 === other.offset1 && this.offset2 === other.offset2;\n    }\n}\nclass InfiniteTimeout {\n    static { this.instance = ( new InfiniteTimeout()); }\n    isValid() {\n        return true;\n    }\n}\nclass DateTimeout {\n    constructor(timeout) {\n        this.timeout = timeout;\n        this.startTime = Date.now();\n        this.valid = true;\n        if (timeout <= 0) {\n            throw ( new BugIndicatingError('timeout must be positive'));\n        }\n    }\n    isValid() {\n        const valid = Date.now() - this.startTime < this.timeout;\n        if (!valid && this.valid) {\n            this.valid = false;\n            debugger;\n        }\n        return this.valid;\n    }\n    disable() {\n        this.timeout = Number.MAX_SAFE_INTEGER;\n        this.isValid = () => true;\n        this.valid = true;\n    }\n}\nexport { DateTimeout, DiffAlgorithmResult, InfiniteTimeout, OffsetPair, SequenceDiff };\n","import { CharCode } from '../../../../base/common/charCode.js';\nclass Array2D {\n    constructor(width, height) {\n        this.width = width;\n        this.height = height;\n        this.array = [];\n        this.array = ( new Array(width * height));\n    }\n    get(x, y) {\n        return this.array[x + y * this.width];\n    }\n    set(x, y, value) {\n        this.array[x + y * this.width] = value;\n    }\n}\nfunction isSpace(charCode) {\n    return charCode === CharCode.Space || charCode === CharCode.Tab;\n}\nclass LineRangeFragment {\n    static { this.chrKeys = ( new Map()); }\n    static getKey(chr) {\n        let key = this.chrKeys.get(chr);\n        if (key === undefined) {\n            key = this.chrKeys.size;\n            this.chrKeys.set(chr, key);\n        }\n        return key;\n    }\n    constructor(range, lines, source) {\n        this.range = range;\n        this.lines = lines;\n        this.source = source;\n        this.histogram = [];\n        let counter = 0;\n        for (let i = range.startLineNumber - 1; i < range.endLineNumberExclusive - 1; i++) {\n            const line = lines[i];\n            for (let j = 0; j < line.length; j++) {\n                counter++;\n                const chr = line[j];\n                const key = LineRangeFragment.getKey(chr);\n                this.histogram[key] = (this.histogram[key] || 0) + 1;\n            }\n            counter++;\n            const key = LineRangeFragment.getKey('\\n');\n            this.histogram[key] = (this.histogram[key] || 0) + 1;\n        }\n        this.totalCount = counter;\n    }\n    computeSimilarity(other) {\n        let sumDifferences = 0;\n        const maxLength = Math.max(this.histogram.length, other.histogram.length);\n        for (let i = 0; i < maxLength; i++) {\n            sumDifferences += Math.abs((this.histogram[i] ?? 0) - (other.histogram[i] ?? 0));\n        }\n        return 1 - (sumDifferences / (this.totalCount + other.totalCount));\n    }\n}\nexport { Array2D, LineRangeFragment, isSpace };\n","import { OffsetRange } from '../../../core/offsetRange.js';\nimport { DiffAlgorithmResult, InfiniteTimeout, SequenceDiff } from './diffAlgorithm.js';\nimport { Array2D } from '../utils.js';\nclass DynamicProgrammingDiffing {\n    compute(sequence1, sequence2, timeout = InfiniteTimeout.instance, equalityScore) {\n        if (sequence1.length === 0 || sequence2.length === 0) {\n            return DiffAlgorithmResult.trivial(sequence1, sequence2);\n        }\n        const lcsLengths = ( new Array2D(sequence1.length, sequence2.length));\n        const directions = ( new Array2D(sequence1.length, sequence2.length));\n        const lengths = ( new Array2D(sequence1.length, sequence2.length));\n        for (let s1 = 0; s1 < sequence1.length; s1++) {\n            for (let s2 = 0; s2 < sequence2.length; s2++) {\n                if (!timeout.isValid()) {\n                    return DiffAlgorithmResult.trivialTimedOut(sequence1, sequence2);\n                }\n                const horizontalLen = s1 === 0 ? 0 : lcsLengths.get(s1 - 1, s2);\n                const verticalLen = s2 === 0 ? 0 : lcsLengths.get(s1, s2 - 1);\n                let extendedSeqScore;\n                if (sequence1.getElement(s1) === sequence2.getElement(s2)) {\n                    if (s1 === 0 || s2 === 0) {\n                        extendedSeqScore = 0;\n                    }\n                    else {\n                        extendedSeqScore = lcsLengths.get(s1 - 1, s2 - 1);\n                    }\n                    if (s1 > 0 && s2 > 0 && directions.get(s1 - 1, s2 - 1) === 3) {\n                        extendedSeqScore += lengths.get(s1 - 1, s2 - 1);\n                    }\n                    extendedSeqScore += (equalityScore ? equalityScore(s1, s2) : 1);\n                }\n                else {\n                    extendedSeqScore = -1;\n                }\n                const newValue = Math.max(horizontalLen, verticalLen, extendedSeqScore);\n                if (newValue === extendedSeqScore) {\n                    const prevLen = s1 > 0 && s2 > 0 ? lengths.get(s1 - 1, s2 - 1) : 0;\n                    lengths.set(s1, s2, prevLen + 1);\n                    directions.set(s1, s2, 3);\n                }\n                else if (newValue === horizontalLen) {\n                    lengths.set(s1, s2, 0);\n                    directions.set(s1, s2, 1);\n                }\n                else if (newValue === verticalLen) {\n                    lengths.set(s1, s2, 0);\n                    directions.set(s1, s2, 2);\n                }\n                lcsLengths.set(s1, s2, newValue);\n            }\n        }\n        const result = [];\n        let lastAligningPosS1 = sequence1.length;\n        let lastAligningPosS2 = sequence2.length;\n        function reportDecreasingAligningPositions(s1, s2) {\n            if (s1 + 1 !== lastAligningPosS1 || s2 + 1 !== lastAligningPosS2) {\n                result.push(( new SequenceDiff(( new OffsetRange(s1 + 1, lastAligningPosS1)), ( new OffsetRange(s2 + 1, lastAligningPosS2)))));\n            }\n            lastAligningPosS1 = s1;\n            lastAligningPosS2 = s2;\n        }\n        let s1 = sequence1.length - 1;\n        let s2 = sequence2.length - 1;\n        while (s1 >= 0 && s2 >= 0) {\n            if (directions.get(s1, s2) === 3) {\n                reportDecreasingAligningPositions(s1, s2);\n                s1--;\n                s2--;\n            }\n            else {\n                if (directions.get(s1, s2) === 1) {\n                    s1--;\n                }\n                else {\n                    s2--;\n                }\n            }\n        }\n        reportDecreasingAligningPositions(-1, -1);\n        result.reverse();\n        return ( new DiffAlgorithmResult(result, false));\n    }\n}\nexport { DynamicProgrammingDiffing };\n","import { OffsetRange } from '../../../core/offsetRange.js';\nimport { DiffAlgorithmResult, InfiniteTimeout, SequenceDiff } from './diffAlgorithm.js';\nclass MyersDiffAlgorithm {\n    compute(seq1, seq2, timeout = InfiniteTimeout.instance) {\n        if (seq1.length === 0 || seq2.length === 0) {\n            return DiffAlgorithmResult.trivial(seq1, seq2);\n        }\n        const seqX = seq1;\n        const seqY = seq2;\n        function getXAfterSnake(x, y) {\n            while (x < seqX.length && y < seqY.length && seqX.getElement(x) === seqY.getElement(y)) {\n                x++;\n                y++;\n            }\n            return x;\n        }\n        let d = 0;\n        const V = ( new FastInt32Array());\n        V.set(0, getXAfterSnake(0, 0));\n        const paths = ( new FastArrayNegativeIndices());\n        paths.set(0, V.get(0) === 0 ? null : ( new SnakePath(null, 0, 0, V.get(0))));\n        let k = 0;\n        loop: while (true) {\n            d++;\n            if (!timeout.isValid()) {\n                return DiffAlgorithmResult.trivialTimedOut(seqX, seqY);\n            }\n            const lowerBound = -Math.min(d, seqY.length + (d % 2));\n            const upperBound = Math.min(d, seqX.length + (d % 2));\n            for (k = lowerBound; k <= upperBound; k += 2) {\n                const maxXofDLineTop = k === upperBound ? -1 : V.get(k + 1);\n                const maxXofDLineLeft = k === lowerBound ? -1 : V.get(k - 1) + 1;\n                const x = Math.min(Math.max(maxXofDLineTop, maxXofDLineLeft), seqX.length);\n                const y = x - k;\n                if (x > seqX.length || y > seqY.length) {\n                    continue;\n                }\n                const newMaxX = getXAfterSnake(x, y);\n                V.set(k, newMaxX);\n                const lastPath = x === maxXofDLineTop ? paths.get(k + 1) : paths.get(k - 1);\n                paths.set(k, newMaxX !== x ? ( new SnakePath(lastPath, x, y, newMaxX - x)) : lastPath);\n                if (V.get(k) === seqX.length && V.get(k) - k === seqY.length) {\n                    break loop;\n                }\n            }\n        }\n        let path = paths.get(k);\n        const result = [];\n        let lastAligningPosS1 = seqX.length;\n        let lastAligningPosS2 = seqY.length;\n        while (true) {\n            const endX = path ? path.x + path.length : 0;\n            const endY = path ? path.y + path.length : 0;\n            if (endX !== lastAligningPosS1 || endY !== lastAligningPosS2) {\n                result.push(( new SequenceDiff(( new OffsetRange(endX, lastAligningPosS1)), ( new OffsetRange(endY, lastAligningPosS2)))));\n            }\n            if (!path) {\n                break;\n            }\n            lastAligningPosS1 = path.x;\n            lastAligningPosS2 = path.y;\n            path = path.prev;\n        }\n        result.reverse();\n        return ( new DiffAlgorithmResult(result, false));\n    }\n}\nclass SnakePath {\n    constructor(prev, x, y, length) {\n        this.prev = prev;\n        this.x = x;\n        this.y = y;\n        this.length = length;\n    }\n}\nclass FastInt32Array {\n    constructor() {\n        this.positiveArr = ( new Int32Array(10));\n        this.negativeArr = ( new Int32Array(10));\n    }\n    get(idx) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            return this.negativeArr[idx];\n        }\n        else {\n            return this.positiveArr[idx];\n        }\n    }\n    set(idx, value) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            if (idx >= this.negativeArr.length) {\n                const arr = this.negativeArr;\n                this.negativeArr = ( new Int32Array(arr.length * 2));\n                this.negativeArr.set(arr);\n            }\n            this.negativeArr[idx] = value;\n        }\n        else {\n            if (idx >= this.positiveArr.length) {\n                const arr = this.positiveArr;\n                this.positiveArr = ( new Int32Array(arr.length * 2));\n                this.positiveArr.set(arr);\n            }\n            this.positiveArr[idx] = value;\n        }\n    }\n}\nclass FastArrayNegativeIndices {\n    constructor() {\n        this.positiveArr = [];\n        this.negativeArr = [];\n    }\n    get(idx) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            return this.negativeArr[idx];\n        }\n        else {\n            return this.positiveArr[idx];\n        }\n    }\n    set(idx, value) {\n        if (idx < 0) {\n            idx = -idx - 1;\n            this.negativeArr[idx] = value;\n        }\n        else {\n            this.positiveArr[idx] = value;\n        }\n    }\n}\nexport { MyersDiffAlgorithm };\n","import { SequenceDiff } from './algorithms/diffAlgorithm.js';\nimport { LineRangeMapping } from '../rangeMapping.js';\nimport { pushMany, compareBy, numberComparator, reverseOrder } from '../../../../base/common/arrays.js';\nimport { findLastMonotonous, MonotonousArray } from '../../../../base/common/arraysFind.js';\nimport { SetMap } from '../../../../base/common/map.js';\nimport { LineRange, LineRangeSet } from '../../core/lineRange.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { LinesSliceCharSequence } from './linesSliceCharSequence.js';\nimport { isSpace, LineRangeFragment } from './utils.js';\nimport { MyersDiffAlgorithm } from './algorithms/myersDiffAlgorithm.js';\nfunction computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout) {\n    let { moves, excludedChanges } = computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout);\n    if (!timeout.isValid()) {\n        return [];\n    }\n    const filteredChanges = changes.filter(c => !( excludedChanges.has(c)));\n    const unchangedMoves = computeUnchangedMoves(filteredChanges, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout);\n    pushMany(moves, unchangedMoves);\n    moves = joinCloseConsecutiveMoves(moves);\n    moves = moves.filter(current => {\n        const lines = ( current.original.toOffsetRange().slice(originalLines).map(l => l.trim()));\n        const originalText = lines.join('\\n');\n        return originalText.length >= 15 && countWhere(lines, l => l.length >= 2) >= 2;\n    });\n    moves = removeMovesInSameDiff(changes, moves);\n    return moves;\n}\nfunction countWhere(arr, predicate) {\n    let count = 0;\n    for (const t of arr) {\n        if (predicate(t)) {\n            count++;\n        }\n    }\n    return count;\n}\nfunction computeMovesFromSimpleDeletionsToSimpleInsertions(changes, originalLines, modifiedLines, timeout) {\n    const moves = [];\n    const deletions = ( changes\n        .filter(c => c.modified.isEmpty && c.original.length >= 3)\n        .map(d => ( new LineRangeFragment(d.original, originalLines, d))));\n    const insertions = ( new Set(( changes\n        .filter(c => c.original.isEmpty && c.modified.length >= 3)\n        .map(d => ( new LineRangeFragment(d.modified, modifiedLines, d))))));\n    const excludedChanges = ( new Set());\n    for (const deletion of deletions) {\n        let highestSimilarity = -1;\n        let best;\n        for (const insertion of insertions) {\n            const similarity = deletion.computeSimilarity(insertion);\n            if (similarity > highestSimilarity) {\n                highestSimilarity = similarity;\n                best = insertion;\n            }\n        }\n        if (highestSimilarity > 0.90 && best) {\n            insertions.delete(best);\n            moves.push(( new LineRangeMapping(deletion.range, best.range)));\n            excludedChanges.add(deletion.source);\n            excludedChanges.add(best.source);\n        }\n        if (!timeout.isValid()) {\n            return { moves, excludedChanges };\n        }\n    }\n    return { moves, excludedChanges };\n}\nfunction computeUnchangedMoves(changes, hashedOriginalLines, hashedModifiedLines, originalLines, modifiedLines, timeout) {\n    const moves = [];\n    const original3LineHashes = ( new SetMap());\n    for (const change of changes) {\n        for (let i = change.original.startLineNumber; i < change.original.endLineNumberExclusive - 2; i++) {\n            const key = `${hashedOriginalLines[i - 1]}:${hashedOriginalLines[i + 1 - 1]}:${hashedOriginalLines[i + 2 - 1]}`;\n            original3LineHashes.add(key, { range: ( new LineRange(i, i + 3)) });\n        }\n    }\n    const possibleMappings = [];\n    changes.sort(compareBy(c => c.modified.startLineNumber, numberComparator));\n    for (const change of changes) {\n        let lastMappings = [];\n        for (let i = change.modified.startLineNumber; i < change.modified.endLineNumberExclusive - 2; i++) {\n            const key = `${hashedModifiedLines[i - 1]}:${hashedModifiedLines[i + 1 - 1]}:${hashedModifiedLines[i + 2 - 1]}`;\n            const currentModifiedRange = ( new LineRange(i, i + 3));\n            const nextMappings = [];\n            original3LineHashes.forEach(key, ({ range }) => {\n                for (const lastMapping of lastMappings) {\n                    if (lastMapping.originalLineRange.endLineNumberExclusive + 1 === range.endLineNumberExclusive &&\n                        lastMapping.modifiedLineRange.endLineNumberExclusive + 1 === currentModifiedRange.endLineNumberExclusive) {\n                        lastMapping.originalLineRange = ( new LineRange(\n                            lastMapping.originalLineRange.startLineNumber,\n                            range.endLineNumberExclusive\n                        ));\n                        lastMapping.modifiedLineRange = ( new LineRange(\n                            lastMapping.modifiedLineRange.startLineNumber,\n                            currentModifiedRange.endLineNumberExclusive\n                        ));\n                        nextMappings.push(lastMapping);\n                        return;\n                    }\n                }\n                const mapping = {\n                    modifiedLineRange: currentModifiedRange,\n                    originalLineRange: range,\n                };\n                possibleMappings.push(mapping);\n                nextMappings.push(mapping);\n            });\n            lastMappings = nextMappings;\n        }\n        if (!timeout.isValid()) {\n            return [];\n        }\n    }\n    possibleMappings.sort(reverseOrder(compareBy(m => m.modifiedLineRange.length, numberComparator)));\n    const modifiedSet = ( new LineRangeSet());\n    const originalSet = ( new LineRangeSet());\n    for (const mapping of possibleMappings) {\n        const diffOrigToMod = mapping.modifiedLineRange.startLineNumber - mapping.originalLineRange.startLineNumber;\n        const modifiedSections = modifiedSet.subtractFrom(mapping.modifiedLineRange);\n        const originalTranslatedSections = originalSet.subtractFrom(mapping.originalLineRange).getWithDelta(diffOrigToMod);\n        const modifiedIntersectedSections = modifiedSections.getIntersection(originalTranslatedSections);\n        for (const s of modifiedIntersectedSections.ranges) {\n            if (s.length < 3) {\n                continue;\n            }\n            const modifiedLineRange = s;\n            const originalLineRange = s.delta(-diffOrigToMod);\n            moves.push(( new LineRangeMapping(originalLineRange, modifiedLineRange)));\n            modifiedSet.addRange(modifiedLineRange);\n            originalSet.addRange(originalLineRange);\n        }\n    }\n    moves.sort(compareBy(m => m.original.startLineNumber, numberComparator));\n    const monotonousChanges = ( new MonotonousArray(changes));\n    for (let i = 0; i < moves.length; i++) {\n        const move = moves[i];\n        const firstTouchingChangeOrig = monotonousChanges.findLastMonotonous(c => c.original.startLineNumber <= move.original.startLineNumber);\n        const firstTouchingChangeMod = findLastMonotonous(changes, c => c.modified.startLineNumber <= move.modified.startLineNumber);\n        const linesAbove = Math.max(move.original.startLineNumber - firstTouchingChangeOrig.original.startLineNumber, move.modified.startLineNumber - firstTouchingChangeMod.modified.startLineNumber);\n        const lastTouchingChangeOrig = monotonousChanges.findLastMonotonous(c => c.original.startLineNumber < move.original.endLineNumberExclusive);\n        const lastTouchingChangeMod = findLastMonotonous(changes, c => c.modified.startLineNumber < move.modified.endLineNumberExclusive);\n        const linesBelow = Math.max(lastTouchingChangeOrig.original.endLineNumberExclusive - move.original.endLineNumberExclusive, lastTouchingChangeMod.modified.endLineNumberExclusive - move.modified.endLineNumberExclusive);\n        let extendToTop;\n        for (extendToTop = 0; extendToTop < linesAbove; extendToTop++) {\n            const origLine = move.original.startLineNumber - extendToTop - 1;\n            const modLine = move.modified.startLineNumber - extendToTop - 1;\n            if (origLine > originalLines.length || modLine > modifiedLines.length) {\n                break;\n            }\n            if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n                break;\n            }\n            if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n                break;\n            }\n        }\n        if (extendToTop > 0) {\n            originalSet.addRange(( new LineRange(move.original.startLineNumber - extendToTop, move.original.startLineNumber)));\n            modifiedSet.addRange(( new LineRange(move.modified.startLineNumber - extendToTop, move.modified.startLineNumber)));\n        }\n        let extendToBottom;\n        for (extendToBottom = 0; extendToBottom < linesBelow; extendToBottom++) {\n            const origLine = move.original.endLineNumberExclusive + extendToBottom;\n            const modLine = move.modified.endLineNumberExclusive + extendToBottom;\n            if (origLine > originalLines.length || modLine > modifiedLines.length) {\n                break;\n            }\n            if (modifiedSet.contains(modLine) || originalSet.contains(origLine)) {\n                break;\n            }\n            if (!areLinesSimilar(originalLines[origLine - 1], modifiedLines[modLine - 1], timeout)) {\n                break;\n            }\n        }\n        if (extendToBottom > 0) {\n            originalSet.addRange(( new LineRange(\n                move.original.endLineNumberExclusive,\n                move.original.endLineNumberExclusive + extendToBottom\n            )));\n            modifiedSet.addRange(( new LineRange(\n                move.modified.endLineNumberExclusive,\n                move.modified.endLineNumberExclusive + extendToBottom\n            )));\n        }\n        if (extendToTop > 0 || extendToBottom > 0) {\n            moves[i] = ( new LineRangeMapping(( new LineRange(\n                move.original.startLineNumber - extendToTop,\n                move.original.endLineNumberExclusive + extendToBottom\n            )), ( new LineRange(\n                move.modified.startLineNumber - extendToTop,\n                move.modified.endLineNumberExclusive + extendToBottom\n            ))));\n        }\n    }\n    return moves;\n}\nfunction areLinesSimilar(line1, line2, timeout) {\n    if (line1.trim() === line2.trim()) {\n        return true;\n    }\n    if (line1.length > 300 && line2.length > 300) {\n        return false;\n    }\n    const myersDiffingAlgorithm = ( new MyersDiffAlgorithm());\n    const result = myersDiffingAlgorithm.compute(( new LinesSliceCharSequence([line1], ( new OffsetRange(0, 1)), false)), ( new LinesSliceCharSequence([line2], ( new OffsetRange(0, 1)), false)), timeout);\n    let commonNonSpaceCharCount = 0;\n    const inverted = SequenceDiff.invert(result.diffs, line1.length);\n    for (const seq of inverted) {\n        seq.seq1Range.forEach(idx => {\n            if (!isSpace(line1.charCodeAt(idx))) {\n                commonNonSpaceCharCount++;\n            }\n        });\n    }\n    function countNonWsChars(str) {\n        let count = 0;\n        for (let i = 0; i < line1.length; i++) {\n            if (!isSpace(str.charCodeAt(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n    const longerLineLength = countNonWsChars(line1.length > line2.length ? line1 : line2);\n    const r = commonNonSpaceCharCount / longerLineLength > 0.6 && longerLineLength > 10;\n    return r;\n}\nfunction joinCloseConsecutiveMoves(moves) {\n    if (moves.length === 0) {\n        return moves;\n    }\n    moves.sort(compareBy(m => m.original.startLineNumber, numberComparator));\n    const result = [moves[0]];\n    for (let i = 1; i < moves.length; i++) {\n        const last = result[result.length - 1];\n        const current = moves[i];\n        const originalDist = current.original.startLineNumber - last.original.endLineNumberExclusive;\n        const modifiedDist = current.modified.startLineNumber - last.modified.endLineNumberExclusive;\n        const currentMoveAfterLast = originalDist >= 0 && modifiedDist >= 0;\n        if (currentMoveAfterLast && originalDist + modifiedDist <= 2) {\n            result[result.length - 1] = last.join(current);\n            continue;\n        }\n        result.push(current);\n    }\n    return result;\n}\nfunction removeMovesInSameDiff(changes, moves) {\n    const changesMonotonous = ( new MonotonousArray(changes));\n    moves = moves.filter(m => {\n        const diffBeforeEndOfMoveOriginal = changesMonotonous.findLastMonotonous(c => c.original.startLineNumber < m.original.endLineNumberExclusive)\n            || ( new LineRangeMapping(( new LineRange(1, 1)), ( new LineRange(1, 1))));\n        const diffBeforeEndOfMoveModified = findLastMonotonous(changes, c => c.modified.startLineNumber < m.modified.endLineNumberExclusive);\n        const differentDiffs = diffBeforeEndOfMoveOriginal !== diffBeforeEndOfMoveModified;\n        return differentDiffs;\n    });\n    return moves;\n}\nexport { computeMovedLines };\n","import { forEachWithNeighbors } from '../../../../base/common/arrays.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { SequenceDiff, OffsetPair } from './algorithms/diffAlgorithm.js';\nfunction optimizeSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    let result = sequenceDiffs;\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    result = joinSequenceDiffsByShifting(sequence1, sequence2, result);\n    result = shiftSequenceDiffs(sequence1, sequence2, result);\n    return result;\n}\nfunction joinSequenceDiffsByShifting(sequence1, sequence2, sequenceDiffs) {\n    if (sequenceDiffs.length === 0) {\n        return sequenceDiffs;\n    }\n    const result = [];\n    result.push(sequenceDiffs[0]);\n    for (let i = 1; i < sequenceDiffs.length; i++) {\n        const prevResult = result[result.length - 1];\n        let cur = sequenceDiffs[i];\n        if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n            const length = cur.seq1Range.start - prevResult.seq1Range.endExclusive;\n            let d;\n            for (d = 1; d <= length; d++) {\n                if (sequence1.getElement(cur.seq1Range.start - d) !== sequence1.getElement(cur.seq1Range.endExclusive - d) ||\n                    sequence2.getElement(cur.seq2Range.start - d) !== sequence2.getElement(cur.seq2Range.endExclusive - d)) {\n                    break;\n                }\n            }\n            d--;\n            if (d === length) {\n                result[result.length - 1] = ( new SequenceDiff(( new OffsetRange(prevResult.seq1Range.start, cur.seq1Range.endExclusive - length)), ( new OffsetRange(prevResult.seq2Range.start, cur.seq2Range.endExclusive - length))));\n                continue;\n            }\n            cur = cur.delta(-d);\n        }\n        result.push(cur);\n    }\n    const result2 = [];\n    for (let i = 0; i < result.length - 1; i++) {\n        const nextResult = result[i + 1];\n        let cur = result[i];\n        if (cur.seq1Range.isEmpty || cur.seq2Range.isEmpty) {\n            const length = nextResult.seq1Range.start - cur.seq1Range.endExclusive;\n            let d;\n            for (d = 0; d < length; d++) {\n                if (!sequence1.isStronglyEqual(cur.seq1Range.start + d, cur.seq1Range.endExclusive + d) ||\n                    !sequence2.isStronglyEqual(cur.seq2Range.start + d, cur.seq2Range.endExclusive + d)) {\n                    break;\n                }\n            }\n            if (d === length) {\n                result[i + 1] = ( new SequenceDiff(( new OffsetRange(cur.seq1Range.start + length, nextResult.seq1Range.endExclusive)), ( new OffsetRange(cur.seq2Range.start + length, nextResult.seq2Range.endExclusive))));\n                continue;\n            }\n            if (d > 0) {\n                cur = cur.delta(d);\n            }\n        }\n        result2.push(cur);\n    }\n    if (result.length > 0) {\n        result2.push(result[result.length - 1]);\n    }\n    return result2;\n}\nfunction shiftSequenceDiffs(sequence1, sequence2, sequenceDiffs) {\n    if (!sequence1.getBoundaryScore || !sequence2.getBoundaryScore) {\n        return sequenceDiffs;\n    }\n    for (let i = 0; i < sequenceDiffs.length; i++) {\n        const prevDiff = (i > 0 ? sequenceDiffs[i - 1] : undefined);\n        const diff = sequenceDiffs[i];\n        const nextDiff = (i + 1 < sequenceDiffs.length ? sequenceDiffs[i + 1] : undefined);\n        const seq1ValidRange = ( new OffsetRange(\n            prevDiff ? prevDiff.seq1Range.endExclusive + 1 : 0,\n            nextDiff ? nextDiff.seq1Range.start - 1 : sequence1.length\n        ));\n        const seq2ValidRange = ( new OffsetRange(\n            prevDiff ? prevDiff.seq2Range.endExclusive + 1 : 0,\n            nextDiff ? nextDiff.seq2Range.start - 1 : sequence2.length\n        ));\n        if (diff.seq1Range.isEmpty) {\n            sequenceDiffs[i] = shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange);\n        }\n        else if (diff.seq2Range.isEmpty) {\n            sequenceDiffs[i] = shiftDiffToBetterPosition(diff.swap(), sequence2, sequence1, seq2ValidRange, seq1ValidRange).swap();\n        }\n    }\n    return sequenceDiffs;\n}\nfunction shiftDiffToBetterPosition(diff, sequence1, sequence2, seq1ValidRange, seq2ValidRange) {\n    const maxShiftLimit = 100;\n    let deltaBefore = 1;\n    while (diff.seq1Range.start - deltaBefore >= seq1ValidRange.start &&\n        diff.seq2Range.start - deltaBefore >= seq2ValidRange.start &&\n        sequence2.isStronglyEqual(diff.seq2Range.start - deltaBefore, diff.seq2Range.endExclusive - deltaBefore) && deltaBefore < maxShiftLimit) {\n        deltaBefore++;\n    }\n    deltaBefore--;\n    let deltaAfter = 0;\n    while (diff.seq1Range.start + deltaAfter < seq1ValidRange.endExclusive &&\n        diff.seq2Range.endExclusive + deltaAfter < seq2ValidRange.endExclusive &&\n        sequence2.isStronglyEqual(diff.seq2Range.start + deltaAfter, diff.seq2Range.endExclusive + deltaAfter) && deltaAfter < maxShiftLimit) {\n        deltaAfter++;\n    }\n    if (deltaBefore === 0 && deltaAfter === 0) {\n        return diff;\n    }\n    let bestDelta = 0;\n    let bestScore = -1;\n    for (let delta = -deltaBefore; delta <= deltaAfter; delta++) {\n        const seq2OffsetStart = diff.seq2Range.start + delta;\n        const seq2OffsetEndExclusive = diff.seq2Range.endExclusive + delta;\n        const seq1Offset = diff.seq1Range.start + delta;\n        const score = sequence1.getBoundaryScore(seq1Offset) + sequence2.getBoundaryScore(seq2OffsetStart) + sequence2.getBoundaryScore(seq2OffsetEndExclusive);\n        if (score > bestScore) {\n            bestScore = score;\n            bestDelta = delta;\n        }\n    }\n    return diff.delta(bestDelta);\n}\nfunction removeShortMatches(sequence1, sequence2, sequenceDiffs) {\n    const result = [];\n    for (const s of sequenceDiffs) {\n        const last = result[result.length - 1];\n        if (!last) {\n            result.push(s);\n            continue;\n        }\n        if (s.seq1Range.start - last.seq1Range.endExclusive <= 2 || s.seq2Range.start - last.seq2Range.endExclusive <= 2) {\n            result[result.length - 1] = ( new SequenceDiff(last.seq1Range.join(s.seq1Range), last.seq2Range.join(s.seq2Range)));\n        }\n        else {\n            result.push(s);\n        }\n    }\n    return result;\n}\nfunction extendDiffsToEntireWordIfAppropriate(sequence1, sequence2, sequenceDiffs) {\n    const equalMappings = SequenceDiff.invert(sequenceDiffs, sequence1.length);\n    const additional = [];\n    let lastPoint = ( new OffsetPair(0, 0));\n    function scanWord(pair, equalMapping) {\n        if (pair.offset1 < lastPoint.offset1 || pair.offset2 < lastPoint.offset2) {\n            return;\n        }\n        const w1 = sequence1.findWordContaining(pair.offset1);\n        const w2 = sequence2.findWordContaining(pair.offset2);\n        if (!w1 || !w2) {\n            return;\n        }\n        let w = ( new SequenceDiff(w1, w2));\n        const equalPart = w.intersect(equalMapping);\n        let equalChars1 = equalPart.seq1Range.length;\n        let equalChars2 = equalPart.seq2Range.length;\n        while (equalMappings.length > 0) {\n            const next = equalMappings[0];\n            const intersects = next.seq1Range.intersects(w.seq1Range) || next.seq2Range.intersects(w.seq2Range);\n            if (!intersects) {\n                break;\n            }\n            const v1 = sequence1.findWordContaining(next.seq1Range.start);\n            const v2 = sequence2.findWordContaining(next.seq2Range.start);\n            const v = ( new SequenceDiff(v1, v2));\n            const equalPart = v.intersect(next);\n            equalChars1 += equalPart.seq1Range.length;\n            equalChars2 += equalPart.seq2Range.length;\n            w = w.join(v);\n            if (w.seq1Range.endExclusive >= next.seq1Range.endExclusive) {\n                equalMappings.shift();\n            }\n            else {\n                break;\n            }\n        }\n        if (equalChars1 + equalChars2 < (w.seq1Range.length + w.seq2Range.length) * 2 / 3) {\n            additional.push(w);\n        }\n        lastPoint = w.getEndExclusives();\n    }\n    while (equalMappings.length > 0) {\n        const next = equalMappings.shift();\n        if (next.seq1Range.isEmpty) {\n            continue;\n        }\n        scanWord(next.getStarts(), next);\n        scanWord(next.getEndExclusives().delta(-1), next);\n    }\n    const merged = mergeSequenceDiffs(sequenceDiffs, additional);\n    return merged;\n}\nfunction mergeSequenceDiffs(sequenceDiffs1, sequenceDiffs2) {\n    const result = [];\n    while (sequenceDiffs1.length > 0 || sequenceDiffs2.length > 0) {\n        const sd1 = sequenceDiffs1[0];\n        const sd2 = sequenceDiffs2[0];\n        let next;\n        if (sd1 && (!sd2 || sd1.seq1Range.start < sd2.seq1Range.start)) {\n            next = sequenceDiffs1.shift();\n        }\n        else {\n            next = sequenceDiffs2.shift();\n        }\n        if (result.length > 0 && result[result.length - 1].seq1Range.endExclusive >= next.seq1Range.start) {\n            result[result.length - 1] = result[result.length - 1].join(next);\n        }\n        else {\n            result.push(next);\n        }\n    }\n    return result;\n}\nfunction removeVeryShortMatchingLinesBetweenDiffs(sequence1, _sequence2, sequenceDiffs) {\n    let diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n        return diffs;\n    }\n    let counter = 0;\n    let shouldRepeat;\n    do {\n        shouldRepeat = false;\n        const result = [\n            diffs[0]\n        ];\n        for (let i = 1; i < diffs.length; i++) {\n            const cur = diffs[i];\n            const lastResult = result[result.length - 1];\n            function shouldJoinDiffs(before, after) {\n                const unchangedRange = ( new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start));\n                const unchangedText = sequence1.getText(unchangedRange);\n                const unchangedTextWithoutWs = unchangedText.replace(/\\s/g, '');\n                if (unchangedTextWithoutWs.length <= 4\n                    && (before.seq1Range.length + before.seq2Range.length > 5 || after.seq1Range.length + after.seq2Range.length > 5)) {\n                    return true;\n                }\n                return false;\n            }\n            const shouldJoin = shouldJoinDiffs(lastResult, cur);\n            if (shouldJoin) {\n                shouldRepeat = true;\n                result[result.length - 1] = result[result.length - 1].join(cur);\n            }\n            else {\n                result.push(cur);\n            }\n        }\n        diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    return diffs;\n}\nfunction removeVeryShortMatchingTextBetweenLongDiffs(sequence1, sequence2, sequenceDiffs) {\n    let diffs = sequenceDiffs;\n    if (diffs.length === 0) {\n        return diffs;\n    }\n    let counter = 0;\n    let shouldRepeat;\n    do {\n        shouldRepeat = false;\n        const result = [\n            diffs[0]\n        ];\n        for (let i = 1; i < diffs.length; i++) {\n            const cur = diffs[i];\n            const lastResult = result[result.length - 1];\n            function shouldJoinDiffs(before, after) {\n                const unchangedRange = ( new OffsetRange(lastResult.seq1Range.endExclusive, cur.seq1Range.start));\n                const unchangedLineCount = sequence1.countLinesIn(unchangedRange);\n                if (unchangedLineCount > 5 || unchangedRange.length > 500) {\n                    return false;\n                }\n                const unchangedText = sequence1.getText(unchangedRange).trim();\n                if (unchangedText.length > 20 || unchangedText.split(/\\r\\n|\\r|\\n/).length > 1) {\n                    return false;\n                }\n                const beforeLineCount1 = sequence1.countLinesIn(before.seq1Range);\n                const beforeSeq1Length = before.seq1Range.length;\n                const beforeLineCount2 = sequence2.countLinesIn(before.seq2Range);\n                const beforeSeq2Length = before.seq2Range.length;\n                const afterLineCount1 = sequence1.countLinesIn(after.seq1Range);\n                const afterSeq1Length = after.seq1Range.length;\n                const afterLineCount2 = sequence2.countLinesIn(after.seq2Range);\n                const afterSeq2Length = after.seq2Range.length;\n                const max = 2 * 40 + 50;\n                function cap(v) {\n                    return Math.min(v, max);\n                }\n                if (Math.pow(Math.pow(cap(beforeLineCount1 * 40 + beforeSeq1Length), 1.5) + Math.pow(cap(beforeLineCount2 * 40 + beforeSeq2Length), 1.5), 1.5)\n                    + Math.pow(Math.pow(cap(afterLineCount1 * 40 + afterSeq1Length), 1.5) + Math.pow(cap(afterLineCount2 * 40 + afterSeq2Length), 1.5), 1.5) > ((max ** 1.5) ** 1.5) * 1.3) {\n                    return true;\n                }\n                return false;\n            }\n            const shouldJoin = shouldJoinDiffs(lastResult, cur);\n            if (shouldJoin) {\n                shouldRepeat = true;\n                result[result.length - 1] = result[result.length - 1].join(cur);\n            }\n            else {\n                result.push(cur);\n            }\n        }\n        diffs = result;\n    } while (counter++ < 10 && shouldRepeat);\n    const newDiffs = [];\n    forEachWithNeighbors(diffs, (prev, cur, next) => {\n        let newDiff = cur;\n        function shouldMarkAsChanged(text) {\n            return text.length > 0 && text.trim().length <= 3 && cur.seq1Range.length + cur.seq2Range.length > 100;\n        }\n        const fullRange1 = sequence1.extendToFullLines(cur.seq1Range);\n        const prefix = sequence1.getText(( new OffsetRange(fullRange1.start, cur.seq1Range.start)));\n        if (shouldMarkAsChanged(prefix)) {\n            newDiff = newDiff.deltaStart(-prefix.length);\n        }\n        const suffix = sequence1.getText(( new OffsetRange(cur.seq1Range.endExclusive, fullRange1.endExclusive)));\n        if (shouldMarkAsChanged(suffix)) {\n            newDiff = newDiff.deltaEnd(suffix.length);\n        }\n        const availableSpace = SequenceDiff.fromOffsetPairs(prev ? prev.getEndExclusives() : OffsetPair.zero, next ? next.getStarts() : OffsetPair.max);\n        const result = newDiff.intersect(availableSpace);\n        if (newDiffs.length > 0 && result.getStarts().equals(newDiffs[newDiffs.length - 1].getEndExclusives())) {\n            newDiffs[newDiffs.length - 1] = newDiffs[newDiffs.length - 1].join(result);\n        }\n        else {\n            newDiffs.push(result);\n        }\n    });\n    return newDiffs;\n}\nexport { extendDiffsToEntireWordIfAppropriate, optimizeSequenceDiffs, removeShortMatches, removeVeryShortMatchingLinesBetweenDiffs, removeVeryShortMatchingTextBetweenLongDiffs };\n","import { CharCode } from '../../../../base/common/charCode.js';\nclass LineSequence {\n    constructor(trimmedHash, lines) {\n        this.trimmedHash = trimmedHash;\n        this.lines = lines;\n    }\n    getElement(offset) {\n        return this.trimmedHash[offset];\n    }\n    get length() {\n        return this.trimmedHash.length;\n    }\n    getBoundaryScore(length) {\n        const indentationBefore = length === 0 ? 0 : getIndentation(this.lines[length - 1]);\n        const indentationAfter = length === this.lines.length ? 0 : getIndentation(this.lines[length]);\n        return 1000 - (indentationBefore + indentationAfter);\n    }\n    getText(range) {\n        return this.lines.slice(range.start, range.endExclusive).join('\\n');\n    }\n    isStronglyEqual(offset1, offset2) {\n        return this.lines[offset1] === this.lines[offset2];\n    }\n}\nfunction getIndentation(str) {\n    let i = 0;\n    while (i < str.length && (str.charCodeAt(i) === CharCode.Space || str.charCodeAt(i) === CharCode.Tab)) {\n        i++;\n    }\n    return i;\n}\nexport { LineSequence };\n","import { equals, groupAdjacentBy } from '../../../../base/common/arrays.js';\nimport { assertFn, checkAdjacentItems } from '../../../../base/common/assert.js';\nimport { LineRange } from '../../core/lineRange.js';\nimport { OffsetRange } from '../../core/offsetRange.js';\nimport { Range } from '../../core/range.js';\nimport { InfiniteTimeout, DateTimeout, SequenceDiff } from './algorithms/diffAlgorithm.js';\nimport { DynamicProgrammingDiffing } from './algorithms/dynamicProgrammingDiffing.js';\nimport { MyersDiffAlgorithm } from './algorithms/myersDiffAlgorithm.js';\nimport { computeMovedLines } from './computeMovedLines.js';\nimport { optimizeSequenceDiffs, removeVeryShortMatchingLinesBetweenDiffs, extendDiffsToEntireWordIfAppropriate, removeShortMatches, removeVeryShortMatchingTextBetweenLongDiffs } from './heuristicSequenceOptimizations.js';\nimport { LineSequence } from './lineSequence.js';\nimport { LinesSliceCharSequence } from './linesSliceCharSequence.js';\nimport { LinesDiff, MovedText } from '../linesDiffComputer.js';\nimport { DetailedLineRangeMapping, RangeMapping } from '../rangeMapping.js';\nclass DefaultLinesDiffComputer {\n    constructor() {\n        this.dynamicProgrammingDiffing = ( new DynamicProgrammingDiffing());\n        this.myersDiffingAlgorithm = ( new MyersDiffAlgorithm());\n    }\n    computeDiff(originalLines, modifiedLines, options) {\n        if (originalLines.length <= 1 && equals(originalLines, modifiedLines, (a, b) => a === b)) {\n            return ( new LinesDiff([], [], false));\n        }\n        if (originalLines.length === 1 && originalLines[0].length === 0 || modifiedLines.length === 1 && modifiedLines[0].length === 0) {\n            return ( new LinesDiff([\n                ( new DetailedLineRangeMapping(( new LineRange(1, originalLines.length + 1)), ( new LineRange(1, modifiedLines.length + 1)), [\n                    ( new RangeMapping(( new Range(\n                        1,\n                        1,\n                        originalLines.length,\n                        originalLines[originalLines.length - 1].length + 1\n                    )), ( new Range(\n                        1,\n                        1,\n                        modifiedLines.length,\n                        modifiedLines[modifiedLines.length - 1].length + 1\n                    ))))\n                ]))\n            ], [], false));\n        }\n        const timeout = options.maxComputationTimeMs === 0 ? InfiniteTimeout.instance : ( new DateTimeout(options.maxComputationTimeMs));\n        const considerWhitespaceChanges = !options.ignoreTrimWhitespace;\n        const perfectHashes = ( new Map());\n        function getOrCreateHash(text) {\n            let hash = perfectHashes.get(text);\n            if (hash === undefined) {\n                hash = perfectHashes.size;\n                perfectHashes.set(text, hash);\n            }\n            return hash;\n        }\n        const originalLinesHashes = ( originalLines.map((l) => getOrCreateHash(l.trim())));\n        const modifiedLinesHashes = ( modifiedLines.map((l) => getOrCreateHash(l.trim())));\n        const sequence1 = ( new LineSequence(originalLinesHashes, originalLines));\n        const sequence2 = ( new LineSequence(modifiedLinesHashes, modifiedLines));\n        const lineAlignmentResult = (() => {\n            if (sequence1.length + sequence2.length < 1700) {\n                return this.dynamicProgrammingDiffing.compute(sequence1, sequence2, timeout, (offset1, offset2) => originalLines[offset1] === modifiedLines[offset2]\n                    ? modifiedLines[offset2].length === 0\n                        ? 0.1\n                        : 1 + Math.log(1 + modifiedLines[offset2].length)\n                    : 0.99);\n            }\n            return this.myersDiffingAlgorithm.compute(sequence1, sequence2, timeout);\n        })();\n        let lineAlignments = lineAlignmentResult.diffs;\n        let hitTimeout = lineAlignmentResult.hitTimeout;\n        lineAlignments = optimizeSequenceDiffs(sequence1, sequence2, lineAlignments);\n        lineAlignments = removeVeryShortMatchingLinesBetweenDiffs(sequence1, sequence2, lineAlignments);\n        const alignments = [];\n        const scanForWhitespaceChanges = (equalLinesCount) => {\n            if (!considerWhitespaceChanges) {\n                return;\n            }\n            for (let i = 0; i < equalLinesCount; i++) {\n                const seq1Offset = seq1LastStart + i;\n                const seq2Offset = seq2LastStart + i;\n                if (originalLines[seq1Offset] !== modifiedLines[seq2Offset]) {\n                    const characterDiffs = this.refineDiff(originalLines, modifiedLines, ( new SequenceDiff(( new OffsetRange(seq1Offset, seq1Offset + 1)), ( new OffsetRange(seq2Offset, seq2Offset + 1)))), timeout, considerWhitespaceChanges);\n                    for (const a of characterDiffs.mappings) {\n                        alignments.push(a);\n                    }\n                    if (characterDiffs.hitTimeout) {\n                        hitTimeout = true;\n                    }\n                }\n            }\n        };\n        let seq1LastStart = 0;\n        let seq2LastStart = 0;\n        for (const diff of lineAlignments) {\n            assertFn(() => diff.seq1Range.start - seq1LastStart === diff.seq2Range.start - seq2LastStart);\n            const equalLinesCount = diff.seq1Range.start - seq1LastStart;\n            scanForWhitespaceChanges(equalLinesCount);\n            seq1LastStart = diff.seq1Range.endExclusive;\n            seq2LastStart = diff.seq2Range.endExclusive;\n            const characterDiffs = this.refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges);\n            if (characterDiffs.hitTimeout) {\n                hitTimeout = true;\n            }\n            for (const a of characterDiffs.mappings) {\n                alignments.push(a);\n            }\n        }\n        scanForWhitespaceChanges(originalLines.length - seq1LastStart);\n        const changes = lineRangeMappingFromRangeMappings(alignments, originalLines, modifiedLines);\n        let moves = [];\n        if (options.computeMoves) {\n            moves = this.computeMoves(changes, originalLines, modifiedLines, originalLinesHashes, modifiedLinesHashes, timeout, considerWhitespaceChanges);\n        }\n        assertFn(() => {\n            function validatePosition(pos, lines) {\n                if (pos.lineNumber < 1 || pos.lineNumber > lines.length) {\n                    return false;\n                }\n                const line = lines[pos.lineNumber - 1];\n                if (pos.column < 1 || pos.column > line.length + 1) {\n                    return false;\n                }\n                return true;\n            }\n            function validateRange(range, lines) {\n                if (range.startLineNumber < 1 || range.startLineNumber > lines.length + 1) {\n                    return false;\n                }\n                if (range.endLineNumberExclusive < 1 || range.endLineNumberExclusive > lines.length + 1) {\n                    return false;\n                }\n                return true;\n            }\n            for (const c of changes) {\n                if (!c.innerChanges) {\n                    return false;\n                }\n                for (const ic of c.innerChanges) {\n                    const valid = validatePosition(ic.modifiedRange.getStartPosition(), modifiedLines) && validatePosition(ic.modifiedRange.getEndPosition(), modifiedLines) &&\n                        validatePosition(ic.originalRange.getStartPosition(), originalLines) && validatePosition(ic.originalRange.getEndPosition(), originalLines);\n                    if (!valid) {\n                        return false;\n                    }\n                }\n                if (!validateRange(c.modified, modifiedLines) || !validateRange(c.original, originalLines)) {\n                    return false;\n                }\n            }\n            return true;\n        });\n        return ( new LinesDiff(changes, moves, hitTimeout));\n    }\n    computeMoves(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout, considerWhitespaceChanges) {\n        const moves = computeMovedLines(changes, originalLines, modifiedLines, hashedOriginalLines, hashedModifiedLines, timeout);\n        const movesWithDiffs = ( moves.map(m => {\n            const moveChanges = this.refineDiff(originalLines, modifiedLines, ( new SequenceDiff(m.original.toOffsetRange(), m.modified.toOffsetRange())), timeout, considerWhitespaceChanges);\n            const mappings = lineRangeMappingFromRangeMappings(moveChanges.mappings, originalLines, modifiedLines, true);\n            return ( new MovedText(m, mappings));\n        }));\n        return movesWithDiffs;\n    }\n    refineDiff(originalLines, modifiedLines, diff, timeout, considerWhitespaceChanges) {\n        const slice1 = ( new LinesSliceCharSequence(originalLines, diff.seq1Range, considerWhitespaceChanges));\n        const slice2 = ( new LinesSliceCharSequence(modifiedLines, diff.seq2Range, considerWhitespaceChanges));\n        const diffResult = slice1.length + slice2.length < 500\n            ? this.dynamicProgrammingDiffing.compute(slice1, slice2, timeout)\n            : this.myersDiffingAlgorithm.compute(slice1, slice2, timeout);\n        let diffs = diffResult.diffs;\n        diffs = optimizeSequenceDiffs(slice1, slice2, diffs);\n        diffs = extendDiffsToEntireWordIfAppropriate(slice1, slice2, diffs);\n        diffs = removeShortMatches(slice1, slice2, diffs);\n        diffs = removeVeryShortMatchingTextBetweenLongDiffs(slice1, slice2, diffs);\n        const result = ( diffs.map((d) => ( new RangeMapping(slice1.translateRange(d.seq1Range), slice2.translateRange(d.seq2Range)))));\n        return {\n            mappings: result,\n            hitTimeout: diffResult.hitTimeout,\n        };\n    }\n}\nfunction lineRangeMappingFromRangeMappings(alignments, originalLines, modifiedLines, dontAssertStartLine = false) {\n    const changes = [];\n    for (const g of groupAdjacentBy(( alignments.map(a => getLineRangeMapping(a, originalLines, modifiedLines))), (a1, a2) => a1.original.overlapOrTouch(a2.original)\n        || a1.modified.overlapOrTouch(a2.modified))) {\n        const first = g[0];\n        const last = g[g.length - 1];\n        changes.push(( new DetailedLineRangeMapping(\n            first.original.join(last.original),\n            first.modified.join(last.modified),\n            ( g.map(a => a.innerChanges[0]))\n        )));\n    }\n    assertFn(() => {\n        if (!dontAssertStartLine && changes.length > 0) {\n            if (changes[0].modified.startLineNumber !== changes[0].original.startLineNumber) {\n                return false;\n            }\n            if (modifiedLines.length - changes[changes.length - 1].modified.endLineNumberExclusive !== originalLines.length - changes[changes.length - 1].original.endLineNumberExclusive) {\n                return false;\n            }\n        }\n        return checkAdjacentItems(changes, (m1, m2) => m2.original.startLineNumber - m1.original.endLineNumberExclusive === m2.modified.startLineNumber - m1.modified.endLineNumberExclusive &&\n            m1.original.endLineNumberExclusive < m2.original.startLineNumber &&\n            m1.modified.endLineNumberExclusive < m2.modified.startLineNumber);\n    });\n    return changes;\n}\nfunction getLineRangeMapping(rangeMapping, originalLines, modifiedLines) {\n    let lineStartDelta = 0;\n    let lineEndDelta = 0;\n    if (rangeMapping.modifiedRange.endColumn === 1 && rangeMapping.originalRange.endColumn === 1\n        && rangeMapping.originalRange.startLineNumber + lineStartDelta <= rangeMapping.originalRange.endLineNumber\n        && rangeMapping.modifiedRange.startLineNumber + lineStartDelta <= rangeMapping.modifiedRange.endLineNumber) {\n        lineEndDelta = -1;\n    }\n    if (rangeMapping.modifiedRange.startColumn - 1 >= modifiedLines[rangeMapping.modifiedRange.startLineNumber - 1].length\n        && rangeMapping.originalRange.startColumn - 1 >= originalLines[rangeMapping.originalRange.startLineNumber - 1].length\n        && rangeMapping.originalRange.startLineNumber <= rangeMapping.originalRange.endLineNumber + lineEndDelta\n        && rangeMapping.modifiedRange.startLineNumber <= rangeMapping.modifiedRange.endLineNumber + lineEndDelta) {\n        lineStartDelta = 1;\n    }\n    const originalLineRange = ( new LineRange(\n        rangeMapping.originalRange.startLineNumber + lineStartDelta,\n        rangeMapping.originalRange.endLineNumber + 1 + lineEndDelta\n    ));\n    const modifiedLineRange = ( new LineRange(\n        rangeMapping.modifiedRange.startLineNumber + lineStartDelta,\n        rangeMapping.modifiedRange.endLineNumber + 1 + lineEndDelta\n    ));\n    return ( new DetailedLineRangeMapping(originalLineRange, modifiedLineRange, [rangeMapping]));\n}\nexport { DefaultLinesDiffComputer, getLineRangeMapping, lineRangeMappingFromRangeMappings };\n","import { LegacyLinesDiffComputer } from './legacyLinesDiffComputer.js';\nimport { DefaultLinesDiffComputer } from './defaultLinesDiffComputer/defaultLinesDiffComputer.js';\nconst linesDiffComputers = {\n    getLegacy: () => ( new LegacyLinesDiffComputer()),\n    getDefault: () => ( new DefaultLinesDiffComputer()),\n};\nexport { linesDiffComputers };\n","import { CharCode } from './charCode.js';\nfunction roundFloat(number, decimalPoints) {\n    const decimal = Math.pow(10, decimalPoints);\n    return Math.round(number * decimal) / decimal;\n}\nclass RGBA {\n    constructor(r, g, b, a = 1) {\n        this._rgbaBrand = undefined;\n        this.r = Math.min(255, Math.max(0, r)) | 0;\n        this.g = Math.min(255, Math.max(0, g)) | 0;\n        this.b = Math.min(255, Math.max(0, b)) | 0;\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.r === b.r && a.g === b.g && a.b === b.b && a.a === b.a;\n    }\n}\nclass HSLA {\n    constructor(h, s, l, a) {\n        this._hslaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.l = roundFloat(Math.max(Math.min(1, l), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.l === b.l && a.a === b.a;\n    }\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const a = rgba.a;\n        const max = Math.max(r, g, b);\n        const min = Math.min(r, g, b);\n        let h = 0;\n        let s = 0;\n        const l = (min + max) / 2;\n        const chroma = max - min;\n        if (chroma > 0) {\n            s = Math.min((l <= 0.5 ? chroma / (2 * l) : chroma / (2 - (2 * l))), 1);\n            switch (max) {\n                case r:\n                    h = (g - b) / chroma + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / chroma + 2;\n                    break;\n                case b:\n                    h = (r - g) / chroma + 4;\n                    break;\n            }\n            h *= 60;\n            h = Math.round(h);\n        }\n        return ( new HSLA(h, s, l, a));\n    }\n    static _hue2rgb(p, q, t) {\n        if (t < 0) {\n            t += 1;\n        }\n        if (t > 1) {\n            t -= 1;\n        }\n        if (t < 1 / 6) {\n            return p + (q - p) * 6 * t;\n        }\n        if (t < 1 / 2) {\n            return q;\n        }\n        if (t < 2 / 3) {\n            return p + (q - p) * (2 / 3 - t) * 6;\n        }\n        return p;\n    }\n    static toRGBA(hsla) {\n        const h = hsla.h / 360;\n        const { s, l, a } = hsla;\n        let r, g, b;\n        if (s === 0) {\n            r = g = b = l;\n        }\n        else {\n            const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const p = 2 * l - q;\n            r = HSLA._hue2rgb(p, q, h + 1 / 3);\n            g = HSLA._hue2rgb(p, q, h);\n            b = HSLA._hue2rgb(p, q, h - 1 / 3);\n        }\n        return ( new RGBA(Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), a));\n    }\n}\nclass HSVA {\n    constructor(h, s, v, a) {\n        this._hsvaBrand = undefined;\n        this.h = Math.max(Math.min(360, h), 0) | 0;\n        this.s = roundFloat(Math.max(Math.min(1, s), 0), 3);\n        this.v = roundFloat(Math.max(Math.min(1, v), 0), 3);\n        this.a = roundFloat(Math.max(Math.min(1, a), 0), 3);\n    }\n    static equals(a, b) {\n        return a.h === b.h && a.s === b.s && a.v === b.v && a.a === b.a;\n    }\n    static fromRGBA(rgba) {\n        const r = rgba.r / 255;\n        const g = rgba.g / 255;\n        const b = rgba.b / 255;\n        const cmax = Math.max(r, g, b);\n        const cmin = Math.min(r, g, b);\n        const delta = cmax - cmin;\n        const s = cmax === 0 ? 0 : (delta / cmax);\n        let m;\n        if (delta === 0) {\n            m = 0;\n        }\n        else if (cmax === r) {\n            m = ((((g - b) / delta) % 6) + 6) % 6;\n        }\n        else if (cmax === g) {\n            m = ((b - r) / delta) + 2;\n        }\n        else {\n            m = ((r - g) / delta) + 4;\n        }\n        return ( new HSVA(Math.round(m * 60), s, cmax, rgba.a));\n    }\n    static toRGBA(hsva) {\n        const { h, s, v, a } = hsva;\n        const c = v * s;\n        const x = c * (1 - Math.abs((h / 60) % 2 - 1));\n        const m = v - c;\n        let [r, g, b] = [0, 0, 0];\n        if (h < 60) {\n            r = c;\n            g = x;\n        }\n        else if (h < 120) {\n            r = x;\n            g = c;\n        }\n        else if (h < 180) {\n            g = c;\n            b = x;\n        }\n        else if (h < 240) {\n            g = x;\n            b = c;\n        }\n        else if (h < 300) {\n            r = x;\n            b = c;\n        }\n        else if (h <= 360) {\n            r = c;\n            b = x;\n        }\n        r = Math.round((r + m) * 255);\n        g = Math.round((g + m) * 255);\n        b = Math.round((b + m) * 255);\n        return ( new RGBA(r, g, b, a));\n    }\n}\nclass Color {\n    static fromHex(hex) {\n        return Color.Format.CSS.parseHex(hex) || Color.red;\n    }\n    static equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return a.equals(b);\n    }\n    get hsla() {\n        if (this._hsla) {\n            return this._hsla;\n        }\n        else {\n            return HSLA.fromRGBA(this.rgba);\n        }\n    }\n    get hsva() {\n        if (this._hsva) {\n            return this._hsva;\n        }\n        return HSVA.fromRGBA(this.rgba);\n    }\n    constructor(arg) {\n        if (!arg) {\n            throw ( new Error('Color needs a value'));\n        }\n        else if (arg instanceof RGBA) {\n            this.rgba = arg;\n        }\n        else if (arg instanceof HSLA) {\n            this._hsla = arg;\n            this.rgba = HSLA.toRGBA(arg);\n        }\n        else if (arg instanceof HSVA) {\n            this._hsva = arg;\n            this.rgba = HSVA.toRGBA(arg);\n        }\n        else {\n            throw ( new Error('Invalid color ctor argument'));\n        }\n    }\n    equals(other) {\n        return !!other && RGBA.equals(this.rgba, other.rgba) && HSLA.equals(this.hsla, other.hsla) && HSVA.equals(this.hsva, other.hsva);\n    }\n    getRelativeLuminance() {\n        const R = Color._relativeLuminanceForComponent(this.rgba.r);\n        const G = Color._relativeLuminanceForComponent(this.rgba.g);\n        const B = Color._relativeLuminanceForComponent(this.rgba.b);\n        const luminance = 0.2126 * R + 0.7152 * G + 0.0722 * B;\n        return roundFloat(luminance, 4);\n    }\n    static _relativeLuminanceForComponent(color) {\n        const c = color / 255;\n        return (c <= 0.03928) ? c / 12.92 : Math.pow(((c + 0.055) / 1.055), 2.4);\n    }\n    getContrastRatio(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 > lum2 ? (lum1 + 0.05) / (lum2 + 0.05) : (lum2 + 0.05) / (lum1 + 0.05);\n    }\n    isDarker() {\n        const yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n        return yiq < 128;\n    }\n    isLighter() {\n        const yiq = (this.rgba.r * 299 + this.rgba.g * 587 + this.rgba.b * 114) / 1000;\n        return yiq >= 128;\n    }\n    isLighterThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 > lum2;\n    }\n    isDarkerThan(another) {\n        const lum1 = this.getRelativeLuminance();\n        const lum2 = another.getRelativeLuminance();\n        return lum1 < lum2;\n    }\n    lighten(factor) {\n        return ( new Color(( new HSLA(this.hsla.h, this.hsla.s, this.hsla.l + this.hsla.l * factor, this.hsla.a))));\n    }\n    darken(factor) {\n        return ( new Color(( new HSLA(this.hsla.h, this.hsla.s, this.hsla.l - this.hsla.l * factor, this.hsla.a))));\n    }\n    transparent(factor) {\n        const { r, g, b, a } = this.rgba;\n        return ( new Color(( new RGBA(r, g, b, a * factor))));\n    }\n    isTransparent() {\n        return this.rgba.a === 0;\n    }\n    isOpaque() {\n        return this.rgba.a === 1;\n    }\n    opposite() {\n        return ( new Color(( new RGBA(255 - this.rgba.r, 255 - this.rgba.g, 255 - this.rgba.b, this.rgba.a))));\n    }\n    blend(c) {\n        const rgba = c.rgba;\n        const thisA = this.rgba.a;\n        const colorA = rgba.a;\n        const a = thisA + colorA * (1 - thisA);\n        if (a < 1e-6) {\n            return Color.transparent;\n        }\n        const r = this.rgba.r * thisA / a + rgba.r * colorA * (1 - thisA) / a;\n        const g = this.rgba.g * thisA / a + rgba.g * colorA * (1 - thisA) / a;\n        const b = this.rgba.b * thisA / a + rgba.b * colorA * (1 - thisA) / a;\n        return ( new Color(( new RGBA(r, g, b, a))));\n    }\n    makeOpaque(opaqueBackground) {\n        if (this.isOpaque() || opaqueBackground.rgba.a !== 1) {\n            return this;\n        }\n        const { r, g, b, a } = this.rgba;\n        return ( new Color(( new RGBA(\n            opaqueBackground.rgba.r - a * (opaqueBackground.rgba.r - r),\n            opaqueBackground.rgba.g - a * (opaqueBackground.rgba.g - g),\n            opaqueBackground.rgba.b - a * (opaqueBackground.rgba.b - b),\n            1\n        ))));\n    }\n    flatten(...backgrounds) {\n        const background = backgrounds.reduceRight((accumulator, color) => {\n            return Color._flatten(color, accumulator);\n        });\n        return Color._flatten(this, background);\n    }\n    static _flatten(foreground, background) {\n        const backgroundAlpha = 1 - foreground.rgba.a;\n        return ( new Color(( new RGBA(\n            backgroundAlpha * background.rgba.r + foreground.rgba.a * foreground.rgba.r,\n            backgroundAlpha * background.rgba.g + foreground.rgba.a * foreground.rgba.g,\n            backgroundAlpha * background.rgba.b + foreground.rgba.a * foreground.rgba.b\n        ))));\n    }\n    toString() {\n        if (!this._toString) {\n            this._toString = Color.Format.CSS.format(this);\n        }\n        return this._toString;\n    }\n    static getLighterColor(of, relative, factor) {\n        if (of.isLighterThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum2 - lum1) / lum2;\n        return ( of.lighten(factor));\n    }\n    static getDarkerColor(of, relative, factor) {\n        if (of.isDarkerThan(relative)) {\n            return of;\n        }\n        factor = factor ? factor : 0.5;\n        const lum1 = of.getRelativeLuminance();\n        const lum2 = relative.getRelativeLuminance();\n        factor = factor * (lum1 - lum2) / lum1;\n        return ( of.darken(factor));\n    }\n    static { this.white = ( new Color(( new RGBA(255, 255, 255, 1)))); }\n    static { this.black = ( new Color(( new RGBA(0, 0, 0, 1)))); }\n    static { this.red = ( new Color(( new RGBA(255, 0, 0, 1)))); }\n    static { this.blue = ( new Color(( new RGBA(0, 0, 255, 1)))); }\n    static { this.green = ( new Color(( new RGBA(0, 255, 0, 1)))); }\n    static { this.cyan = ( new Color(( new RGBA(0, 255, 255, 1)))); }\n    static { this.lightgrey = ( new Color(( new RGBA(211, 211, 211, 1)))); }\n    static { this.transparent = ( new Color(( new RGBA(0, 0, 0, 0)))); }\n}\n( (function(Color) {\n    ( (function(Format) {\n        ( (function(CSS) {\n            function formatRGB(color) {\n                if (color.rgba.a === 1) {\n                    return `rgb(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b})`;\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.formatRGB = formatRGB;\n            function formatRGBA(color) {\n                return `rgba(${color.rgba.r}, ${color.rgba.g}, ${color.rgba.b}, ${+(color.rgba.a).toFixed(2)})`;\n            }\n            CSS.formatRGBA = formatRGBA;\n            function formatHSL(color) {\n                if (color.hsla.a === 1) {\n                    return `hsl(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%)`;\n                }\n                return Color.Format.CSS.formatHSLA(color);\n            }\n            CSS.formatHSL = formatHSL;\n            function formatHSLA(color) {\n                return `hsla(${color.hsla.h}, ${(color.hsla.s * 100).toFixed(2)}%, ${(color.hsla.l * 100).toFixed(2)}%, ${color.hsla.a.toFixed(2)})`;\n            }\n            CSS.formatHSLA = formatHSLA;\n            function _toTwoDigitHex(n) {\n                const r = ( n.toString(16));\n                return r.length !== 2 ? '0' + r : r;\n            }\n            function formatHex(color) {\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}`;\n            }\n            CSS.formatHex = formatHex;\n            function formatHexA(color, compact = false) {\n                if (compact && color.rgba.a === 1) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return `#${_toTwoDigitHex(color.rgba.r)}${_toTwoDigitHex(color.rgba.g)}${_toTwoDigitHex(color.rgba.b)}${_toTwoDigitHex(Math.round(color.rgba.a * 255))}`;\n            }\n            CSS.formatHexA = formatHexA;\n            function format(color) {\n                if (color.isOpaque()) {\n                    return Color.Format.CSS.formatHex(color);\n                }\n                return Color.Format.CSS.formatRGBA(color);\n            }\n            CSS.format = format;\n            function parseHex(hex) {\n                const length = hex.length;\n                if (length === 0) {\n                    return null;\n                }\n                if (hex.charCodeAt(0) !== CharCode.Hash) {\n                    return null;\n                }\n                if (length === 7) {\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    return ( new Color(( new RGBA(r, g, b, 1))));\n                }\n                if (length === 9) {\n                    const r = 16 * _parseHexDigit(hex.charCodeAt(1)) + _parseHexDigit(hex.charCodeAt(2));\n                    const g = 16 * _parseHexDigit(hex.charCodeAt(3)) + _parseHexDigit(hex.charCodeAt(4));\n                    const b = 16 * _parseHexDigit(hex.charCodeAt(5)) + _parseHexDigit(hex.charCodeAt(6));\n                    const a = 16 * _parseHexDigit(hex.charCodeAt(7)) + _parseHexDigit(hex.charCodeAt(8));\n                    return ( new Color(( new RGBA(r, g, b, a / 255))));\n                }\n                if (length === 4) {\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    return ( new Color(( new RGBA(16 * r + r, 16 * g + g, 16 * b + b))));\n                }\n                if (length === 5) {\n                    const r = _parseHexDigit(hex.charCodeAt(1));\n                    const g = _parseHexDigit(hex.charCodeAt(2));\n                    const b = _parseHexDigit(hex.charCodeAt(3));\n                    const a = _parseHexDigit(hex.charCodeAt(4));\n                    return ( new Color(( new RGBA(16 * r + r, 16 * g + g, 16 * b + b, (16 * a + a) / 255))));\n                }\n                return null;\n            }\n            CSS.parseHex = parseHex;\n            function _parseHexDigit(charCode) {\n                switch (charCode) {\n                    case CharCode.Digit0: return 0;\n                    case CharCode.Digit1: return 1;\n                    case CharCode.Digit2: return 2;\n                    case CharCode.Digit3: return 3;\n                    case CharCode.Digit4: return 4;\n                    case CharCode.Digit5: return 5;\n                    case CharCode.Digit6: return 6;\n                    case CharCode.Digit7: return 7;\n                    case CharCode.Digit8: return 8;\n                    case CharCode.Digit9: return 9;\n                    case CharCode.a: return 10;\n                    case CharCode.A: return 10;\n                    case CharCode.b: return 11;\n                    case CharCode.B: return 11;\n                    case CharCode.c: return 12;\n                    case CharCode.C: return 12;\n                    case CharCode.d: return 13;\n                    case CharCode.D: return 13;\n                    case CharCode.e: return 14;\n                    case CharCode.E: return 14;\n                    case CharCode.f: return 15;\n                    case CharCode.F: return 15;\n                }\n                return 0;\n            }\n        })(Format.CSS || (Format.CSS = {})));\n    })(Color.Format || (Color.Format = {})));\n})(Color || (Color = {})));\nexport { Color, HSLA, HSVA, RGBA };\n","import { Color, HSLA } from '../../../base/common/color.js';\nfunction _parseCaptureGroups(captureGroups) {\n    const values = [];\n    for (const captureGroup of captureGroups) {\n        const parsedNumber = Number(captureGroup);\n        if (parsedNumber || parsedNumber === 0 && captureGroup.replace(/\\s/g, '') !== '') {\n            values.push(parsedNumber);\n        }\n    }\n    return values;\n}\nfunction _toIColor(r, g, b, a) {\n    return {\n        red: r / 255,\n        blue: b / 255,\n        green: g / 255,\n        alpha: a\n    };\n}\nfunction _findRange(model, match) {\n    const index = match.index;\n    const length = match[0].length;\n    if (!index) {\n        return;\n    }\n    const startPosition = model.positionAt(index);\n    const range = {\n        startLineNumber: startPosition.lineNumber,\n        startColumn: startPosition.column,\n        endLineNumber: startPosition.lineNumber,\n        endColumn: startPosition.column + length\n    };\n    return range;\n}\nfunction _findHexColorInformation(range, hexValue) {\n    if (!range) {\n        return;\n    }\n    const parsedHexColor = Color.Format.CSS.parseHex(hexValue);\n    if (!parsedHexColor) {\n        return;\n    }\n    return {\n        range: range,\n        color: _toIColor(parsedHexColor.rgba.r, parsedHexColor.rgba.g, parsedHexColor.rgba.b, parsedHexColor.rgba.a)\n    };\n}\nfunction _findRGBColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = ( match.values());\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    return {\n        range: range,\n        color: _toIColor(parsedRegex[0], parsedRegex[1], parsedRegex[2], isAlpha ? parsedRegex[3] : 1)\n    };\n}\nfunction _findHSLColorInformation(range, matches, isAlpha) {\n    if (!range || matches.length !== 1) {\n        return;\n    }\n    const match = matches[0];\n    const captureGroups = ( match.values());\n    const parsedRegex = _parseCaptureGroups(captureGroups);\n    const colorEquivalent = ( new Color(( new HSLA(\n        parsedRegex[0],\n        parsedRegex[1] / 100,\n        parsedRegex[2] / 100,\n        isAlpha ? parsedRegex[3] : 1\n    ))));\n    return {\n        range: range,\n        color: _toIColor(colorEquivalent.rgba.r, colorEquivalent.rgba.g, colorEquivalent.rgba.b, colorEquivalent.rgba.a)\n    };\n}\nfunction _findMatches(model, regex) {\n    if (typeof model === 'string') {\n        return [...model.matchAll(regex)];\n    }\n    else {\n        return model.findMatches(regex);\n    }\n}\nfunction computeColors(model) {\n    const result = [];\n    const initialValidationRegex = /\\b(rgb|rgba|hsl|hsla)(\\([0-9\\s,.\\%]*\\))|(#)([A-Fa-f0-9]{3})\\b|(#)([A-Fa-f0-9]{4})\\b|(#)([A-Fa-f0-9]{6})\\b|(#)([A-Fa-f0-9]{8})\\b/gm;\n    const initialValidationMatches = _findMatches(model, initialValidationRegex);\n    if (initialValidationMatches.length > 0) {\n        for (const initialMatch of initialValidationMatches) {\n            const initialCaptureGroups = initialMatch.filter(captureGroup => captureGroup !== undefined);\n            const colorScheme = initialCaptureGroups[1];\n            const colorParameters = initialCaptureGroups[2];\n            if (!colorParameters) {\n                continue;\n            }\n            let colorInformation;\n            if (colorScheme === 'rgb') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'rgba') {\n                const regexParameters = /^\\(\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[1-9][0-9]|[0-9])\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findRGBColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === 'hsl') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), false);\n            }\n            else if (colorScheme === 'hsla') {\n                const regexParameters = /^\\(\\s*(36[0]|3[0-5][0-9]|[12][0-9][0-9]|[1-9]?[0-9])\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(100|\\d{1,2}[.]\\d*|\\d{1,2})%\\s*,\\s*(0[.][0-9]+|[.][0-9]+|[01][.]|[01])\\s*\\)$/gm;\n                colorInformation = _findHSLColorInformation(_findRange(model, initialMatch), _findMatches(colorParameters, regexParameters), true);\n            }\n            else if (colorScheme === '#') {\n                colorInformation = _findHexColorInformation(_findRange(model, initialMatch), colorScheme + colorParameters);\n            }\n            if (colorInformation) {\n                result.push(colorInformation);\n            }\n        }\n    }\n    return result;\n}\nfunction computeDefaultDocumentColors(model) {\n    if (!model || typeof model.getValue !== 'function' || typeof model.positionAt !== 'function') {\n        return [];\n    }\n    return computeColors(model);\n}\nexport { computeDefaultDocumentColors };\n","const markRegex = ( new RegExp('\\\\bMARK:\\\\s*(.*)$', 'd'));\nconst trimDashesRegex = /^-+|-+$/g;\nfunction findSectionHeaders(model, options) {\n    let headers = [];\n    if (options.findRegionSectionHeaders && options.foldingRules?.markers) {\n        const regionHeaders = collectRegionHeaders(model, options);\n        headers = headers.concat(regionHeaders);\n    }\n    if (options.findMarkSectionHeaders) {\n        const markHeaders = collectMarkHeaders(model);\n        headers = headers.concat(markHeaders);\n    }\n    return headers;\n}\nfunction collectRegionHeaders(model, options) {\n    const regionHeaders = [];\n    const endLineNumber = model.getLineCount();\n    for (let lineNumber = 1; lineNumber <= endLineNumber; lineNumber++) {\n        const lineContent = model.getLineContent(lineNumber);\n        const match = lineContent.match(options.foldingRules.markers.start);\n        if (match) {\n            const range = { startLineNumber: lineNumber, startColumn: match[0].length + 1, endLineNumber: lineNumber, endColumn: lineContent.length + 1 };\n            if (range.endColumn > range.startColumn) {\n                const sectionHeader = {\n                    range,\n                    ...getHeaderText(lineContent.substring(match[0].length)),\n                    shouldBeInComments: false\n                };\n                if (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n                    regionHeaders.push(sectionHeader);\n                }\n            }\n        }\n    }\n    return regionHeaders;\n}\nfunction collectMarkHeaders(model) {\n    const markHeaders = [];\n    const endLineNumber = model.getLineCount();\n    for (let lineNumber = 1; lineNumber <= endLineNumber; lineNumber++) {\n        const lineContent = model.getLineContent(lineNumber);\n        addMarkHeaderIfFound(lineContent, lineNumber, markHeaders);\n    }\n    return markHeaders;\n}\nfunction addMarkHeaderIfFound(lineContent, lineNumber, sectionHeaders) {\n    markRegex.lastIndex = 0;\n    const match = markRegex.exec(lineContent);\n    if (match) {\n        const column = match.indices[1][0] + 1;\n        const endColumn = match.indices[1][1] + 1;\n        const range = { startLineNumber: lineNumber, startColumn: column, endLineNumber: lineNumber, endColumn: endColumn };\n        if (range.endColumn > range.startColumn) {\n            const sectionHeader = {\n                range,\n                ...getHeaderText(match[1]),\n                shouldBeInComments: true\n            };\n            if (sectionHeader.text || sectionHeader.hasSeparatorLine) {\n                sectionHeaders.push(sectionHeader);\n            }\n        }\n    }\n}\nfunction getHeaderText(text) {\n    text = text.trim();\n    const hasSeparatorLine = text.startsWith('-');\n    text = text.replace(trimDashesRegex, '');\n    return { text, hasSeparatorLine };\n}\nexport { findSectionHeaders };\n","import { stringDiff } from '../../../base/common/diff/diff.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { Position } from '../core/position.js';\nimport { Range } from '../core/range.js';\nimport { MirrorTextModel } from '../model/mirrorTextModel.js';\nimport { getWordAtText, ensureValidWordDefinition } from '../core/wordHelper.js';\nimport { computeLinks } from '../languages/linkComputer.js';\nimport { BasicInplaceReplace } from '../languages/supports/inplaceReplaceSupport.js';\nimport { createMonacoBaseAPI } from './editorBaseApi.js';\nimport { StopWatch } from '../../../base/common/stopwatch.js';\nimport { UnicodeTextModelHighlighter } from './unicodeTextModelHighlighter.js';\nimport { DiffComputer } from '../diff/legacyLinesDiffComputer.js';\nimport { linesDiffComputers } from '../diff/linesDiffComputers.js';\nimport { createProxyObject, getAllMethodNames } from '../../../base/common/objects.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { computeDefaultDocumentColors } from '../languages/defaultDocumentColorsComputer.js';\nimport { findSectionHeaders } from './findSectionHeaders.js';\nclass MirrorModel extends MirrorTextModel {\n    get uri() {\n        return this._uri;\n    }\n    get eol() {\n        return this._eol;\n    }\n    getValue() {\n        return this.getText();\n    }\n    findMatches(regex) {\n        const matches = [];\n        for (let i = 0; i < this._lines.length; i++) {\n            const line = this._lines[i];\n            const offsetToAdd = this.offsetAt(( new Position(i + 1, 1)));\n            const iteratorOverMatches = line.matchAll(regex);\n            for (const match of iteratorOverMatches) {\n                if (match.index || match.index === 0) {\n                    match.index = match.index + offsetToAdd;\n                }\n                matches.push(match);\n            }\n        }\n        return matches;\n    }\n    getLinesContent() {\n        return this._lines.slice(0);\n    }\n    getLineCount() {\n        return this._lines.length;\n    }\n    getLineContent(lineNumber) {\n        return this._lines[lineNumber - 1];\n    }\n    getWordAtPosition(position, wordDefinition) {\n        const wordAtText = getWordAtText(position.column, ensureValidWordDefinition(wordDefinition), this._lines[position.lineNumber - 1], 0);\n        if (wordAtText) {\n            return ( new Range(\n                position.lineNumber,\n                wordAtText.startColumn,\n                position.lineNumber,\n                wordAtText.endColumn\n            ));\n        }\n        return null;\n    }\n    getWordUntilPosition(position, wordDefinition) {\n        const wordAtPosition = this.getWordAtPosition(position, wordDefinition);\n        if (!wordAtPosition) {\n            return {\n                word: '',\n                startColumn: position.column,\n                endColumn: position.column\n            };\n        }\n        return {\n            word: this._lines[position.lineNumber - 1].substring(wordAtPosition.startColumn - 1, position.column - 1),\n            startColumn: wordAtPosition.startColumn,\n            endColumn: position.column\n        };\n    }\n    words(wordDefinition) {\n        const lines = this._lines;\n        const wordenize = this._wordenize.bind(this);\n        let lineNumber = 0;\n        let lineText = '';\n        let wordRangesIdx = 0;\n        let wordRanges = [];\n        return {\n            *[Symbol.iterator]() {\n                while (true) {\n                    if (wordRangesIdx < wordRanges.length) {\n                        const value = lineText.substring(wordRanges[wordRangesIdx].start, wordRanges[wordRangesIdx].end);\n                        wordRangesIdx += 1;\n                        yield value;\n                    }\n                    else {\n                        if (lineNumber < lines.length) {\n                            lineText = lines[lineNumber];\n                            wordRanges = wordenize(lineText, wordDefinition);\n                            wordRangesIdx = 0;\n                            lineNumber += 1;\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n        };\n    }\n    getLineWords(lineNumber, wordDefinition) {\n        const content = this._lines[lineNumber - 1];\n        const ranges = this._wordenize(content, wordDefinition);\n        const words = [];\n        for (const range of ranges) {\n            words.push({\n                word: content.substring(range.start, range.end),\n                startColumn: range.start + 1,\n                endColumn: range.end + 1\n            });\n        }\n        return words;\n    }\n    _wordenize(content, wordDefinition) {\n        const result = [];\n        let match;\n        wordDefinition.lastIndex = 0;\n        while (match = wordDefinition.exec(content)) {\n            if (match[0].length === 0) {\n                break;\n            }\n            result.push({ start: match.index, end: match.index + match[0].length });\n        }\n        return result;\n    }\n    getValueInRange(range) {\n        range = this._validateRange(range);\n        if (range.startLineNumber === range.endLineNumber) {\n            return this._lines[range.startLineNumber - 1].substring(range.startColumn - 1, range.endColumn - 1);\n        }\n        const lineEnding = this._eol;\n        const startLineIndex = range.startLineNumber - 1;\n        const endLineIndex = range.endLineNumber - 1;\n        const resultLines = [];\n        resultLines.push(this._lines[startLineIndex].substring(range.startColumn - 1));\n        for (let i = startLineIndex + 1; i < endLineIndex; i++) {\n            resultLines.push(this._lines[i]);\n        }\n        resultLines.push(this._lines[endLineIndex].substring(0, range.endColumn - 1));\n        return resultLines.join(lineEnding);\n    }\n    offsetAt(position) {\n        position = this._validatePosition(position);\n        this._ensureLineStarts();\n        return this._lineStarts.getPrefixSum(position.lineNumber - 2) + (position.column - 1);\n    }\n    positionAt(offset) {\n        offset = Math.floor(offset);\n        offset = Math.max(0, offset);\n        this._ensureLineStarts();\n        const out = this._lineStarts.getIndexOf(offset);\n        const lineLength = this._lines[out.index].length;\n        return {\n            lineNumber: 1 + out.index,\n            column: 1 + Math.min(out.remainder, lineLength)\n        };\n    }\n    _validateRange(range) {\n        const start = this._validatePosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n        const end = this._validatePosition({ lineNumber: range.endLineNumber, column: range.endColumn });\n        if (start.lineNumber !== range.startLineNumber\n            || start.column !== range.startColumn\n            || end.lineNumber !== range.endLineNumber\n            || end.column !== range.endColumn) {\n            return {\n                startLineNumber: start.lineNumber,\n                startColumn: start.column,\n                endLineNumber: end.lineNumber,\n                endColumn: end.column\n            };\n        }\n        return range;\n    }\n    _validatePosition(position) {\n        if (!Position.isIPosition(position)) {\n            throw ( new Error('bad position'));\n        }\n        let { lineNumber, column } = position;\n        let hasChanged = false;\n        if (lineNumber < 1) {\n            lineNumber = 1;\n            column = 1;\n            hasChanged = true;\n        }\n        else if (lineNumber > this._lines.length) {\n            lineNumber = this._lines.length;\n            column = this._lines[lineNumber - 1].length + 1;\n            hasChanged = true;\n        }\n        else {\n            const maxCharacter = this._lines[lineNumber - 1].length + 1;\n            if (column < 1) {\n                column = 1;\n                hasChanged = true;\n            }\n            else if (column > maxCharacter) {\n                column = maxCharacter;\n                hasChanged = true;\n            }\n        }\n        if (!hasChanged) {\n            return position;\n        }\n        else {\n            return { lineNumber, column };\n        }\n    }\n}\nclass EditorSimpleWorker {\n    constructor(host, foreignModuleFactory) {\n        this._host = host;\n        this._models = Object.create(null);\n        this._foreignModuleFactory = foreignModuleFactory;\n        this._foreignModule = null;\n    }\n    dispose() {\n        this._models = Object.create(null);\n    }\n    _getModel(uri) {\n        return this._models[uri];\n    }\n    _getModels() {\n        const all = [];\n        ( Object.keys(this._models)).forEach((key) => all.push(this._models[key]));\n        return all;\n    }\n    acceptNewModel(data) {\n        this._models[data.url] = ( new MirrorModel(( URI.parse(data.url)), data.lines, data.EOL, data.versionId));\n    }\n    acceptModelChanged(strURL, e) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        const model = this._models[strURL];\n        model.onEvents(e);\n    }\n    acceptRemovedModel(strURL) {\n        if (!this._models[strURL]) {\n            return;\n        }\n        delete this._models[strURL];\n    }\n    async computeUnicodeHighlights(url, options, range) {\n        const model = this._getModel(url);\n        if (!model) {\n            return { ranges: [], hasMore: false, ambiguousCharacterCount: 0, invisibleCharacterCount: 0, nonBasicAsciiCharacterCount: 0 };\n        }\n        return UnicodeTextModelHighlighter.computeUnicodeHighlights(model, options, range);\n    }\n    async findSectionHeaders(url, options) {\n        const model = this._getModel(url);\n        if (!model) {\n            return [];\n        }\n        return findSectionHeaders(model, options);\n    }\n    async computeDiff(originalUrl, modifiedUrl, options, algorithm) {\n        const original = this._getModel(originalUrl);\n        const modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        const result = EditorSimpleWorker.computeDiff(original, modified, options, algorithm);\n        return result;\n    }\n    static computeDiff(originalTextModel, modifiedTextModel, options, algorithm) {\n        const diffAlgorithm = algorithm === 'advanced' ? linesDiffComputers.getDefault() : linesDiffComputers.getLegacy();\n        const originalLines = originalTextModel.getLinesContent();\n        const modifiedLines = modifiedTextModel.getLinesContent();\n        const result = diffAlgorithm.computeDiff(originalLines, modifiedLines, options);\n        const identical = (result.changes.length > 0 ? false : this._modelsAreIdentical(originalTextModel, modifiedTextModel));\n        function getLineChanges(changes) {\n            return ( changes.map(\n                m => ([m.original.startLineNumber, m.original.endLineNumberExclusive, m.modified.startLineNumber, m.modified.endLineNumberExclusive, m.innerChanges?.map(m => [\n                        m.originalRange.startLineNumber,\n                        m.originalRange.startColumn,\n                        m.originalRange.endLineNumber,\n                        m.originalRange.endColumn,\n                        m.modifiedRange.startLineNumber,\n                        m.modifiedRange.startColumn,\n                        m.modifiedRange.endLineNumber,\n                        m.modifiedRange.endColumn,\n                    ])])\n            ));\n        }\n        return {\n            identical,\n            quitEarly: result.hitTimeout,\n            changes: getLineChanges(result.changes),\n            moves: ( result.moves.map(m => ([\n                m.lineRangeMapping.original.startLineNumber,\n                m.lineRangeMapping.original.endLineNumberExclusive,\n                m.lineRangeMapping.modified.startLineNumber,\n                m.lineRangeMapping.modified.endLineNumberExclusive,\n                getLineChanges(m.changes)\n            ]))),\n        };\n    }\n    static _modelsAreIdentical(original, modified) {\n        const originalLineCount = original.getLineCount();\n        const modifiedLineCount = modified.getLineCount();\n        if (originalLineCount !== modifiedLineCount) {\n            return false;\n        }\n        for (let line = 1; line <= originalLineCount; line++) {\n            const originalLine = original.getLineContent(line);\n            const modifiedLine = modified.getLineContent(line);\n            if (originalLine !== modifiedLine) {\n                return false;\n            }\n        }\n        return true;\n    }\n    async computeDirtyDiff(originalUrl, modifiedUrl, ignoreTrimWhitespace) {\n        const original = this._getModel(originalUrl);\n        const modified = this._getModel(modifiedUrl);\n        if (!original || !modified) {\n            return null;\n        }\n        const originalLines = original.getLinesContent();\n        const modifiedLines = modified.getLinesContent();\n        const diffComputer = ( new DiffComputer(originalLines, modifiedLines, {\n            shouldComputeCharChanges: false,\n            shouldPostProcessCharChanges: false,\n            shouldIgnoreTrimWhitespace: ignoreTrimWhitespace,\n            shouldMakePrettyDiff: true,\n            maxComputationTime: 1000\n        }));\n        return diffComputer.computeDiff().changes;\n    }\n    static { this._diffLimit = 100000; }\n    async computeMoreMinimalEdits(modelUrl, edits, pretty) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return edits;\n        }\n        const result = [];\n        let lastEol = undefined;\n        edits = edits.slice(0).sort((a, b) => {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            const aRng = a.range ? 0 : 1;\n            const bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        let writeIndex = 0;\n        for (let readIndex = 1; readIndex < edits.length; readIndex++) {\n            if (Range.getEndPosition(edits[writeIndex].range).equals(Range.getStartPosition(edits[readIndex].range))) {\n                edits[writeIndex].range = Range.fromPositions(Range.getStartPosition(edits[writeIndex].range), Range.getEndPosition(edits[readIndex].range));\n                edits[writeIndex].text += edits[readIndex].text;\n            }\n            else {\n                writeIndex++;\n                edits[writeIndex] = edits[readIndex];\n            }\n        }\n        edits.length = writeIndex + 1;\n        for (let { range, text, eol } of edits) {\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                continue;\n            }\n            const original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                continue;\n            }\n            if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                result.push({ range, text });\n                continue;\n            }\n            const changes = stringDiff(original, text, pretty);\n            const editOffset = model.offsetAt(Range.lift(range).getStartPosition());\n            for (const change of changes) {\n                const start = model.positionAt(editOffset + change.originalStart);\n                const end = model.positionAt(editOffset + change.originalStart + change.originalLength);\n                const newEdit = {\n                    text: text.substr(change.modifiedStart, change.modifiedLength),\n                    range: { startLineNumber: start.lineNumber, startColumn: start.column, endLineNumber: end.lineNumber, endColumn: end.column }\n                };\n                if (model.getValueInRange(newEdit.range) !== newEdit.text) {\n                    result.push(newEdit);\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return result;\n    }\n    computeHumanReadableDiff(modelUrl, edits, options) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return edits;\n        }\n        const result = [];\n        let lastEol = undefined;\n        edits = edits.slice(0).sort((a, b) => {\n            if (a.range && b.range) {\n                return Range.compareRangesUsingStarts(a.range, b.range);\n            }\n            const aRng = a.range ? 0 : 1;\n            const bRng = b.range ? 0 : 1;\n            return aRng - bRng;\n        });\n        for (let { range, text, eol } of edits) {\n            if (typeof eol === 'number') {\n                lastEol = eol;\n            }\n            if (Range.isEmpty(range) && !text) {\n                continue;\n            }\n            const original = model.getValueInRange(range);\n            text = text.replace(/\\r\\n|\\n|\\r/g, model.eol);\n            if (original === text) {\n                continue;\n            }\n            if (Math.max(text.length, original.length) > EditorSimpleWorker._diffLimit) {\n                result.push({ range, text });\n                continue;\n            }\n            const originalLines = original.split(/\\r\\n|\\n|\\r/);\n            const modifiedLines = text.split(/\\r\\n|\\n|\\r/);\n            const diff = linesDiffComputers.getDefault().computeDiff(originalLines, modifiedLines, options);\n            const start = Range.lift(range).getStartPosition();\n            function addPositions(pos1, pos2) {\n                return ( new Position(\n                    pos1.lineNumber + pos2.lineNumber - 1,\n                    pos2.lineNumber === 1 ? pos1.column + pos2.column - 1 : pos2.column\n                ));\n            }\n            function getText(lines, range) {\n                const result = [];\n                for (let i = range.startLineNumber; i <= range.endLineNumber; i++) {\n                    const line = lines[i - 1];\n                    if (i === range.startLineNumber && i === range.endLineNumber) {\n                        result.push(line.substring(range.startColumn - 1, range.endColumn - 1));\n                    }\n                    else if (i === range.startLineNumber) {\n                        result.push(line.substring(range.startColumn - 1));\n                    }\n                    else if (i === range.endLineNumber) {\n                        result.push(line.substring(0, range.endColumn - 1));\n                    }\n                    else {\n                        result.push(line);\n                    }\n                }\n                return result;\n            }\n            for (const c of diff.changes) {\n                if (c.innerChanges) {\n                    for (const x of c.innerChanges) {\n                        result.push({\n                            range: Range.fromPositions(addPositions(start, x.originalRange.getStartPosition()), addPositions(start, x.originalRange.getEndPosition())),\n                            text: getText(modifiedLines, x.modifiedRange).join(model.eol)\n                        });\n                    }\n                }\n                else {\n                    throw ( new BugIndicatingError('The experimental diff algorithm always produces inner changes'));\n                }\n            }\n        }\n        if (typeof lastEol === 'number') {\n            result.push({ eol: lastEol, text: '', range: { startLineNumber: 0, startColumn: 0, endLineNumber: 0, endColumn: 0 } });\n        }\n        return result;\n    }\n    async computeLinks(modelUrl) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return computeLinks(model);\n    }\n    async computeDefaultDocumentColors(modelUrl) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        return computeDefaultDocumentColors(model);\n    }\n    static { this._suggestionsLimit = 10000; }\n    async textualSuggest(modelUrls, leadingWord, wordDef, wordDefFlags) {\n        const sw = ( new StopWatch());\n        const wordDefRegExp = ( new RegExp(wordDef, wordDefFlags));\n        const seen = ( new Set());\n        outer: for (const url of modelUrls) {\n            const model = this._getModel(url);\n            if (!model) {\n                continue;\n            }\n            for (const word of model.words(wordDefRegExp)) {\n                if (word === leadingWord || !isNaN(Number(word))) {\n                    continue;\n                }\n                seen.add(word);\n                if (seen.size > EditorSimpleWorker._suggestionsLimit) {\n                    break outer;\n                }\n            }\n        }\n        return { words: Array.from(seen), duration: sw.elapsed() };\n    }\n    async computeWordRanges(modelUrl, range, wordDef, wordDefFlags) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return Object.create(null);\n        }\n        const wordDefRegExp = ( new RegExp(wordDef, wordDefFlags));\n        const result = Object.create(null);\n        for (let line = range.startLineNumber; line < range.endLineNumber; line++) {\n            const words = model.getLineWords(line, wordDefRegExp);\n            for (const word of words) {\n                if (!isNaN(Number(word.word))) {\n                    continue;\n                }\n                let array = result[word.word];\n                if (!array) {\n                    array = [];\n                    result[word.word] = array;\n                }\n                array.push({\n                    startLineNumber: line,\n                    startColumn: word.startColumn,\n                    endLineNumber: line,\n                    endColumn: word.endColumn\n                });\n            }\n        }\n        return result;\n    }\n    async navigateValueSet(modelUrl, range, up, wordDef, wordDefFlags) {\n        const model = this._getModel(modelUrl);\n        if (!model) {\n            return null;\n        }\n        const wordDefRegExp = ( new RegExp(wordDef, wordDefFlags));\n        if (range.startColumn === range.endColumn) {\n            range = {\n                startLineNumber: range.startLineNumber,\n                startColumn: range.startColumn,\n                endLineNumber: range.endLineNumber,\n                endColumn: range.endColumn + 1\n            };\n        }\n        const selectionText = model.getValueInRange(range);\n        const wordRange = model.getWordAtPosition({ lineNumber: range.startLineNumber, column: range.startColumn }, wordDefRegExp);\n        if (!wordRange) {\n            return null;\n        }\n        const word = model.getValueInRange(wordRange);\n        const result = BasicInplaceReplace.INSTANCE.navigateValueSet(range, selectionText, wordRange, word, up);\n        return result;\n    }\n    loadForeignModule(moduleId, createData, foreignHostMethods) {\n        const proxyMethodRequest = (method, args) => {\n            return this._host.fhr(method, args);\n        };\n        const foreignHost = createProxyObject(foreignHostMethods, proxyMethodRequest);\n        const ctx = {\n            host: foreignHost,\n            getMirrorModels: () => {\n                return this._getModels();\n            }\n        };\n        if (this._foreignModuleFactory) {\n            this._foreignModule = this._foreignModuleFactory(ctx, createData);\n            return Promise.resolve(getAllMethodNames(this._foreignModule));\n        }\n        return Promise.reject(( new Error(`Unexpected usage`)));\n    }\n    fmr(method, args) {\n        if (!this._foreignModule || typeof this._foreignModule[method] !== 'function') {\n            return Promise.reject(( new Error('Missing requestHandler or method: ' + method)));\n        }\n        try {\n            return Promise.resolve(this._foreignModule[method].apply(this._foreignModule, args));\n        }\n        catch (e) {\n            return Promise.reject(e);\n        }\n    }\n}\nif (typeof importScripts === 'function') {\n    globalThis.monaco = createMonacoBaseAPI();\n}\nexport { EditorSimpleWorker };\n","import { SimpleWorkerServer } from '../base/common/worker/simpleWorker.js';\nimport { EditorSimpleWorker } from './common/services/editorSimpleWorker.js';\nlet initialized = false;\nfunction initialize(foreignModule) {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    const simpleWorker = ( new SimpleWorkerServer((msg) => {\n        globalThis.postMessage(msg);\n    }, (host) => ( new EditorSimpleWorker(host, foreignModule))));\n    globalThis.onmessage = (e) => {\n        simpleWorker.onmessage(e.data);\n    };\n}\nglobalThis.onmessage = (e) => {\n    if (!initialized) {\n        initialize(null);\n    }\n};\nexport { initialize };\n","import { findFirstIdxMonotonousOrArrLen } from './arraysFind.js';\nfunction tail(array, n = 0) {\n    return array[array.length - (1 + n)];\n}\nfunction tail2(arr) {\n    if (arr.length === 0) {\n        throw ( new Error('Invalid tail call'));\n    }\n    return [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\nfunction equals(one, other, itemEquals = (a, b) => a === b) {\n    if (one === other) {\n        return true;\n    }\n    if (!one || !other) {\n        return false;\n    }\n    if (one.length !== other.length) {\n        return false;\n    }\n    for (let i = 0, len = one.length; i < len; i++) {\n        if (!itemEquals(one[i], other[i])) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction removeFastWithoutKeepingOrder(array, index) {\n    const last = array.length - 1;\n    if (index < last) {\n        array[index] = array[last];\n    }\n    array.pop();\n}\nfunction binarySearch(array, key, comparator) {\n    return binarySearch2(array.length, i => comparator(array[i], key));\n}\nfunction binarySearch2(length, compareToKey) {\n    let low = 0, high = length - 1;\n    while (low <= high) {\n        const mid = ((low + high) / 2) | 0;\n        const comp = compareToKey(mid);\n        if (comp < 0) {\n            low = mid + 1;\n        }\n        else if (comp > 0) {\n            high = mid - 1;\n        }\n        else {\n            return mid;\n        }\n    }\n    return -(low + 1);\n}\nfunction quickSelect(nth, data, compare) {\n    nth = nth | 0;\n    if (nth >= data.length) {\n        throw ( new TypeError('invalid index'));\n    }\n    const pivotValue = data[Math.floor(data.length * Math.random())];\n    const lower = [];\n    const higher = [];\n    const pivots = [];\n    for (const value of data) {\n        const val = compare(value, pivotValue);\n        if (val < 0) {\n            lower.push(value);\n        }\n        else if (val > 0) {\n            higher.push(value);\n        }\n        else {\n            pivots.push(value);\n        }\n    }\n    if (nth < lower.length) {\n        return quickSelect(nth, lower, compare);\n    }\n    else if (nth < lower.length + pivots.length) {\n        return pivots[0];\n    }\n    else {\n        return quickSelect(nth - (lower.length + pivots.length), higher, compare);\n    }\n}\nfunction groupBy(data, compare) {\n    const result = [];\n    let currentGroup = undefined;\n    for (const element of data.slice(0).sort(compare)) {\n        if (!currentGroup || compare(currentGroup[0], element) !== 0) {\n            currentGroup = [element];\n            result.push(currentGroup);\n        }\n        else {\n            currentGroup.push(element);\n        }\n    }\n    return result;\n}\nfunction* groupAdjacentBy(items, shouldBeGrouped) {\n    let currentGroup;\n    let last;\n    for (const item of items) {\n        if (last !== undefined && shouldBeGrouped(last, item)) {\n            currentGroup.push(item);\n        }\n        else {\n            if (currentGroup) {\n                yield currentGroup;\n            }\n            currentGroup = [item];\n        }\n        last = item;\n    }\n    if (currentGroup) {\n        yield currentGroup;\n    }\n}\nfunction forEachAdjacent(arr, f) {\n    for (let i = 0; i <= arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], i === arr.length ? undefined : arr[i]);\n    }\n}\nfunction forEachWithNeighbors(arr, f) {\n    for (let i = 0; i < arr.length; i++) {\n        f(i === 0 ? undefined : arr[i - 1], arr[i], i + 1 === arr.length ? undefined : arr[i + 1]);\n    }\n}\nfunction sortedDiff(before, after, compare) {\n    const result = [];\n    function pushSplice(start, deleteCount, toInsert) {\n        if (deleteCount === 0 && toInsert.length === 0) {\n            return;\n        }\n        const latest = result[result.length - 1];\n        if (latest && latest.start + latest.deleteCount === start) {\n            latest.deleteCount += deleteCount;\n            latest.toInsert.push(...toInsert);\n        }\n        else {\n            result.push({ start, deleteCount, toInsert });\n        }\n    }\n    let beforeIdx = 0;\n    let afterIdx = 0;\n    while (true) {\n        if (beforeIdx === before.length) {\n            pushSplice(beforeIdx, 0, after.slice(afterIdx));\n            break;\n        }\n        if (afterIdx === after.length) {\n            pushSplice(beforeIdx, before.length - beforeIdx, []);\n            break;\n        }\n        const beforeElement = before[beforeIdx];\n        const afterElement = after[afterIdx];\n        const n = compare(beforeElement, afterElement);\n        if (n === 0) {\n            beforeIdx += 1;\n            afterIdx += 1;\n        }\n        else if (n < 0) {\n            pushSplice(beforeIdx, 1, []);\n            beforeIdx += 1;\n        }\n        else if (n > 0) {\n            pushSplice(beforeIdx, 0, [afterElement]);\n            afterIdx += 1;\n        }\n    }\n    return result;\n}\nfunction delta(before, after, compare) {\n    const splices = sortedDiff(before, after, compare);\n    const removed = [];\n    const added = [];\n    for (const splice of splices) {\n        removed.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n        added.push(...splice.toInsert);\n    }\n    return { removed, added };\n}\nfunction top(array, compare, n) {\n    if (n === 0) {\n        return [];\n    }\n    const result = array.slice(0, n).sort(compare);\n    topStep(array, compare, result, n, array.length);\n    return result;\n}\nfunction topStep(array, compare, result, i, m) {\n    for (const n = result.length; i < m; i++) {\n        const element = array[i];\n        if (compare(element, result[n - 1]) < 0) {\n            result.pop();\n            const j = findFirstIdxMonotonousOrArrLen(result, e => compare(element, e) < 0);\n            result.splice(j, 0, element);\n        }\n    }\n}\nfunction coalesce(array) {\n    return array.filter((e) => !!e);\n}\nfunction coalesceInPlace(array) {\n    let to = 0;\n    for (let i = 0; i < array.length; i++) {\n        if (!!array[i]) {\n            array[to] = array[i];\n            to += 1;\n        }\n    }\n    array.length = to;\n}\nfunction move(array, from, to) {\n    array.splice(to, 0, array.splice(from, 1)[0]);\n}\nfunction isFalsyOrEmpty(obj) {\n    return !Array.isArray(obj) || obj.length === 0;\n}\nfunction isNonEmptyArray(obj) {\n    return Array.isArray(obj) && obj.length > 0;\n}\nfunction distinct(array, keyFn = value => value) {\n    const seen = ( new Set());\n    return array.filter(element => {\n        const key = keyFn(element);\n        if (( seen.has(key))) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    });\n}\nfunction uniqueFilter(keyFn) {\n    const seen = ( new Set());\n    return element => {\n        const key = keyFn(element);\n        if (( seen.has(key))) {\n            return false;\n        }\n        seen.add(key);\n        return true;\n    };\n}\nfunction firstOrDefault(array, notFoundValue) {\n    return array.length > 0 ? array[0] : notFoundValue;\n}\nfunction lastOrDefault(array, notFoundValue) {\n    return array.length > 0 ? array[array.length - 1] : notFoundValue;\n}\nfunction commonPrefixLength(one, other, equals = (a, b) => a === b) {\n    let result = 0;\n    for (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n        result++;\n    }\n    return result;\n}\nfunction range(arg, to) {\n    let from = typeof to === 'number' ? arg : 0;\n    if (typeof to === 'number') {\n        from = arg;\n    }\n    else {\n        from = 0;\n        to = arg;\n    }\n    const result = [];\n    if (from <= to) {\n        for (let i = from; i < to; i++) {\n            result.push(i);\n        }\n    }\n    else {\n        for (let i = from; i > to; i--) {\n            result.push(i);\n        }\n    }\n    return result;\n}\nfunction index(array, indexer, mapper) {\n    return array.reduce((r, t) => {\n        r[indexer(t)] = mapper ? mapper(t) : t;\n        return r;\n    }, Object.create(null));\n}\nfunction insert(array, element) {\n    array.push(element);\n    return () => remove(array, element);\n}\nfunction remove(array, element) {\n    const index = array.indexOf(element);\n    if (index > -1) {\n        array.splice(index, 1);\n        return element;\n    }\n    return undefined;\n}\nfunction arrayInsert(target, insertIndex, insertArr) {\n    const before = target.slice(0, insertIndex);\n    const after = target.slice(insertIndex);\n    return before.concat(insertArr, after);\n}\nfunction shuffle(array, _seed) {\n    let rand;\n    if (typeof _seed === 'number') {\n        let seed = _seed;\n        rand = () => {\n            const x = Math.sin(seed++) * 179426549;\n            return x - Math.floor(x);\n        };\n    }\n    else {\n        rand = Math.random;\n    }\n    for (let i = array.length - 1; i > 0; i -= 1) {\n        const j = Math.floor(rand() * (i + 1));\n        const temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n}\nfunction pushToStart(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.unshift(value);\n    }\n}\nfunction pushToEnd(arr, value) {\n    const index = arr.indexOf(value);\n    if (index > -1) {\n        arr.splice(index, 1);\n        arr.push(value);\n    }\n}\nfunction pushMany(arr, items) {\n    for (const item of items) {\n        arr.push(item);\n    }\n}\nfunction mapArrayOrNot(items, fn) {\n    return Array.isArray(items) ?\n        ( items.map(fn)) :\n        fn(items);\n}\nfunction asArray(x) {\n    return Array.isArray(x) ? x : [x];\n}\nfunction insertInto(array, start, newItems) {\n    const startIdx = getActualStartIndex(array, start);\n    const originalLength = array.length;\n    const newItemsLength = newItems.length;\n    array.length = originalLength + newItemsLength;\n    for (let i = originalLength - 1; i >= startIdx; i--) {\n        array[i + newItemsLength] = array[i];\n    }\n    for (let i = 0; i < newItemsLength; i++) {\n        array[i + startIdx] = newItems[i];\n    }\n}\nfunction splice(array, start, deleteCount, newItems) {\n    const index = getActualStartIndex(array, start);\n    let result = array.splice(index, deleteCount);\n    if (result === undefined) {\n        result = [];\n    }\n    insertInto(array, index, newItems);\n    return result;\n}\nfunction getActualStartIndex(array, start) {\n    return start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\nvar CompareResult;\n( (function(CompareResult) {\n    function isLessThan(result) {\n        return result < 0;\n    }\n    CompareResult.isLessThan = isLessThan;\n    function isLessThanOrEqual(result) {\n        return result <= 0;\n    }\n    CompareResult.isLessThanOrEqual = isLessThanOrEqual;\n    function isGreaterThan(result) {\n        return result > 0;\n    }\n    CompareResult.isGreaterThan = isGreaterThan;\n    function isNeitherLessOrGreaterThan(result) {\n        return result === 0;\n    }\n    CompareResult.isNeitherLessOrGreaterThan = isNeitherLessOrGreaterThan;\n    CompareResult.greaterThan = 1;\n    CompareResult.lessThan = -1;\n    CompareResult.neitherLessOrGreaterThan = 0;\n})(CompareResult || (CompareResult = {})));\nfunction compareBy(selector, comparator) {\n    return (a, b) => comparator(selector(a), selector(b));\n}\nfunction tieBreakComparators(...comparators) {\n    return (item1, item2) => {\n        for (const comparator of comparators) {\n            const result = comparator(item1, item2);\n            if (!CompareResult.isNeitherLessOrGreaterThan(result)) {\n                return result;\n            }\n        }\n        return CompareResult.neitherLessOrGreaterThan;\n    };\n}\nconst numberComparator = (a, b) => a - b;\nconst booleanComparator = (a, b) => numberComparator(a ? 1 : 0, b ? 1 : 0);\nfunction reverseOrder(comparator) {\n    return (a, b) => -comparator(a, b);\n}\nclass ArrayQueue {\n    constructor(items) {\n        this.items = items;\n        this.firstIdx = 0;\n        this.lastIdx = this.items.length - 1;\n    }\n    get length() {\n        return this.lastIdx - this.firstIdx + 1;\n    }\n    takeWhile(predicate) {\n        let startIdx = this.firstIdx;\n        while (startIdx < this.items.length && predicate(this.items[startIdx])) {\n            startIdx++;\n        }\n        const result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n        this.firstIdx = startIdx;\n        return result;\n    }\n    takeFromEndWhile(predicate) {\n        let endIdx = this.lastIdx;\n        while (endIdx >= 0 && predicate(this.items[endIdx])) {\n            endIdx--;\n        }\n        const result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n        this.lastIdx = endIdx;\n        return result;\n    }\n    peek() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.firstIdx];\n    }\n    peekLast() {\n        if (this.length === 0) {\n            return undefined;\n        }\n        return this.items[this.lastIdx];\n    }\n    dequeue() {\n        const result = this.items[this.firstIdx];\n        this.firstIdx++;\n        return result;\n    }\n    removeLast() {\n        const result = this.items[this.lastIdx];\n        this.lastIdx--;\n        return result;\n    }\n    takeCount(count) {\n        const result = this.items.slice(this.firstIdx, this.firstIdx + count);\n        this.firstIdx += count;\n        return result;\n    }\n}\nclass CallbackIterable {\n    static { this.empty = ( new CallbackIterable(_callback => { })); }\n    constructor(\n    iterate) {\n        this.iterate = iterate;\n    }\n    forEach(handler) {\n        this.iterate(item => { handler(item); return true; });\n    }\n    toArray() {\n        const result = [];\n        this.iterate(item => { result.push(item); return true; });\n        return result;\n    }\n    filter(predicate) {\n        return ( new CallbackIterable(cb => this.iterate(item => predicate(item) ? cb(item) : true)));\n    }\n    map(mapFn) {\n        return ( new CallbackIterable(cb => this.iterate(item => cb(mapFn(item)))));\n    }\n    some(predicate) {\n        let result = false;\n        this.iterate(item => { result = predicate(item); return !result; });\n        return result;\n    }\n    findFirst(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n                return false;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLast(predicate) {\n        let result;\n        this.iterate(item => {\n            if (predicate(item)) {\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n    findLastMaxBy(comparator) {\n        let result;\n        let first = true;\n        this.iterate(item => {\n            if (first || CompareResult.isGreaterThan(comparator(item, result))) {\n                first = false;\n                result = item;\n            }\n            return true;\n        });\n        return result;\n    }\n}\nclass Permutation {\n    constructor(_indexMap) {\n        this._indexMap = _indexMap;\n    }\n    static createSortPermutation(arr, compareFn) {\n        const sortIndices = Array.from(( arr.keys())).sort((index1, index2) => compareFn(arr[index1], arr[index2]));\n        return ( new Permutation(sortIndices));\n    }\n    apply(arr) {\n        return ( arr.map((_, index) => arr[this._indexMap[index]]));\n    }\n    inverse() {\n        const inverseIndexMap = this._indexMap.slice();\n        for (let i = 0; i < this._indexMap.length; i++) {\n            inverseIndexMap[this._indexMap[i]] = i;\n        }\n        return ( new Permutation(inverseIndexMap));\n    }\n}\nexport { ArrayQueue, CallbackIterable, CompareResult, Permutation, arrayInsert, asArray, binarySearch, binarySearch2, booleanComparator, coalesce, coalesceInPlace, commonPrefixLength, compareBy, delta, distinct, equals, firstOrDefault, forEachAdjacent, forEachWithNeighbors, groupAdjacentBy, groupBy, index, insert, insertInto, isFalsyOrEmpty, isNonEmptyArray, lastOrDefault, mapArrayOrNot, move, numberComparator, pushMany, pushToEnd, pushToStart, quickSelect, range, remove, removeFastWithoutKeepingOrder, reverseOrder, shuffle, sortedDiff, splice, tail, tail2, tieBreakComparators, top, uniqueFilter };\n","function findLast(array, predicate) {\n    const idx = findLastIdx(array, predicate);\n    if (idx === -1) {\n        return undefined;\n    }\n    return array[idx];\n}\nfunction findLastIdx(array, predicate, fromIndex = array.length - 1) {\n    for (let i = fromIndex; i >= 0; i--) {\n        const element = array[i];\n        if (predicate(element)) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction findLastMonotonous(array, predicate) {\n    const idx = findLastIdxMonotonous(array, predicate);\n    return idx === -1 ? undefined : array[idx];\n}\nfunction findLastIdxMonotonous(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            i = k + 1;\n        }\n        else {\n            j = k;\n        }\n    }\n    return i - 1;\n}\nfunction findFirstMonotonous(array, predicate) {\n    const idx = findFirstIdxMonotonousOrArrLen(array, predicate);\n    return idx === array.length ? undefined : array[idx];\n}\nfunction findFirstIdxMonotonousOrArrLen(array, predicate, startIdx = 0, endIdxEx = array.length) {\n    let i = startIdx;\n    let j = endIdxEx;\n    while (i < j) {\n        const k = Math.floor((i + j) / 2);\n        if (predicate(array[k])) {\n            j = k;\n        }\n        else {\n            i = k + 1;\n        }\n    }\n    return i;\n}\nclass MonotonousArray {\n    static { this.assertInvariants = false; }\n    constructor(_array) {\n        this._array = _array;\n        this._findLastMonotonousLastIdx = 0;\n    }\n    findLastMonotonous(predicate) {\n        if (MonotonousArray.assertInvariants) {\n            if (this._prevFindLastPredicate) {\n                for (const item of this._array) {\n                    if (this._prevFindLastPredicate(item) && !predicate(item)) {\n                        throw ( new Error(\n                            'MonotonousArray: current predicate must be weaker than (or equal to) the previous predicate.'\n                        ));\n                    }\n                }\n            }\n            this._prevFindLastPredicate = predicate;\n        }\n        const idx = findLastIdxMonotonous(this._array, predicate, this._findLastMonotonousLastIdx);\n        this._findLastMonotonousLastIdx = idx + 1;\n        return idx === -1 ? undefined : this._array[idx];\n    }\n}\nfunction findFirstMax(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) > 0) {\n            max = item;\n        }\n    }\n    return max;\n}\nfunction findLastMax(array, comparator) {\n    if (array.length === 0) {\n        return undefined;\n    }\n    let max = array[0];\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, max) >= 0) {\n            max = item;\n        }\n    }\n    return max;\n}\nfunction findFirstMin(array, comparator) {\n    return findFirstMax(array, (a, b) => -comparator(a, b));\n}\nfunction findMaxIdx(array, comparator) {\n    if (array.length === 0) {\n        return -1;\n    }\n    let maxIdx = 0;\n    for (let i = 1; i < array.length; i++) {\n        const item = array[i];\n        if (comparator(item, array[maxIdx]) > 0) {\n            maxIdx = i;\n        }\n    }\n    return maxIdx;\n}\nfunction mapFindFirst(items, mapFn) {\n    for (const value of items) {\n        const mapped = mapFn(value);\n        if (mapped !== undefined) {\n            return mapped;\n        }\n    }\n    return undefined;\n}\nexport { MonotonousArray, findFirstIdxMonotonousOrArrLen, findFirstMax, findFirstMin, findFirstMonotonous, findLast, findLastIdx, findLastIdxMonotonous, findLastMax, findLastMonotonous, findMaxIdx, mapFindFirst };\n","import { Event, Emitter } from './event.js';\nconst shortcutEvent = ( Object.freeze(function (callback, context) {\n    const handle = setTimeout(callback.bind(context), 0);\n    return { dispose() { clearTimeout(handle); } };\n}));\nvar CancellationToken;\n( (function(CancellationToken) {\n    function isCancellationToken(thing) {\n        if (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n            return true;\n        }\n        if (thing instanceof MutableToken) {\n            return true;\n        }\n        if (!thing || typeof thing !== 'object') {\n            return false;\n        }\n        return typeof thing.isCancellationRequested === 'boolean'\n            && typeof thing.onCancellationRequested === 'function';\n    }\n    CancellationToken.isCancellationToken = isCancellationToken;\n    CancellationToken.None = ( Object.freeze({\n        isCancellationRequested: false,\n        onCancellationRequested: Event.None\n    }));\n    CancellationToken.Cancelled = ( Object.freeze({\n        isCancellationRequested: true,\n        onCancellationRequested: shortcutEvent\n    }));\n})(CancellationToken || (CancellationToken = {})));\nclass MutableToken {\n    constructor() {\n        this._isCancelled = false;\n        this._emitter = null;\n    }\n    cancel() {\n        if (!this._isCancelled) {\n            this._isCancelled = true;\n            if (this._emitter) {\n                this._emitter.fire(undefined);\n                this.dispose();\n            }\n        }\n    }\n    get isCancellationRequested() {\n        return this._isCancelled;\n    }\n    get onCancellationRequested() {\n        if (this._isCancelled) {\n            return shortcutEvent;\n        }\n        if (!this._emitter) {\n            this._emitter = ( new Emitter());\n        }\n        return this._emitter.event;\n    }\n    dispose() {\n        if (this._emitter) {\n            this._emitter.dispose();\n            this._emitter = null;\n        }\n    }\n}\nclass CancellationTokenSource {\n    constructor(parent) {\n        this._token = undefined;\n        this._parentListener = undefined;\n        this._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n    }\n    get token() {\n        if (!this._token) {\n            this._token = ( new MutableToken());\n        }\n        return this._token;\n    }\n    cancel() {\n        if (!this._token) {\n            this._token = CancellationToken.Cancelled;\n        }\n        else if (this._token instanceof MutableToken) {\n            this._token.cancel();\n        }\n    }\n    dispose(cancel = false) {\n        if (cancel) {\n            this.cancel();\n        }\n        this._parentListener?.dispose();\n        if (!this._token) {\n            this._token = CancellationToken.None;\n        }\n        else if (this._token instanceof MutableToken) {\n            this._token.dispose();\n        }\n    }\n}\nfunction cancelOnDispose(store) {\n    const source = ( new CancellationTokenSource());\n    store.add({ dispose() { source.cancel(); } });\n    return source.token;\n}\nexport { CancellationToken, CancellationTokenSource, cancelOnDispose };\n","var CharCode;\n( (function(CharCode) {\n    CharCode[CharCode[\"Null\"] = 0] = \"Null\";\n    CharCode[CharCode[\"Backspace\"] = 8] = \"Backspace\";\n    CharCode[CharCode[\"Tab\"] = 9] = \"Tab\";\n    CharCode[CharCode[\"LineFeed\"] = 10] = \"LineFeed\";\n    CharCode[CharCode[\"CarriageReturn\"] = 13] = \"CarriageReturn\";\n    CharCode[CharCode[\"Space\"] = 32] = \"Space\";\n    CharCode[CharCode[\"ExclamationMark\"] = 33] = \"ExclamationMark\";\n    CharCode[CharCode[\"DoubleQuote\"] = 34] = \"DoubleQuote\";\n    CharCode[CharCode[\"Hash\"] = 35] = \"Hash\";\n    CharCode[CharCode[\"DollarSign\"] = 36] = \"DollarSign\";\n    CharCode[CharCode[\"PercentSign\"] = 37] = \"PercentSign\";\n    CharCode[CharCode[\"Ampersand\"] = 38] = \"Ampersand\";\n    CharCode[CharCode[\"SingleQuote\"] = 39] = \"SingleQuote\";\n    CharCode[CharCode[\"OpenParen\"] = 40] = \"OpenParen\";\n    CharCode[CharCode[\"CloseParen\"] = 41] = \"CloseParen\";\n    CharCode[CharCode[\"Asterisk\"] = 42] = \"Asterisk\";\n    CharCode[CharCode[\"Plus\"] = 43] = \"Plus\";\n    CharCode[CharCode[\"Comma\"] = 44] = \"Comma\";\n    CharCode[CharCode[\"Dash\"] = 45] = \"Dash\";\n    CharCode[CharCode[\"Period\"] = 46] = \"Period\";\n    CharCode[CharCode[\"Slash\"] = 47] = \"Slash\";\n    CharCode[CharCode[\"Digit0\"] = 48] = \"Digit0\";\n    CharCode[CharCode[\"Digit1\"] = 49] = \"Digit1\";\n    CharCode[CharCode[\"Digit2\"] = 50] = \"Digit2\";\n    CharCode[CharCode[\"Digit3\"] = 51] = \"Digit3\";\n    CharCode[CharCode[\"Digit4\"] = 52] = \"Digit4\";\n    CharCode[CharCode[\"Digit5\"] = 53] = \"Digit5\";\n    CharCode[CharCode[\"Digit6\"] = 54] = \"Digit6\";\n    CharCode[CharCode[\"Digit7\"] = 55] = \"Digit7\";\n    CharCode[CharCode[\"Digit8\"] = 56] = \"Digit8\";\n    CharCode[CharCode[\"Digit9\"] = 57] = \"Digit9\";\n    CharCode[CharCode[\"Colon\"] = 58] = \"Colon\";\n    CharCode[CharCode[\"Semicolon\"] = 59] = \"Semicolon\";\n    CharCode[CharCode[\"LessThan\"] = 60] = \"LessThan\";\n    CharCode[CharCode[\"Equals\"] = 61] = \"Equals\";\n    CharCode[CharCode[\"GreaterThan\"] = 62] = \"GreaterThan\";\n    CharCode[CharCode[\"QuestionMark\"] = 63] = \"QuestionMark\";\n    CharCode[CharCode[\"AtSign\"] = 64] = \"AtSign\";\n    CharCode[CharCode[\"A\"] = 65] = \"A\";\n    CharCode[CharCode[\"B\"] = 66] = \"B\";\n    CharCode[CharCode[\"C\"] = 67] = \"C\";\n    CharCode[CharCode[\"D\"] = 68] = \"D\";\n    CharCode[CharCode[\"E\"] = 69] = \"E\";\n    CharCode[CharCode[\"F\"] = 70] = \"F\";\n    CharCode[CharCode[\"G\"] = 71] = \"G\";\n    CharCode[CharCode[\"H\"] = 72] = \"H\";\n    CharCode[CharCode[\"I\"] = 73] = \"I\";\n    CharCode[CharCode[\"J\"] = 74] = \"J\";\n    CharCode[CharCode[\"K\"] = 75] = \"K\";\n    CharCode[CharCode[\"L\"] = 76] = \"L\";\n    CharCode[CharCode[\"M\"] = 77] = \"M\";\n    CharCode[CharCode[\"N\"] = 78] = \"N\";\n    CharCode[CharCode[\"O\"] = 79] = \"O\";\n    CharCode[CharCode[\"P\"] = 80] = \"P\";\n    CharCode[CharCode[\"Q\"] = 81] = \"Q\";\n    CharCode[CharCode[\"R\"] = 82] = \"R\";\n    CharCode[CharCode[\"S\"] = 83] = \"S\";\n    CharCode[CharCode[\"T\"] = 84] = \"T\";\n    CharCode[CharCode[\"U\"] = 85] = \"U\";\n    CharCode[CharCode[\"V\"] = 86] = \"V\";\n    CharCode[CharCode[\"W\"] = 87] = \"W\";\n    CharCode[CharCode[\"X\"] = 88] = \"X\";\n    CharCode[CharCode[\"Y\"] = 89] = \"Y\";\n    CharCode[CharCode[\"Z\"] = 90] = \"Z\";\n    CharCode[CharCode[\"OpenSquareBracket\"] = 91] = \"OpenSquareBracket\";\n    CharCode[CharCode[\"Backslash\"] = 92] = \"Backslash\";\n    CharCode[CharCode[\"CloseSquareBracket\"] = 93] = \"CloseSquareBracket\";\n    CharCode[CharCode[\"Caret\"] = 94] = \"Caret\";\n    CharCode[CharCode[\"Underline\"] = 95] = \"Underline\";\n    CharCode[CharCode[\"BackTick\"] = 96] = \"BackTick\";\n    CharCode[CharCode[\"a\"] = 97] = \"a\";\n    CharCode[CharCode[\"b\"] = 98] = \"b\";\n    CharCode[CharCode[\"c\"] = 99] = \"c\";\n    CharCode[CharCode[\"d\"] = 100] = \"d\";\n    CharCode[CharCode[\"e\"] = 101] = \"e\";\n    CharCode[CharCode[\"f\"] = 102] = \"f\";\n    CharCode[CharCode[\"g\"] = 103] = \"g\";\n    CharCode[CharCode[\"h\"] = 104] = \"h\";\n    CharCode[CharCode[\"i\"] = 105] = \"i\";\n    CharCode[CharCode[\"j\"] = 106] = \"j\";\n    CharCode[CharCode[\"k\"] = 107] = \"k\";\n    CharCode[CharCode[\"l\"] = 108] = \"l\";\n    CharCode[CharCode[\"m\"] = 109] = \"m\";\n    CharCode[CharCode[\"n\"] = 110] = \"n\";\n    CharCode[CharCode[\"o\"] = 111] = \"o\";\n    CharCode[CharCode[\"p\"] = 112] = \"p\";\n    CharCode[CharCode[\"q\"] = 113] = \"q\";\n    CharCode[CharCode[\"r\"] = 114] = \"r\";\n    CharCode[CharCode[\"s\"] = 115] = \"s\";\n    CharCode[CharCode[\"t\"] = 116] = \"t\";\n    CharCode[CharCode[\"u\"] = 117] = \"u\";\n    CharCode[CharCode[\"v\"] = 118] = \"v\";\n    CharCode[CharCode[\"w\"] = 119] = \"w\";\n    CharCode[CharCode[\"x\"] = 120] = \"x\";\n    CharCode[CharCode[\"y\"] = 121] = \"y\";\n    CharCode[CharCode[\"z\"] = 122] = \"z\";\n    CharCode[CharCode[\"OpenCurlyBrace\"] = 123] = \"OpenCurlyBrace\";\n    CharCode[CharCode[\"Pipe\"] = 124] = \"Pipe\";\n    CharCode[CharCode[\"CloseCurlyBrace\"] = 125] = \"CloseCurlyBrace\";\n    CharCode[CharCode[\"Tilde\"] = 126] = \"Tilde\";\n    CharCode[CharCode[\"NoBreakSpace\"] = 160] = \"NoBreakSpace\";\n    CharCode[CharCode[\"U_Combining_Grave_Accent\"] = 768] = \"U_Combining_Grave_Accent\";\n    CharCode[CharCode[\"U_Combining_Acute_Accent\"] = 769] = \"U_Combining_Acute_Accent\";\n    CharCode[CharCode[\"U_Combining_Circumflex_Accent\"] = 770] = \"U_Combining_Circumflex_Accent\";\n    CharCode[CharCode[\"U_Combining_Tilde\"] = 771] = \"U_Combining_Tilde\";\n    CharCode[CharCode[\"U_Combining_Macron\"] = 772] = \"U_Combining_Macron\";\n    CharCode[CharCode[\"U_Combining_Overline\"] = 773] = \"U_Combining_Overline\";\n    CharCode[CharCode[\"U_Combining_Breve\"] = 774] = \"U_Combining_Breve\";\n    CharCode[CharCode[\"U_Combining_Dot_Above\"] = 775] = \"U_Combining_Dot_Above\";\n    CharCode[CharCode[\"U_Combining_Diaeresis\"] = 776] = \"U_Combining_Diaeresis\";\n    CharCode[CharCode[\"U_Combining_Hook_Above\"] = 777] = \"U_Combining_Hook_Above\";\n    CharCode[CharCode[\"U_Combining_Ring_Above\"] = 778] = \"U_Combining_Ring_Above\";\n    CharCode[CharCode[\"U_Combining_Double_Acute_Accent\"] = 779] = \"U_Combining_Double_Acute_Accent\";\n    CharCode[CharCode[\"U_Combining_Caron\"] = 780] = \"U_Combining_Caron\";\n    CharCode[CharCode[\"U_Combining_Vertical_Line_Above\"] = 781] = \"U_Combining_Vertical_Line_Above\";\n    CharCode[CharCode[\"U_Combining_Double_Vertical_Line_Above\"] = 782] = \"U_Combining_Double_Vertical_Line_Above\";\n    CharCode[CharCode[\"U_Combining_Double_Grave_Accent\"] = 783] = \"U_Combining_Double_Grave_Accent\";\n    CharCode[CharCode[\"U_Combining_Candrabindu\"] = 784] = \"U_Combining_Candrabindu\";\n    CharCode[CharCode[\"U_Combining_Inverted_Breve\"] = 785] = \"U_Combining_Inverted_Breve\";\n    CharCode[CharCode[\"U_Combining_Turned_Comma_Above\"] = 786] = \"U_Combining_Turned_Comma_Above\";\n    CharCode[CharCode[\"U_Combining_Comma_Above\"] = 787] = \"U_Combining_Comma_Above\";\n    CharCode[CharCode[\"U_Combining_Reversed_Comma_Above\"] = 788] = \"U_Combining_Reversed_Comma_Above\";\n    CharCode[CharCode[\"U_Combining_Comma_Above_Right\"] = 789] = \"U_Combining_Comma_Above_Right\";\n    CharCode[CharCode[\"U_Combining_Grave_Accent_Below\"] = 790] = \"U_Combining_Grave_Accent_Below\";\n    CharCode[CharCode[\"U_Combining_Acute_Accent_Below\"] = 791] = \"U_Combining_Acute_Accent_Below\";\n    CharCode[CharCode[\"U_Combining_Left_Tack_Below\"] = 792] = \"U_Combining_Left_Tack_Below\";\n    CharCode[CharCode[\"U_Combining_Right_Tack_Below\"] = 793] = \"U_Combining_Right_Tack_Below\";\n    CharCode[CharCode[\"U_Combining_Left_Angle_Above\"] = 794] = \"U_Combining_Left_Angle_Above\";\n    CharCode[CharCode[\"U_Combining_Horn\"] = 795] = \"U_Combining_Horn\";\n    CharCode[CharCode[\"U_Combining_Left_Half_Ring_Below\"] = 796] = \"U_Combining_Left_Half_Ring_Below\";\n    CharCode[CharCode[\"U_Combining_Up_Tack_Below\"] = 797] = \"U_Combining_Up_Tack_Below\";\n    CharCode[CharCode[\"U_Combining_Down_Tack_Below\"] = 798] = \"U_Combining_Down_Tack_Below\";\n    CharCode[CharCode[\"U_Combining_Plus_Sign_Below\"] = 799] = \"U_Combining_Plus_Sign_Below\";\n    CharCode[CharCode[\"U_Combining_Minus_Sign_Below\"] = 800] = \"U_Combining_Minus_Sign_Below\";\n    CharCode[CharCode[\"U_Combining_Palatalized_Hook_Below\"] = 801] = \"U_Combining_Palatalized_Hook_Below\";\n    CharCode[CharCode[\"U_Combining_Retroflex_Hook_Below\"] = 802] = \"U_Combining_Retroflex_Hook_Below\";\n    CharCode[CharCode[\"U_Combining_Dot_Below\"] = 803] = \"U_Combining_Dot_Below\";\n    CharCode[CharCode[\"U_Combining_Diaeresis_Below\"] = 804] = \"U_Combining_Diaeresis_Below\";\n    CharCode[CharCode[\"U_Combining_Ring_Below\"] = 805] = \"U_Combining_Ring_Below\";\n    CharCode[CharCode[\"U_Combining_Comma_Below\"] = 806] = \"U_Combining_Comma_Below\";\n    CharCode[CharCode[\"U_Combining_Cedilla\"] = 807] = \"U_Combining_Cedilla\";\n    CharCode[CharCode[\"U_Combining_Ogonek\"] = 808] = \"U_Combining_Ogonek\";\n    CharCode[CharCode[\"U_Combining_Vertical_Line_Below\"] = 809] = \"U_Combining_Vertical_Line_Below\";\n    CharCode[CharCode[\"U_Combining_Bridge_Below\"] = 810] = \"U_Combining_Bridge_Below\";\n    CharCode[CharCode[\"U_Combining_Inverted_Double_Arch_Below\"] = 811] = \"U_Combining_Inverted_Double_Arch_Below\";\n    CharCode[CharCode[\"U_Combining_Caron_Below\"] = 812] = \"U_Combining_Caron_Below\";\n    CharCode[CharCode[\"U_Combining_Circumflex_Accent_Below\"] = 813] = \"U_Combining_Circumflex_Accent_Below\";\n    CharCode[CharCode[\"U_Combining_Breve_Below\"] = 814] = \"U_Combining_Breve_Below\";\n    CharCode[CharCode[\"U_Combining_Inverted_Breve_Below\"] = 815] = \"U_Combining_Inverted_Breve_Below\";\n    CharCode[CharCode[\"U_Combining_Tilde_Below\"] = 816] = \"U_Combining_Tilde_Below\";\n    CharCode[CharCode[\"U_Combining_Macron_Below\"] = 817] = \"U_Combining_Macron_Below\";\n    CharCode[CharCode[\"U_Combining_Low_Line\"] = 818] = \"U_Combining_Low_Line\";\n    CharCode[CharCode[\"U_Combining_Double_Low_Line\"] = 819] = \"U_Combining_Double_Low_Line\";\n    CharCode[CharCode[\"U_Combining_Tilde_Overlay\"] = 820] = \"U_Combining_Tilde_Overlay\";\n    CharCode[CharCode[\"U_Combining_Short_Stroke_Overlay\"] = 821] = \"U_Combining_Short_Stroke_Overlay\";\n    CharCode[CharCode[\"U_Combining_Long_Stroke_Overlay\"] = 822] = \"U_Combining_Long_Stroke_Overlay\";\n    CharCode[CharCode[\"U_Combining_Short_Solidus_Overlay\"] = 823] = \"U_Combining_Short_Solidus_Overlay\";\n    CharCode[CharCode[\"U_Combining_Long_Solidus_Overlay\"] = 824] = \"U_Combining_Long_Solidus_Overlay\";\n    CharCode[CharCode[\"U_Combining_Right_Half_Ring_Below\"] = 825] = \"U_Combining_Right_Half_Ring_Below\";\n    CharCode[CharCode[\"U_Combining_Inverted_Bridge_Below\"] = 826] = \"U_Combining_Inverted_Bridge_Below\";\n    CharCode[CharCode[\"U_Combining_Square_Below\"] = 827] = \"U_Combining_Square_Below\";\n    CharCode[CharCode[\"U_Combining_Seagull_Below\"] = 828] = \"U_Combining_Seagull_Below\";\n    CharCode[CharCode[\"U_Combining_X_Above\"] = 829] = \"U_Combining_X_Above\";\n    CharCode[CharCode[\"U_Combining_Vertical_Tilde\"] = 830] = \"U_Combining_Vertical_Tilde\";\n    CharCode[CharCode[\"U_Combining_Double_Overline\"] = 831] = \"U_Combining_Double_Overline\";\n    CharCode[CharCode[\"U_Combining_Grave_Tone_Mark\"] = 832] = \"U_Combining_Grave_Tone_Mark\";\n    CharCode[CharCode[\"U_Combining_Acute_Tone_Mark\"] = 833] = \"U_Combining_Acute_Tone_Mark\";\n    CharCode[CharCode[\"U_Combining_Greek_Perispomeni\"] = 834] = \"U_Combining_Greek_Perispomeni\";\n    CharCode[CharCode[\"U_Combining_Greek_Koronis\"] = 835] = \"U_Combining_Greek_Koronis\";\n    CharCode[CharCode[\"U_Combining_Greek_Dialytika_Tonos\"] = 836] = \"U_Combining_Greek_Dialytika_Tonos\";\n    CharCode[CharCode[\"U_Combining_Greek_Ypogegrammeni\"] = 837] = \"U_Combining_Greek_Ypogegrammeni\";\n    CharCode[CharCode[\"U_Combining_Bridge_Above\"] = 838] = \"U_Combining_Bridge_Above\";\n    CharCode[CharCode[\"U_Combining_Equals_Sign_Below\"] = 839] = \"U_Combining_Equals_Sign_Below\";\n    CharCode[CharCode[\"U_Combining_Double_Vertical_Line_Below\"] = 840] = \"U_Combining_Double_Vertical_Line_Below\";\n    CharCode[CharCode[\"U_Combining_Left_Angle_Below\"] = 841] = \"U_Combining_Left_Angle_Below\";\n    CharCode[CharCode[\"U_Combining_Not_Tilde_Above\"] = 842] = \"U_Combining_Not_Tilde_Above\";\n    CharCode[CharCode[\"U_Combining_Homothetic_Above\"] = 843] = \"U_Combining_Homothetic_Above\";\n    CharCode[CharCode[\"U_Combining_Almost_Equal_To_Above\"] = 844] = \"U_Combining_Almost_Equal_To_Above\";\n    CharCode[CharCode[\"U_Combining_Left_Right_Arrow_Below\"] = 845] = \"U_Combining_Left_Right_Arrow_Below\";\n    CharCode[CharCode[\"U_Combining_Upwards_Arrow_Below\"] = 846] = \"U_Combining_Upwards_Arrow_Below\";\n    CharCode[CharCode[\"U_Combining_Grapheme_Joiner\"] = 847] = \"U_Combining_Grapheme_Joiner\";\n    CharCode[CharCode[\"U_Combining_Right_Arrowhead_Above\"] = 848] = \"U_Combining_Right_Arrowhead_Above\";\n    CharCode[CharCode[\"U_Combining_Left_Half_Ring_Above\"] = 849] = \"U_Combining_Left_Half_Ring_Above\";\n    CharCode[CharCode[\"U_Combining_Fermata\"] = 850] = \"U_Combining_Fermata\";\n    CharCode[CharCode[\"U_Combining_X_Below\"] = 851] = \"U_Combining_X_Below\";\n    CharCode[CharCode[\"U_Combining_Left_Arrowhead_Below\"] = 852] = \"U_Combining_Left_Arrowhead_Below\";\n    CharCode[CharCode[\"U_Combining_Right_Arrowhead_Below\"] = 853] = \"U_Combining_Right_Arrowhead_Below\";\n    CharCode[CharCode[\"U_Combining_Right_Arrowhead_And_Up_Arrowhead_Below\"] = 854] = \"U_Combining_Right_Arrowhead_And_Up_Arrowhead_Below\";\n    CharCode[CharCode[\"U_Combining_Right_Half_Ring_Above\"] = 855] = \"U_Combining_Right_Half_Ring_Above\";\n    CharCode[CharCode[\"U_Combining_Dot_Above_Right\"] = 856] = \"U_Combining_Dot_Above_Right\";\n    CharCode[CharCode[\"U_Combining_Asterisk_Below\"] = 857] = \"U_Combining_Asterisk_Below\";\n    CharCode[CharCode[\"U_Combining_Double_Ring_Below\"] = 858] = \"U_Combining_Double_Ring_Below\";\n    CharCode[CharCode[\"U_Combining_Zigzag_Above\"] = 859] = \"U_Combining_Zigzag_Above\";\n    CharCode[CharCode[\"U_Combining_Double_Breve_Below\"] = 860] = \"U_Combining_Double_Breve_Below\";\n    CharCode[CharCode[\"U_Combining_Double_Breve\"] = 861] = \"U_Combining_Double_Breve\";\n    CharCode[CharCode[\"U_Combining_Double_Macron\"] = 862] = \"U_Combining_Double_Macron\";\n    CharCode[CharCode[\"U_Combining_Double_Macron_Below\"] = 863] = \"U_Combining_Double_Macron_Below\";\n    CharCode[CharCode[\"U_Combining_Double_Tilde\"] = 864] = \"U_Combining_Double_Tilde\";\n    CharCode[CharCode[\"U_Combining_Double_Inverted_Breve\"] = 865] = \"U_Combining_Double_Inverted_Breve\";\n    CharCode[CharCode[\"U_Combining_Double_Rightwards_Arrow_Below\"] = 866] = \"U_Combining_Double_Rightwards_Arrow_Below\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_A\"] = 867] = \"U_Combining_Latin_Small_Letter_A\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_E\"] = 868] = \"U_Combining_Latin_Small_Letter_E\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_I\"] = 869] = \"U_Combining_Latin_Small_Letter_I\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_O\"] = 870] = \"U_Combining_Latin_Small_Letter_O\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_U\"] = 871] = \"U_Combining_Latin_Small_Letter_U\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_C\"] = 872] = \"U_Combining_Latin_Small_Letter_C\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_D\"] = 873] = \"U_Combining_Latin_Small_Letter_D\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_H\"] = 874] = \"U_Combining_Latin_Small_Letter_H\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_M\"] = 875] = \"U_Combining_Latin_Small_Letter_M\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_R\"] = 876] = \"U_Combining_Latin_Small_Letter_R\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_T\"] = 877] = \"U_Combining_Latin_Small_Letter_T\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_V\"] = 878] = \"U_Combining_Latin_Small_Letter_V\";\n    CharCode[CharCode[\"U_Combining_Latin_Small_Letter_X\"] = 879] = \"U_Combining_Latin_Small_Letter_X\";\n    CharCode[CharCode[\"LINE_SEPARATOR\"] = 8232] = \"LINE_SEPARATOR\";\n    CharCode[CharCode[\"PARAGRAPH_SEPARATOR\"] = 8233] = \"PARAGRAPH_SEPARATOR\";\n    CharCode[CharCode[\"NEXT_LINE\"] = 133] = \"NEXT_LINE\";\n    CharCode[CharCode[\"U_CIRCUMFLEX\"] = 94] = \"U_CIRCUMFLEX\";\n    CharCode[CharCode[\"U_GRAVE_ACCENT\"] = 96] = \"U_GRAVE_ACCENT\";\n    CharCode[CharCode[\"U_DIAERESIS\"] = 168] = \"U_DIAERESIS\";\n    CharCode[CharCode[\"U_MACRON\"] = 175] = \"U_MACRON\";\n    CharCode[CharCode[\"U_ACUTE_ACCENT\"] = 180] = \"U_ACUTE_ACCENT\";\n    CharCode[CharCode[\"U_CEDILLA\"] = 184] = \"U_CEDILLA\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LEFT_ARROWHEAD\"] = 706] = \"U_MODIFIER_LETTER_LEFT_ARROWHEAD\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_RIGHT_ARROWHEAD\"] = 707] = \"U_MODIFIER_LETTER_RIGHT_ARROWHEAD\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_UP_ARROWHEAD\"] = 708] = \"U_MODIFIER_LETTER_UP_ARROWHEAD\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_DOWN_ARROWHEAD\"] = 709] = \"U_MODIFIER_LETTER_DOWN_ARROWHEAD\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_CENTRED_RIGHT_HALF_RING\"] = 722] = \"U_MODIFIER_LETTER_CENTRED_RIGHT_HALF_RING\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_CENTRED_LEFT_HALF_RING\"] = 723] = \"U_MODIFIER_LETTER_CENTRED_LEFT_HALF_RING\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_UP_TACK\"] = 724] = \"U_MODIFIER_LETTER_UP_TACK\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_DOWN_TACK\"] = 725] = \"U_MODIFIER_LETTER_DOWN_TACK\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_PLUS_SIGN\"] = 726] = \"U_MODIFIER_LETTER_PLUS_SIGN\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_MINUS_SIGN\"] = 727] = \"U_MODIFIER_LETTER_MINUS_SIGN\";\n    CharCode[CharCode[\"U_BREVE\"] = 728] = \"U_BREVE\";\n    CharCode[CharCode[\"U_DOT_ABOVE\"] = 729] = \"U_DOT_ABOVE\";\n    CharCode[CharCode[\"U_RING_ABOVE\"] = 730] = \"U_RING_ABOVE\";\n    CharCode[CharCode[\"U_OGONEK\"] = 731] = \"U_OGONEK\";\n    CharCode[CharCode[\"U_SMALL_TILDE\"] = 732] = \"U_SMALL_TILDE\";\n    CharCode[CharCode[\"U_DOUBLE_ACUTE_ACCENT\"] = 733] = \"U_DOUBLE_ACUTE_ACCENT\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_RHOTIC_HOOK\"] = 734] = \"U_MODIFIER_LETTER_RHOTIC_HOOK\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_CROSS_ACCENT\"] = 735] = \"U_MODIFIER_LETTER_CROSS_ACCENT\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_EXTRA_HIGH_TONE_BAR\"] = 741] = \"U_MODIFIER_LETTER_EXTRA_HIGH_TONE_BAR\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_HIGH_TONE_BAR\"] = 742] = \"U_MODIFIER_LETTER_HIGH_TONE_BAR\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_MID_TONE_BAR\"] = 743] = \"U_MODIFIER_LETTER_MID_TONE_BAR\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LOW_TONE_BAR\"] = 744] = \"U_MODIFIER_LETTER_LOW_TONE_BAR\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_EXTRA_LOW_TONE_BAR\"] = 745] = \"U_MODIFIER_LETTER_EXTRA_LOW_TONE_BAR\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_YIN_DEPARTING_TONE_MARK\"] = 746] = \"U_MODIFIER_LETTER_YIN_DEPARTING_TONE_MARK\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_YANG_DEPARTING_TONE_MARK\"] = 747] = \"U_MODIFIER_LETTER_YANG_DEPARTING_TONE_MARK\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_UNASPIRATED\"] = 749] = \"U_MODIFIER_LETTER_UNASPIRATED\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LOW_DOWN_ARROWHEAD\"] = 751] = \"U_MODIFIER_LETTER_LOW_DOWN_ARROWHEAD\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LOW_UP_ARROWHEAD\"] = 752] = \"U_MODIFIER_LETTER_LOW_UP_ARROWHEAD\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LOW_LEFT_ARROWHEAD\"] = 753] = \"U_MODIFIER_LETTER_LOW_LEFT_ARROWHEAD\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LOW_RIGHT_ARROWHEAD\"] = 754] = \"U_MODIFIER_LETTER_LOW_RIGHT_ARROWHEAD\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LOW_RING\"] = 755] = \"U_MODIFIER_LETTER_LOW_RING\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_MIDDLE_GRAVE_ACCENT\"] = 756] = \"U_MODIFIER_LETTER_MIDDLE_GRAVE_ACCENT\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_MIDDLE_DOUBLE_GRAVE_ACCENT\"] = 757] = \"U_MODIFIER_LETTER_MIDDLE_DOUBLE_GRAVE_ACCENT\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_MIDDLE_DOUBLE_ACUTE_ACCENT\"] = 758] = \"U_MODIFIER_LETTER_MIDDLE_DOUBLE_ACUTE_ACCENT\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LOW_TILDE\"] = 759] = \"U_MODIFIER_LETTER_LOW_TILDE\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_RAISED_COLON\"] = 760] = \"U_MODIFIER_LETTER_RAISED_COLON\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_BEGIN_HIGH_TONE\"] = 761] = \"U_MODIFIER_LETTER_BEGIN_HIGH_TONE\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_END_HIGH_TONE\"] = 762] = \"U_MODIFIER_LETTER_END_HIGH_TONE\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_BEGIN_LOW_TONE\"] = 763] = \"U_MODIFIER_LETTER_BEGIN_LOW_TONE\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_END_LOW_TONE\"] = 764] = \"U_MODIFIER_LETTER_END_LOW_TONE\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_SHELF\"] = 765] = \"U_MODIFIER_LETTER_SHELF\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_OPEN_SHELF\"] = 766] = \"U_MODIFIER_LETTER_OPEN_SHELF\";\n    CharCode[CharCode[\"U_MODIFIER_LETTER_LOW_LEFT_ARROW\"] = 767] = \"U_MODIFIER_LETTER_LOW_LEFT_ARROW\";\n    CharCode[CharCode[\"U_GREEK_LOWER_NUMERAL_SIGN\"] = 885] = \"U_GREEK_LOWER_NUMERAL_SIGN\";\n    CharCode[CharCode[\"U_GREEK_TONOS\"] = 900] = \"U_GREEK_TONOS\";\n    CharCode[CharCode[\"U_GREEK_DIALYTIKA_TONOS\"] = 901] = \"U_GREEK_DIALYTIKA_TONOS\";\n    CharCode[CharCode[\"U_GREEK_KORONIS\"] = 8125] = \"U_GREEK_KORONIS\";\n    CharCode[CharCode[\"U_GREEK_PSILI\"] = 8127] = \"U_GREEK_PSILI\";\n    CharCode[CharCode[\"U_GREEK_PERISPOMENI\"] = 8128] = \"U_GREEK_PERISPOMENI\";\n    CharCode[CharCode[\"U_GREEK_DIALYTIKA_AND_PERISPOMENI\"] = 8129] = \"U_GREEK_DIALYTIKA_AND_PERISPOMENI\";\n    CharCode[CharCode[\"U_GREEK_PSILI_AND_VARIA\"] = 8141] = \"U_GREEK_PSILI_AND_VARIA\";\n    CharCode[CharCode[\"U_GREEK_PSILI_AND_OXIA\"] = 8142] = \"U_GREEK_PSILI_AND_OXIA\";\n    CharCode[CharCode[\"U_GREEK_PSILI_AND_PERISPOMENI\"] = 8143] = \"U_GREEK_PSILI_AND_PERISPOMENI\";\n    CharCode[CharCode[\"U_GREEK_DASIA_AND_VARIA\"] = 8157] = \"U_GREEK_DASIA_AND_VARIA\";\n    CharCode[CharCode[\"U_GREEK_DASIA_AND_OXIA\"] = 8158] = \"U_GREEK_DASIA_AND_OXIA\";\n    CharCode[CharCode[\"U_GREEK_DASIA_AND_PERISPOMENI\"] = 8159] = \"U_GREEK_DASIA_AND_PERISPOMENI\";\n    CharCode[CharCode[\"U_GREEK_DIALYTIKA_AND_VARIA\"] = 8173] = \"U_GREEK_DIALYTIKA_AND_VARIA\";\n    CharCode[CharCode[\"U_GREEK_DIALYTIKA_AND_OXIA\"] = 8174] = \"U_GREEK_DIALYTIKA_AND_OXIA\";\n    CharCode[CharCode[\"U_GREEK_VARIA\"] = 8175] = \"U_GREEK_VARIA\";\n    CharCode[CharCode[\"U_GREEK_OXIA\"] = 8189] = \"U_GREEK_OXIA\";\n    CharCode[CharCode[\"U_GREEK_DASIA\"] = 8190] = \"U_GREEK_DASIA\";\n    CharCode[CharCode[\"U_IDEOGRAPHIC_FULL_STOP\"] = 12290] = \"U_IDEOGRAPHIC_FULL_STOP\";\n    CharCode[CharCode[\"U_LEFT_CORNER_BRACKET\"] = 12300] = \"U_LEFT_CORNER_BRACKET\";\n    CharCode[CharCode[\"U_RIGHT_CORNER_BRACKET\"] = 12301] = \"U_RIGHT_CORNER_BRACKET\";\n    CharCode[CharCode[\"U_LEFT_BLACK_LENTICULAR_BRACKET\"] = 12304] = \"U_LEFT_BLACK_LENTICULAR_BRACKET\";\n    CharCode[CharCode[\"U_RIGHT_BLACK_LENTICULAR_BRACKET\"] = 12305] = \"U_RIGHT_BLACK_LENTICULAR_BRACKET\";\n    CharCode[CharCode[\"U_OVERLINE\"] = 8254] = \"U_OVERLINE\";\n    CharCode[CharCode[\"UTF8_BOM\"] = 65279] = \"UTF8_BOM\";\n    CharCode[CharCode[\"U_FULLWIDTH_SEMICOLON\"] = 65307] = \"U_FULLWIDTH_SEMICOLON\";\n    CharCode[CharCode[\"U_FULLWIDTH_COMMA\"] = 65292] = \"U_FULLWIDTH_COMMA\";\n})(CharCode || (CharCode = {})));\nexport { CharCode };\n","import { isString } from './types.js';\nconst _codiconFontCharacters = Object.create(null);\nfunction register(id, fontCharacter) {\n    if (isString(fontCharacter)) {\n        const val = _codiconFontCharacters[fontCharacter];\n        if (val === undefined) {\n            throw ( new Error(`${id} references an unknown codicon: ${fontCharacter}`));\n        }\n        fontCharacter = val;\n    }\n    _codiconFontCharacters[id] = fontCharacter;\n    return { id };\n}\nfunction getCodiconFontCharacters() {\n    return _codiconFontCharacters;\n}\nexport { getCodiconFontCharacters, register };\n","var _a;\nfunction groupBy(data, groupFn) {\n    const result = Object.create(null);\n    for (const element of data) {\n        const key = groupFn(element);\n        let target = result[key];\n        if (!target) {\n            target = result[key] = [];\n        }\n        target.push(element);\n    }\n    return result;\n}\nfunction diffSets(before, after) {\n    const removed = [];\n    const added = [];\n    for (const element of before) {\n        if (!( after.has(element))) {\n            removed.push(element);\n        }\n    }\n    for (const element of after) {\n        if (!( before.has(element))) {\n            added.push(element);\n        }\n    }\n    return { removed, added };\n}\nfunction diffMaps(before, after) {\n    const removed = [];\n    const added = [];\n    for (const [index, value] of before) {\n        if (!( after.has(index))) {\n            removed.push(value);\n        }\n    }\n    for (const [index, value] of after) {\n        if (!( before.has(index))) {\n            added.push(value);\n        }\n    }\n    return { removed, added };\n}\nfunction intersection(setA, setB) {\n    const result = ( new Set());\n    for (const elem of setB) {\n        if (( setA.has(elem))) {\n            result.add(elem);\n        }\n    }\n    return result;\n}\nclass SetWithKey {\n    static { _a = Symbol.toStringTag; }\n    constructor(values, toKey) {\n        this.toKey = toKey;\n        this._map = ( new Map());\n        this[_a] = 'SetWithKey';\n        for (const value of values) {\n            this.add(value);\n        }\n    }\n    get size() {\n        return this._map.size;\n    }\n    add(value) {\n        const key = this.toKey(value);\n        this._map.set(key, value);\n        return this;\n    }\n    delete(value) {\n        return this._map.delete(this.toKey(value));\n    }\n    has(value) {\n        return ( this._map.has(this.toKey(value)));\n    }\n    *entries() {\n        for (const entry of ( this._map.values())) {\n            yield [entry, entry];\n        }\n    }\n    keys() {\n        return ( this.values());\n    }\n    *values() {\n        for (const entry of ( this._map.values())) {\n            yield entry;\n        }\n    }\n    clear() {\n        this._map.clear();\n    }\n    forEach(callbackfn, thisArg) {\n        this._map.forEach(entry => callbackfn.call(thisArg, entry, entry, this));\n    }\n    [Symbol.iterator]() {\n        return ( this.values());\n    }\n}\nexport { SetWithKey, diffMaps, diffSets, groupBy, intersection };\n","class ErrorHandler {\n    constructor() {\n        this.listeners = [];\n        this.unexpectedErrorHandler = function (e) {\n            setTimeout(() => {\n                if (e.stack) {\n                    if (ErrorNoTelemetry.isErrorNoTelemetry(e)) {\n                        throw ( new ErrorNoTelemetry(e.message + '\\n\\n' + e.stack));\n                    }\n                    throw ( new Error(e.message + '\\n\\n' + e.stack));\n                }\n                throw e;\n            }, 0);\n        };\n    }\n    addListener(listener) {\n        this.listeners.push(listener);\n        return () => {\n            this._removeListener(listener);\n        };\n    }\n    emit(e) {\n        this.listeners.forEach((listener) => {\n            listener(e);\n        });\n    }\n    _removeListener(listener) {\n        this.listeners.splice(this.listeners.indexOf(listener), 1);\n    }\n    setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n        this.unexpectedErrorHandler = newUnexpectedErrorHandler;\n    }\n    getUnexpectedErrorHandler() {\n        return this.unexpectedErrorHandler;\n    }\n    onUnexpectedError(e) {\n        this.unexpectedErrorHandler(e);\n        this.emit(e);\n    }\n    onUnexpectedExternalError(e) {\n        this.unexpectedErrorHandler(e);\n    }\n}\nconst errorHandler = ( new ErrorHandler());\nfunction setUnexpectedErrorHandler(newUnexpectedErrorHandler) {\n    errorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\nfunction onUnexpectedError(e) {\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedError(e);\n    }\n    return undefined;\n}\nfunction onUnexpectedExternalError(e) {\n    if (!isCancellationError(e)) {\n        errorHandler.onUnexpectedExternalError(e);\n    }\n    return undefined;\n}\nfunction transformErrorForSerialization(error) {\n    if (error instanceof Error) {\n        const { name, message } = error;\n        const stack = error.stacktrace || error.stack;\n        return {\n            $isError: true,\n            name,\n            message,\n            stack,\n            noTelemetry: ErrorNoTelemetry.isErrorNoTelemetry(error)\n        };\n    }\n    return error;\n}\nfunction transformErrorFromSerialization(data) {\n    let error;\n    if (data.noTelemetry) {\n        error = ( new ErrorNoTelemetry());\n    }\n    else {\n        error = ( new Error());\n        error.name = data.name;\n    }\n    error.message = data.message;\n    error.stack = data.stack;\n    return error;\n}\nconst canceledName = 'Canceled';\nfunction isCancellationError(error) {\n    if (error instanceof CancellationError) {\n        return true;\n    }\n    return error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\nclass CancellationError extends Error {\n    constructor() {\n        super(canceledName);\n        this.name = this.message;\n    }\n}\nfunction canceled() {\n    const error = ( new Error(canceledName));\n    error.name = error.message;\n    return error;\n}\nfunction illegalArgument(name) {\n    if (name) {\n        return ( new Error(`Illegal argument: ${name}`));\n    }\n    else {\n        return ( new Error('Illegal argument'));\n    }\n}\nfunction illegalState(name) {\n    if (name) {\n        return ( new Error(`Illegal state: ${name}`));\n    }\n    else {\n        return ( new Error('Illegal state'));\n    }\n}\nclass ReadonlyError extends TypeError {\n    constructor(name) {\n        super(name ? `${name} is read-only and cannot be changed` : 'Cannot change read-only property');\n    }\n}\nfunction getErrorMessage(err) {\n    if (!err) {\n        return 'Error';\n    }\n    if (err.message) {\n        return err.message;\n    }\n    if (err.stack) {\n        return err.stack.split('\\n')[0];\n    }\n    return String(err);\n}\nclass NotImplementedError extends Error {\n    constructor(message) {\n        super('NotImplemented');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\nclass NotSupportedError extends Error {\n    constructor(message) {\n        super('NotSupported');\n        if (message) {\n            this.message = message;\n        }\n    }\n}\nclass ErrorNoTelemetry extends Error {\n    constructor(msg) {\n        super(msg);\n        this.name = 'CodeExpectedError';\n    }\n    static fromError(err) {\n        if (err instanceof ErrorNoTelemetry) {\n            return err;\n        }\n        const result = ( new ErrorNoTelemetry());\n        result.message = err.message;\n        result.stack = err.stack;\n        return result;\n    }\n    static isErrorNoTelemetry(err) {\n        return err.name === 'CodeExpectedError';\n    }\n}\nclass BugIndicatingError extends Error {\n    constructor(message) {\n        super(message || 'An unexpected bug occurred.');\n        Object.setPrototypeOf(this, BugIndicatingError.prototype);\n    }\n}\nexport { BugIndicatingError, CancellationError, ErrorHandler, ErrorNoTelemetry, NotImplementedError, NotSupportedError, ReadonlyError, canceled, errorHandler, getErrorMessage, illegalArgument, illegalState, isCancellationError, onUnexpectedError, onUnexpectedExternalError, setUnexpectedErrorHandler, transformErrorForSerialization, transformErrorFromSerialization };\n","import { onUnexpectedError } from './errors.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { Disposable, DisposableStore, toDisposable, DisposableMap, combinedDisposable } from './lifecycle.js';\nimport { LinkedList } from './linkedList.js';\nimport { StopWatch } from './stopwatch.js';\nvar Event;\n( (function(Event) {\n    Event.None = () => Disposable.None;\n    function defer(event, disposable) {\n        return debounce(event, () => void 0, 0, undefined, true, undefined, disposable);\n    }\n    Event.defer = defer;\n    function once(event) {\n        return (listener, thisArgs = null, disposables) => {\n            let didFire = false;\n            let result = undefined;\n            result = event(e => {\n                if (didFire) {\n                    return;\n                }\n                else if (result) {\n                    result.dispose();\n                }\n                else {\n                    didFire = true;\n                }\n                return listener.call(thisArgs, e);\n            }, null, disposables);\n            if (didFire) {\n                result.dispose();\n            }\n            return result;\n        };\n    }\n    Event.once = once;\n    function map(event, map, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => listener.call(thisArgs, ( map(i))), null, disposables), disposable);\n    }\n    Event.map = map;\n    function forEach(event, each, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables), disposable);\n    }\n    Event.forEach = forEach;\n    function filter(event, filter, disposable) {\n        return snapshot((listener, thisArgs = null, disposables) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables), disposable);\n    }\n    Event.filter = filter;\n    function signal(event) {\n        return event;\n    }\n    Event.signal = signal;\n    function any(...events) {\n        return (listener, thisArgs = null, disposables) => {\n            const disposable = combinedDisposable(...( events.map(event => event(e => listener.call(thisArgs, e)))));\n            return addAndReturnDisposable(disposable, disposables);\n        };\n    }\n    Event.any = any;\n    function reduce(event, merge, initial, disposable) {\n        let output = initial;\n        return ( map(event, e => {\n            output = merge(output, e);\n            return output;\n        }, disposable));\n    }\n    Event.reduce = reduce;\n    function snapshot(event, disposable) {\n        let listener;\n        const options = {\n            onWillAddFirstListener() {\n                listener = event(emitter.fire, emitter);\n            },\n            onDidRemoveLastListener() {\n                listener?.dispose();\n            }\n        };\n        const emitter = ( new Emitter(options));\n        disposable?.add(emitter);\n        return emitter.event;\n    }\n    function addAndReturnDisposable(d, store) {\n        if (store instanceof Array) {\n            store.push(d);\n        }\n        else if (store) {\n            store.add(d);\n        }\n        return d;\n    }\n    function debounce(event, merge, delay = 100, leading = false, flushOnListenerRemove = false, leakWarningThreshold, disposable) {\n        let subscription;\n        let output = undefined;\n        let handle = undefined;\n        let numDebouncedCalls = 0;\n        let doFire;\n        const options = {\n            leakWarningThreshold,\n            onWillAddFirstListener() {\n                subscription = event(cur => {\n                    numDebouncedCalls++;\n                    output = merge(output, cur);\n                    if (leading && !handle) {\n                        emitter.fire(output);\n                        output = undefined;\n                    }\n                    doFire = () => {\n                        const _output = output;\n                        output = undefined;\n                        handle = undefined;\n                        if (!leading || numDebouncedCalls > 1) {\n                            emitter.fire(_output);\n                        }\n                        numDebouncedCalls = 0;\n                    };\n                    if (typeof delay === 'number') {\n                        clearTimeout(handle);\n                        handle = setTimeout(doFire, delay);\n                    }\n                    else {\n                        if (handle === undefined) {\n                            handle = 0;\n                            queueMicrotask(doFire);\n                        }\n                    }\n                });\n            },\n            onWillRemoveListener() {\n                if (flushOnListenerRemove && numDebouncedCalls > 0) {\n                    doFire?.();\n                }\n            },\n            onDidRemoveLastListener() {\n                doFire = undefined;\n                subscription.dispose();\n            }\n        };\n        const emitter = ( new Emitter(options));\n        disposable?.add(emitter);\n        return emitter.event;\n    }\n    Event.debounce = debounce;\n    function accumulate(event, delay = 0, disposable) {\n        return Event.debounce(event, (last, e) => {\n            if (!last) {\n                return [e];\n            }\n            last.push(e);\n            return last;\n        }, delay, undefined, true, undefined, disposable);\n    }\n    Event.accumulate = accumulate;\n    function latch(event, equals = (a, b) => a === b, disposable) {\n        let firstCall = true;\n        let cache;\n        return filter(event, value => {\n            const shouldEmit = firstCall || !equals(value, cache);\n            firstCall = false;\n            cache = value;\n            return shouldEmit;\n        }, disposable);\n    }\n    Event.latch = latch;\n    function split(event, isT, disposable) {\n        return [\n            Event.filter(event, isT, disposable),\n            Event.filter(event, e => !isT(e), disposable),\n        ];\n    }\n    Event.split = split;\n    function buffer(event, flushAfterTimeout = false, _buffer = [], disposable) {\n        let buffer = _buffer.slice();\n        let listener = event(e => {\n            if (buffer) {\n                buffer.push(e);\n            }\n            else {\n                emitter.fire(e);\n            }\n        });\n        if (disposable) {\n            disposable.add(listener);\n        }\n        const flush = () => {\n            buffer?.forEach(e => emitter.fire(e));\n            buffer = null;\n        };\n        const emitter = ( new Emitter({\n            onWillAddFirstListener() {\n                if (!listener) {\n                    listener = event(e => emitter.fire(e));\n                    if (disposable) {\n                        disposable.add(listener);\n                    }\n                }\n            },\n            onDidAddFirstListener() {\n                if (buffer) {\n                    if (flushAfterTimeout) {\n                        setTimeout(flush);\n                    }\n                    else {\n                        flush();\n                    }\n                }\n            },\n            onDidRemoveLastListener() {\n                if (listener) {\n                    listener.dispose();\n                }\n                listener = null;\n            }\n        }));\n        if (disposable) {\n            disposable.add(emitter);\n        }\n        return emitter.event;\n    }\n    Event.buffer = buffer;\n    function chain(event, sythensize) {\n        const fn = (listener, thisArgs, disposables) => {\n            const cs = sythensize(( new ChainableSynthesis()));\n            return event(function (value) {\n                const result = cs.evaluate(value);\n                if (result !== HaltChainable) {\n                    listener.call(thisArgs, result);\n                }\n            }, undefined, disposables);\n        };\n        return fn;\n    }\n    Event.chain = chain;\n    const HaltChainable = Symbol('HaltChainable');\n    class ChainableSynthesis {\n        constructor() {\n            this.steps = [];\n        }\n        map(fn) {\n            this.steps.push(fn);\n            return this;\n        }\n        forEach(fn) {\n            this.steps.push(v => {\n                fn(v);\n                return v;\n            });\n            return this;\n        }\n        filter(fn) {\n            this.steps.push(v => fn(v) ? v : HaltChainable);\n            return this;\n        }\n        reduce(merge, initial) {\n            let last = initial;\n            this.steps.push(v => {\n                last = merge(last, v);\n                return last;\n            });\n            return this;\n        }\n        latch(equals = (a, b) => a === b) {\n            let firstCall = true;\n            let cache;\n            this.steps.push(value => {\n                const shouldEmit = firstCall || !equals(value, cache);\n                firstCall = false;\n                cache = value;\n                return shouldEmit ? value : HaltChainable;\n            });\n            return this;\n        }\n        evaluate(value) {\n            for (const step of this.steps) {\n                value = step(value);\n                if (value === HaltChainable) {\n                    break;\n                }\n            }\n            return value;\n        }\n    }\n    function fromNodeEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(( map(...args)));\n        const onFirstListenerAdd = () => emitter.on(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n        const result = ( new Emitter(\n            { onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove }\n        ));\n        return result.event;\n    }\n    Event.fromNodeEventEmitter = fromNodeEventEmitter;\n    function fromDOMEventEmitter(emitter, eventName, map = id => id) {\n        const fn = (...args) => result.fire(( map(...args)));\n        const onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n        const onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n        const result = ( new Emitter(\n            { onWillAddFirstListener: onFirstListenerAdd, onDidRemoveLastListener: onLastListenerRemove }\n        ));\n        return result.event;\n    }\n    Event.fromDOMEventEmitter = fromDOMEventEmitter;\n    function toPromise(event) {\n        return ( new Promise(resolve => once(event)(resolve)));\n    }\n    Event.toPromise = toPromise;\n    function fromPromise(promise) {\n        const result = ( new Emitter());\n        promise.then(res => {\n            result.fire(res);\n        }, () => {\n            result.fire(undefined);\n        }).finally(() => {\n            result.dispose();\n        });\n        return result.event;\n    }\n    Event.fromPromise = fromPromise;\n    function runAndSubscribe(event, handler, initial) {\n        handler(initial);\n        return event(e => handler(e));\n    }\n    Event.runAndSubscribe = runAndSubscribe;\n    class EmitterObserver {\n        constructor(_observable, store) {\n            this._observable = _observable;\n            this._counter = 0;\n            this._hasChanged = false;\n            const options = {\n                onWillAddFirstListener: () => {\n                    _observable.addObserver(this);\n                },\n                onDidRemoveLastListener: () => {\n                    _observable.removeObserver(this);\n                }\n            };\n            this.emitter = ( new Emitter(options));\n            if (store) {\n                store.add(this.emitter);\n            }\n        }\n        beginUpdate(_observable) {\n            this._counter++;\n        }\n        handlePossibleChange(_observable) {\n        }\n        handleChange(_observable, _change) {\n            this._hasChanged = true;\n        }\n        endUpdate(_observable) {\n            this._counter--;\n            if (this._counter === 0) {\n                this._observable.reportChanges();\n                if (this._hasChanged) {\n                    this._hasChanged = false;\n                    this.emitter.fire(this._observable.get());\n                }\n            }\n        }\n    }\n    function fromObservable(obs, store) {\n        const observer = ( new EmitterObserver(obs, store));\n        return observer.emitter.event;\n    }\n    Event.fromObservable = fromObservable;\n    function fromObservableLight(observable) {\n        return (listener, thisArgs, disposables) => {\n            let count = 0;\n            let didChange = false;\n            const observer = {\n                beginUpdate() {\n                    count++;\n                },\n                endUpdate() {\n                    count--;\n                    if (count === 0) {\n                        observable.reportChanges();\n                        if (didChange) {\n                            didChange = false;\n                            listener.call(thisArgs);\n                        }\n                    }\n                },\n                handlePossibleChange() {\n                },\n                handleChange() {\n                    didChange = true;\n                }\n            };\n            observable.addObserver(observer);\n            observable.reportChanges();\n            const disposable = {\n                dispose() {\n                    observable.removeObserver(observer);\n                }\n            };\n            if (disposables instanceof DisposableStore) {\n                disposables.add(disposable);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(disposable);\n            }\n            return disposable;\n        };\n    }\n    Event.fromObservableLight = fromObservableLight;\n})(Event || (Event = {})));\nclass EventProfiling {\n    static { this.all = ( new Set()); }\n    static { this._idPool = 0; }\n    constructor(name) {\n        this.listenerCount = 0;\n        this.invocationCount = 0;\n        this.elapsedOverall = 0;\n        this.durations = [];\n        this.name = `${name}_${EventProfiling._idPool++}`;\n        EventProfiling.all.add(this);\n    }\n    start(listenerCount) {\n        this._stopWatch = ( new StopWatch());\n        this.listenerCount = listenerCount;\n    }\n    stop() {\n        if (this._stopWatch) {\n            const elapsed = this._stopWatch.elapsed();\n            this.durations.push(elapsed);\n            this.elapsedOverall += elapsed;\n            this.invocationCount += 1;\n            this._stopWatch = undefined;\n        }\n    }\n}\nlet _globalLeakWarningThreshold = -1;\nfunction setGlobalLeakWarningThreshold(n) {\n    const oldValue = _globalLeakWarningThreshold;\n    _globalLeakWarningThreshold = n;\n    return {\n        dispose() {\n            _globalLeakWarningThreshold = oldValue;\n        }\n    };\n}\nclass LeakageMonitor {\n    static { this._idPool = 1; }\n    constructor(_errorHandler, threshold, name = ( (LeakageMonitor._idPool++).toString(16)).padStart(3, '0')) {\n        this._errorHandler = _errorHandler;\n        this.threshold = threshold;\n        this.name = name;\n        this._warnCountdown = 0;\n    }\n    dispose() {\n        this._stacks?.clear();\n    }\n    check(stack, listenerCount) {\n        const threshold = this.threshold;\n        if (threshold <= 0 || listenerCount < threshold) {\n            return undefined;\n        }\n        if (!this._stacks) {\n            this._stacks = ( new Map());\n        }\n        const count = (this._stacks.get(stack.value) || 0);\n        this._stacks.set(stack.value, count + 1);\n        this._warnCountdown -= 1;\n        if (this._warnCountdown <= 0) {\n            this._warnCountdown = threshold * 0.5;\n            const [topStack, topCount] = this.getMostFrequentStack();\n            const message = `[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`;\n            console.warn(message);\n            console.warn(topStack);\n            const error = ( new ListenerLeakError(message, topStack));\n            this._errorHandler(error);\n        }\n        return () => {\n            const count = (this._stacks.get(stack.value) || 0);\n            this._stacks.set(stack.value, count - 1);\n        };\n    }\n    getMostFrequentStack() {\n        if (!this._stacks) {\n            return undefined;\n        }\n        let topStack;\n        let topCount = 0;\n        for (const [stack, count] of this._stacks) {\n            if (!topStack || topCount < count) {\n                topStack = [stack, count];\n                topCount = count;\n            }\n        }\n        return topStack;\n    }\n}\nclass Stacktrace {\n    static create() {\n        const err = ( new Error());\n        return ( new Stacktrace(err.stack ?? ''));\n    }\n    constructor(value) {\n        this.value = value;\n    }\n    print() {\n        console.warn(this.value.split('\\n').slice(2).join('\\n'));\n    }\n}\nclass ListenerLeakError extends Error {\n    constructor(message, stack) {\n        super(message);\n        this.name = 'ListenerLeakError';\n        this.stack = stack;\n    }\n}\nclass ListenerRefusalError extends Error {\n    constructor(message, stack) {\n        super(message);\n        this.name = 'ListenerRefusalError';\n        this.stack = stack;\n    }\n}\nlet id = 0;\nclass UniqueContainer {\n    constructor(value) {\n        this.value = value;\n        this.id = id++;\n    }\n}\nconst compactionThreshold = 2;\nconst forEachListener = (listeners, fn) => {\n    if (listeners instanceof UniqueContainer) {\n        fn(listeners);\n    }\n    else {\n        for (let i = 0; i < listeners.length; i++) {\n            const l = listeners[i];\n            if (l) {\n                fn(l);\n            }\n        }\n    }\n};\nclass Emitter {\n    constructor(options) {\n        this._size = 0;\n        this._options = options;\n        this._leakageMon = (_globalLeakWarningThreshold > 0 || this._options?.leakWarningThreshold)\n            ? ( new LeakageMonitor(\n            options?.onListenerError ?? onUnexpectedError,\n            this._options?.leakWarningThreshold ?? _globalLeakWarningThreshold\n        )) :\n            undefined;\n        this._perfMon = this._options?._profName ? ( new EventProfiling(this._options._profName)) : undefined;\n        this._deliveryQueue = this._options?.deliveryQueue;\n    }\n    dispose() {\n        if (!this._disposed) {\n            this._disposed = true;\n            if (this._deliveryQueue?.current === this) {\n                this._deliveryQueue.reset();\n            }\n            if (this._listeners) {\n                this._listeners = undefined;\n                this._size = 0;\n            }\n            this._options?.onDidRemoveLastListener?.();\n            this._leakageMon?.dispose();\n        }\n    }\n    get event() {\n        this._event ??= (callback, thisArgs, disposables) => {\n            if (this._leakageMon && this._size > this._leakageMon.threshold ** 2) {\n                const message = `[${this._leakageMon.name}] REFUSES to accept new listeners because it exceeded its threshold by far (${this._size} vs ${this._leakageMon.threshold})`;\n                console.warn(message);\n                const tuple = this._leakageMon.getMostFrequentStack() ?? ['UNKNOWN stack', -1];\n                const error = ( new ListenerRefusalError(\n                    `${message}. HINT: Stack shows most frequent listener (${tuple[1]}-times)`,\n                    tuple[0]\n                ));\n                const errorHandler = this._options?.onListenerError || onUnexpectedError;\n                errorHandler(error);\n                return Disposable.None;\n            }\n            if (this._disposed) {\n                return Disposable.None;\n            }\n            if (thisArgs) {\n                callback = callback.bind(thisArgs);\n            }\n            const contained = ( new UniqueContainer(callback));\n            let removeMonitor;\n            if (this._leakageMon && this._size >= Math.ceil(this._leakageMon.threshold * 0.2)) {\n                contained.stack = Stacktrace.create();\n                removeMonitor = this._leakageMon.check(contained.stack, this._size + 1);\n            }\n            if (!this._listeners) {\n                this._options?.onWillAddFirstListener?.(this);\n                this._listeners = contained;\n                this._options?.onDidAddFirstListener?.(this);\n            }\n            else if (this._listeners instanceof UniqueContainer) {\n                this._deliveryQueue ??= ( new EventDeliveryQueuePrivate());\n                this._listeners = [this._listeners, contained];\n            }\n            else {\n                this._listeners.push(contained);\n            }\n            this._size++;\n            const result = toDisposable(() => {\n                removeMonitor?.();\n                this._removeListener(contained);\n            });\n            if (disposables instanceof DisposableStore) {\n                disposables.add(result);\n            }\n            else if (Array.isArray(disposables)) {\n                disposables.push(result);\n            }\n            return result;\n        };\n        return this._event;\n    }\n    _removeListener(listener) {\n        this._options?.onWillRemoveListener?.(this);\n        if (!this._listeners) {\n            return;\n        }\n        if (this._size === 1) {\n            this._listeners = undefined;\n            this._options?.onDidRemoveLastListener?.(this);\n            this._size = 0;\n            return;\n        }\n        const listeners = this._listeners;\n        const index = listeners.indexOf(listener);\n        if (index === -1) {\n            console.log('disposed?', this._disposed);\n            console.log('size?', this._size);\n            console.log('arr?', JSON.stringify(this._listeners));\n            throw ( new Error('Attempted to dispose unknown listener'));\n        }\n        this._size--;\n        listeners[index] = undefined;\n        const adjustDeliveryQueue = this._deliveryQueue.current === this;\n        if (this._size * compactionThreshold <= listeners.length) {\n            let n = 0;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listeners[i]) {\n                    listeners[n++] = listeners[i];\n                }\n                else if (adjustDeliveryQueue) {\n                    this._deliveryQueue.end--;\n                    if (n < this._deliveryQueue.i) {\n                        this._deliveryQueue.i--;\n                    }\n                }\n            }\n            listeners.length = n;\n        }\n    }\n    _deliver(listener, value) {\n        if (!listener) {\n            return;\n        }\n        const errorHandler = this._options?.onListenerError || onUnexpectedError;\n        if (!errorHandler) {\n            listener.value(value);\n            return;\n        }\n        try {\n            listener.value(value);\n        }\n        catch (e) {\n            errorHandler(e);\n        }\n    }\n    _deliverQueue(dq) {\n        const listeners = dq.current._listeners;\n        while (dq.i < dq.end) {\n            this._deliver(listeners[dq.i++], dq.value);\n        }\n        dq.reset();\n    }\n    fire(event) {\n        if (this._deliveryQueue?.current) {\n            this._deliverQueue(this._deliveryQueue);\n            this._perfMon?.stop();\n        }\n        this._perfMon?.start(this._size);\n        if (!this._listeners) ;\n        else if (this._listeners instanceof UniqueContainer) {\n            this._deliver(this._listeners, event);\n        }\n        else {\n            const dq = this._deliveryQueue;\n            dq.enqueue(this, event, this._listeners.length);\n            this._deliverQueue(dq);\n        }\n        this._perfMon?.stop();\n    }\n    hasListeners() {\n        return this._size > 0;\n    }\n}\nconst createEventDeliveryQueue = () => ( new EventDeliveryQueuePrivate());\nclass EventDeliveryQueuePrivate {\n    constructor() {\n        this.i = -1;\n        this.end = 0;\n    }\n    enqueue(emitter, value, end) {\n        this.i = 0;\n        this.end = end;\n        this.current = emitter;\n        this.value = value;\n    }\n    reset() {\n        this.i = this.end;\n        this.current = undefined;\n        this.value = undefined;\n    }\n}\nclass AsyncEmitter extends Emitter {\n    async fireAsync(data, token, promiseJoin) {\n        if (!this._listeners) {\n            return;\n        }\n        if (!this._asyncDeliveryQueue) {\n            this._asyncDeliveryQueue = ( new LinkedList());\n        }\n        forEachListener(this._listeners, listener => this._asyncDeliveryQueue.push([listener.value, data]));\n        while (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n            const [listener, data] = this._asyncDeliveryQueue.shift();\n            const thenables = [];\n            const event = {\n                ...data,\n                token,\n                waitUntil: (p) => {\n                    if (Object.isFrozen(thenables)) {\n                        throw ( new Error('waitUntil can NOT be called asynchronous'));\n                    }\n                    if (promiseJoin) {\n                        p = promiseJoin(p, listener);\n                    }\n                    thenables.push(p);\n                }\n            };\n            try {\n                listener(event);\n            }\n            catch (e) {\n                onUnexpectedError(e);\n                continue;\n            }\n            await Promise.allSettled(thenables).then(values => {\n                for (const value of values) {\n                    if (value.status === 'rejected') {\n                        onUnexpectedError(value.reason);\n                    }\n                }\n            });\n        }\n    }\n}\nclass PauseableEmitter extends Emitter {\n    get isPaused() {\n        return this._isPaused !== 0;\n    }\n    constructor(options) {\n        super(options);\n        this._isPaused = 0;\n        this._eventQueue = ( new LinkedList());\n        this._mergeFn = options?.merge;\n    }\n    pause() {\n        this._isPaused++;\n    }\n    resume() {\n        if (this._isPaused !== 0 && --this._isPaused === 0) {\n            if (this._mergeFn) {\n                if (this._eventQueue.size > 0) {\n                    const events = Array.from(this._eventQueue);\n                    this._eventQueue.clear();\n                    super.fire(this._mergeFn(events));\n                }\n            }\n            else {\n                while (!this._isPaused && this._eventQueue.size !== 0) {\n                    super.fire(this._eventQueue.shift());\n                }\n            }\n        }\n    }\n    fire(event) {\n        if (this._size) {\n            if (this._isPaused !== 0) {\n                this._eventQueue.push(event);\n            }\n            else {\n                super.fire(event);\n            }\n        }\n    }\n}\nclass DebounceEmitter extends PauseableEmitter {\n    constructor(options) {\n        super(options);\n        this._delay = options.delay ?? 100;\n    }\n    fire(event) {\n        if (!this._handle) {\n            this.pause();\n            this._handle = setTimeout(() => {\n                this._handle = undefined;\n                this.resume();\n            }, this._delay);\n        }\n        super.fire(event);\n    }\n}\nclass MicrotaskEmitter extends Emitter {\n    constructor(options) {\n        super(options);\n        this._queuedEvents = [];\n        this._mergeFn = options?.merge;\n    }\n    fire(event) {\n        if (!this.hasListeners()) {\n            return;\n        }\n        this._queuedEvents.push(event);\n        if (this._queuedEvents.length === 1) {\n            queueMicrotask(() => {\n                if (this._mergeFn) {\n                    super.fire(this._mergeFn(this._queuedEvents));\n                }\n                else {\n                    this._queuedEvents.forEach(e => super.fire(e));\n                }\n                this._queuedEvents = [];\n            });\n        }\n    }\n}\nclass EventMultiplexer {\n    constructor() {\n        this.hasListeners = false;\n        this.events = [];\n        this.emitter = ( new Emitter({\n            onWillAddFirstListener: () => this.onFirstListenerAdd(),\n            onDidRemoveLastListener: () => this.onLastListenerRemove()\n        }));\n    }\n    get event() {\n        return this.emitter.event;\n    }\n    add(event) {\n        const e = { event: event, listener: null };\n        this.events.push(e);\n        if (this.hasListeners) {\n            this.hook(e);\n        }\n        const dispose = () => {\n            if (this.hasListeners) {\n                this.unhook(e);\n            }\n            const idx = this.events.indexOf(e);\n            this.events.splice(idx, 1);\n        };\n        return toDisposable(createSingleCallFunction(dispose));\n    }\n    onFirstListenerAdd() {\n        this.hasListeners = true;\n        this.events.forEach(e => this.hook(e));\n    }\n    onLastListenerRemove() {\n        this.hasListeners = false;\n        this.events.forEach(e => this.unhook(e));\n    }\n    hook(e) {\n        e.listener = e.event(r => this.emitter.fire(r));\n    }\n    unhook(e) {\n        e.listener?.dispose();\n        e.listener = null;\n    }\n    dispose() {\n        this.emitter.dispose();\n        for (const e of this.events) {\n            e.listener?.dispose();\n        }\n        this.events = [];\n    }\n}\nclass DynamicListEventMultiplexer {\n    constructor(items, onAddItem, onRemoveItem, getEvent) {\n        this._store = ( new DisposableStore());\n        const multiplexer = this._store.add(( new EventMultiplexer()));\n        const itemListeners = this._store.add(( new DisposableMap()));\n        function addItem(instance) {\n            itemListeners.set(instance, multiplexer.add(getEvent(instance)));\n        }\n        for (const instance of items) {\n            addItem(instance);\n        }\n        this._store.add(onAddItem(instance => {\n            addItem(instance);\n        }));\n        this._store.add(onRemoveItem(instance => {\n            itemListeners.deleteAndDispose(instance);\n        }));\n        this.event = multiplexer.event;\n    }\n    dispose() {\n        this._store.dispose();\n    }\n}\nclass EventBufferer {\n    constructor() {\n        this.data = [];\n    }\n    wrapEvent(event, reduce, initial) {\n        return (listener, thisArgs, disposables) => {\n            return event(i => {\n                const data = this.data[this.data.length - 1];\n                if (!reduce) {\n                    if (data) {\n                        data.buffers.push(() => listener.call(thisArgs, i));\n                    }\n                    else {\n                        listener.call(thisArgs, i);\n                    }\n                    return;\n                }\n                const reduceData = data;\n                if (!reduceData) {\n                    listener.call(thisArgs, reduce(initial, i));\n                    return;\n                }\n                reduceData.items ??= [];\n                reduceData.items.push(i);\n                if (reduceData.buffers.length === 0) {\n                    data.buffers.push(() => {\n                        reduceData.reducedResult ??= initial\n                            ? reduceData.items.reduce(reduce, initial)\n                            : reduceData.items.reduce(reduce);\n                        listener.call(thisArgs, reduceData.reducedResult);\n                    });\n                }\n            }, undefined, disposables);\n        };\n    }\n    bufferEvents(fn) {\n        const data = { buffers: ( new Array()) };\n        this.data.push(data);\n        const r = fn();\n        this.data.pop();\n        data.buffers.forEach(flush => flush());\n        return r;\n    }\n}\nclass Relay {\n    constructor() {\n        this.listening = false;\n        this.inputEvent = Event.None;\n        this.inputEventListener = Disposable.None;\n        this.emitter = ( new Emitter({\n            onDidAddFirstListener: () => {\n                this.listening = true;\n                this.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n            },\n            onDidRemoveLastListener: () => {\n                this.listening = false;\n                this.inputEventListener.dispose();\n            }\n        }));\n        this.event = this.emitter.event;\n    }\n    set input(event) {\n        this.inputEvent = event;\n        if (this.listening) {\n            this.inputEventListener.dispose();\n            this.inputEventListener = event(this.emitter.fire, this.emitter);\n        }\n    }\n    dispose() {\n        this.inputEventListener.dispose();\n        this.emitter.dispose();\n    }\n}\nclass ValueWithChangeEvent {\n    static const(value) {\n        return ( new ConstValueWithChangeEvent(value));\n    }\n    constructor(_value) {\n        this._value = _value;\n        this._onDidChange = ( new Emitter());\n        this.onDidChange = this._onDidChange.event;\n    }\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (value !== this._value) {\n            this._value = value;\n            this._onDidChange.fire(undefined);\n        }\n    }\n}\nclass ConstValueWithChangeEvent {\n    constructor(value) {\n        this.value = value;\n        this.onDidChange = Event.None;\n    }\n}\nexport { AsyncEmitter, DebounceEmitter, DynamicListEventMultiplexer, Emitter, Event, EventBufferer, EventMultiplexer, EventProfiling, ListenerLeakError, ListenerRefusalError, MicrotaskEmitter, PauseableEmitter, Relay, ValueWithChangeEvent, createEventDeliveryQueue, setGlobalLeakWarningThreshold };\n","var Iterable;\n( (function(Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = ( Object.freeze([]));\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function wrap(iterableOrElement) {\n        if (is(iterableOrElement)) {\n            return iterableOrElement;\n        }\n        else {\n            return single(iterableOrElement);\n        }\n    }\n    Iterable.wrap = wrap;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function* reverse(array) {\n        for (let i = array.length - 1; i >= 0; i--) {\n            yield array[i];\n        }\n    }\n    Iterable.reverse = reverse;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        let i = 0;\n        for (const element of iterable) {\n            if (predicate(element, i++)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* flatMap(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield* fn(element, index++);\n        }\n    }\n    Iterable.flatMap = flatMap;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            yield* iterable;\n        }\n    }\n    Iterable.concat = concat;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n    async function asyncToArray(iterable) {\n        const result = [];\n        for await (const item of iterable) {\n            result.push(item);\n        }\n        return Promise.resolve(result);\n    }\n    Iterable.asyncToArray = asyncToArray;\n})(Iterable || (Iterable = {})));\nexport { Iterable };\n","import { compareBy, numberComparator } from './arrays.js';\nimport { groupBy } from './collections.js';\nimport { SetMap } from './map.js';\nimport { createSingleCallFunction } from './functional.js';\nimport { Iterable } from './iterator.js';\nlet disposableTracker = null;\nclass DisposableTracker {\n    constructor() {\n        this.livingDisposables = ( new Map());\n    }\n    static { this.idx = 0; }\n    getDisposableData(d) {\n        let val = this.livingDisposables.get(d);\n        if (!val) {\n            val = { parent: null, source: null, isSingleton: false, value: d, idx: DisposableTracker.idx++ };\n            this.livingDisposables.set(d, val);\n        }\n        return val;\n    }\n    trackDisposable(d) {\n        const data = this.getDisposableData(d);\n        if (!data.source) {\n            data.source =\n                ( new Error()).stack;\n        }\n    }\n    setParent(child, parent) {\n        const data = this.getDisposableData(child);\n        data.parent = parent;\n    }\n    markAsDisposed(x) {\n        this.livingDisposables.delete(x);\n    }\n    markAsSingleton(disposable) {\n        this.getDisposableData(disposable).isSingleton = true;\n    }\n    getRootParent(data, cache) {\n        const cacheValue = cache.get(data);\n        if (cacheValue) {\n            return cacheValue;\n        }\n        const result = data.parent ? this.getRootParent(this.getDisposableData(data.parent), cache) : data;\n        cache.set(data, result);\n        return result;\n    }\n    getTrackedDisposables() {\n        const rootParentCache = ( new Map());\n        const leaking = [...this.livingDisposables.entries()]\n            .filter(([, v]) => v.source !== null && !this.getRootParent(v, rootParentCache).isSingleton)\n            .flatMap(([k]) => k);\n        return leaking;\n    }\n    computeLeakingDisposables(maxReported = 10, preComputedLeaks) {\n        let uncoveredLeakingObjs;\n        if (preComputedLeaks) {\n            uncoveredLeakingObjs = preComputedLeaks;\n        }\n        else {\n            const rootParentCache = ( new Map());\n            const leakingObjects = [...( this.livingDisposables.values())]\n                .filter((info) => info.source !== null && !this.getRootParent(info, rootParentCache).isSingleton);\n            if (leakingObjects.length === 0) {\n                return;\n            }\n            const leakingObjsSet = ( new Set(( leakingObjects.map(o => o.value))));\n            uncoveredLeakingObjs = leakingObjects.filter(l => {\n                return !(l.parent && ( leakingObjsSet.has(l.parent)));\n            });\n            if (uncoveredLeakingObjs.length === 0) {\n                throw ( new Error('There are cyclic diposable chains!'));\n            }\n        }\n        if (!uncoveredLeakingObjs) {\n            return undefined;\n        }\n        function getStackTracePath(leaking) {\n            function removePrefix(array, linesToRemove) {\n                while (array.length > 0 && ( linesToRemove.some(\n                    regexp => typeof regexp === 'string' ? regexp === array[0] : array[0].match(regexp)\n                ))) {\n                    array.shift();\n                }\n            }\n            const lines = ( leaking.source.split('\\n').map(p => p.trim().replace('at ', ''))).filter(l => l !== '');\n            removePrefix(lines, ['Error', /^trackDisposable \\(.*\\)$/, /^DisposableTracker.trackDisposable \\(.*\\)$/]);\n            return lines.reverse();\n        }\n        const stackTraceStarts = ( new SetMap());\n        for (const leaking of uncoveredLeakingObjs) {\n            const stackTracePath = getStackTracePath(leaking);\n            for (let i = 0; i <= stackTracePath.length; i++) {\n                stackTraceStarts.add(stackTracePath.slice(0, i).join('\\n'), leaking);\n            }\n        }\n        uncoveredLeakingObjs.sort(compareBy(l => l.idx, numberComparator));\n        let message = '';\n        let i = 0;\n        for (const leaking of uncoveredLeakingObjs.slice(0, maxReported)) {\n            i++;\n            const stackTracePath = getStackTracePath(leaking);\n            const stackTraceFormattedLines = [];\n            for (let i = 0; i < stackTracePath.length; i++) {\n                let line = stackTracePath[i];\n                const starts = stackTraceStarts.get(stackTracePath.slice(0, i + 1).join('\\n'));\n                line = `(shared with ${starts.size}/${uncoveredLeakingObjs.length} leaks) at ${line}`;\n                const prevStarts = stackTraceStarts.get(stackTracePath.slice(0, i).join('\\n'));\n                const continuations = groupBy(( [...prevStarts].map(d => getStackTracePath(d)[i])), v => v);\n                delete continuations[stackTracePath[i]];\n                for (const [cont, set] of Object.entries(continuations)) {\n                    stackTraceFormattedLines.unshift(`    - stacktraces of ${set.length} other leaks continue with ${cont}`);\n                }\n                stackTraceFormattedLines.unshift(line);\n            }\n            message += `\\n\\n\\n==================== Leaking disposable ${i}/${uncoveredLeakingObjs.length}: ${leaking.value.constructor.name} ====================\\n${stackTraceFormattedLines.join('\\n')}\\n============================================================\\n\\n`;\n        }\n        if (uncoveredLeakingObjs.length > maxReported) {\n            message += `\\n\\n\\n... and ${uncoveredLeakingObjs.length - maxReported} more leaking disposables\\n\\n`;\n        }\n        return { leaks: uncoveredLeakingObjs, details: message };\n    }\n}\nfunction setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nfunction trackDisposable(x) {\n    disposableTracker?.trackDisposable(x);\n    return x;\n}\nfunction markAsDisposed(disposable) {\n    disposableTracker?.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker?.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\nfunction markAsSingleton(singleton) {\n    disposableTracker?.markAsSingleton(singleton);\n    return singleton;\n}\nfunction isDisposable(thing) {\n    return typeof thing === 'object' && thing !== null && typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nfunction dispose(arg) {\n    if (Iterable.is(arg)) {\n        const errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw ( new AggregateError(errors, 'Encountered errors while disposing of store'));\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\nfunction disposeIfDisposable(disposables) {\n    for (const d of disposables) {\n        if (isDisposable(d)) {\n            d.dispose();\n        }\n    }\n    return [];\n}\nfunction combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\nfunction toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: createSingleCallFunction(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\nclass DisposableStore {\n    static { this.DISABLE_DISPOSED_WARNING = false; }\n    constructor() {\n        this._toDispose = ( new Set());\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    clear() {\n        if (this._toDispose.size === 0) {\n            return;\n        }\n        try {\n            dispose(this._toDispose);\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw ( new Error('Cannot register a disposable on itself!'));\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(( new Error(\n                    'Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!'\n                )).stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n    delete(o) {\n        if (!o) {\n            return;\n        }\n        if (o === this) {\n            throw ( new Error('Cannot dispose a disposable on itself!'));\n        }\n        this._toDispose.delete(o);\n        o.dispose();\n    }\n    deleteAndLeak(o) {\n        if (!o) {\n            return;\n        }\n        if (( this._toDispose.has(o))) {\n            this._toDispose.delete(o);\n            setParentOfDisposable(o, null);\n        }\n    }\n}\nclass Disposable {\n    static { this.None = ( Object.freeze({ dispose() { } })); }\n    constructor() {\n        this._store = ( new DisposableStore());\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    _register(o) {\n        if (o === this) {\n            throw ( new Error('Cannot register a disposable on itself!'));\n        }\n        return this._store.add(o);\n    }\n}\nclass MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        this._value?.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        this._isDisposed = true;\n        markAsDisposed(this);\n        this._value?.dispose();\n        this._value = undefined;\n    }\n    clearAndLeak() {\n        const oldValue = this._value;\n        this._value = undefined;\n        if (oldValue) {\n            setParentOfDisposable(oldValue, null);\n        }\n        return oldValue;\n    }\n}\nclass MandatoryMutableDisposable {\n    constructor(initialValue) {\n        this._disposable = ( new MutableDisposable());\n        this._isDisposed = false;\n        this._disposable.value = initialValue;\n    }\n    get value() {\n        return this._disposable.value;\n    }\n    set value(value) {\n        if (this._isDisposed || value === this._disposable.value) {\n            return;\n        }\n        this._disposable.value = value;\n    }\n    dispose() {\n        this._isDisposed = true;\n        this._disposable.dispose();\n    }\n}\nclass RefCountedDisposable {\n    constructor(_disposable) {\n        this._disposable = _disposable;\n        this._counter = 1;\n    }\n    acquire() {\n        this._counter++;\n        return this;\n    }\n    release() {\n        if (--this._counter === 0) {\n            this._disposable.dispose();\n        }\n        return this;\n    }\n}\nclass ReferenceCollection {\n    constructor() {\n        this.references = ( new Map());\n    }\n    acquire(key, ...args) {\n        let reference = this.references.get(key);\n        if (!reference) {\n            reference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n            this.references.set(key, reference);\n        }\n        const { object } = reference;\n        const dispose = createSingleCallFunction(() => {\n            if (--reference.counter === 0) {\n                this.destroyReferencedObject(key, reference.object);\n                this.references.delete(key);\n            }\n        });\n        reference.counter++;\n        return { object, dispose };\n    }\n}\nclass AsyncReferenceCollection {\n    constructor(referenceCollection) {\n        this.referenceCollection = referenceCollection;\n    }\n    async acquire(key, ...args) {\n        const ref = this.referenceCollection.acquire(key, ...args);\n        try {\n            const object = await ref.object;\n            return {\n                object,\n                dispose: () => ref.dispose()\n            };\n        }\n        catch (error) {\n            ref.dispose();\n            throw error;\n        }\n    }\n}\nclass ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\nclass DisposableMap {\n    constructor() {\n        this._store = ( new Map());\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clearAndDisposeAll();\n    }\n    clearAndDisposeAll() {\n        if (!this._store.size) {\n            return;\n        }\n        try {\n            dispose(( this._store.values()));\n        }\n        finally {\n            this._store.clear();\n        }\n    }\n    has(key) {\n        return ( this._store.has(key));\n    }\n    get size() {\n        return this._store.size;\n    }\n    get(key) {\n        return this._store.get(key);\n    }\n    set(key, value, skipDisposeOnOverwrite = false) {\n        if (this._isDisposed) {\n            console.warn(( new Error(\n                'Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!'\n            )).stack);\n        }\n        if (!skipDisposeOnOverwrite) {\n            this._store.get(key)?.dispose();\n        }\n        this._store.set(key, value);\n    }\n    deleteAndDispose(key) {\n        this._store.get(key)?.dispose();\n        this._store.delete(key);\n    }\n    deleteAndLeak(key) {\n        const value = this._store.get(key);\n        this._store.delete(key);\n        return value;\n    }\n    keys() {\n        return ( this._store.keys());\n    }\n    values() {\n        return ( this._store.values());\n    }\n    [Symbol.iterator]() {\n        return this._store[Symbol.iterator]();\n    }\n}\nexport { AsyncReferenceCollection, Disposable, DisposableMap, DisposableStore, DisposableTracker, ImmortalReference, MandatoryMutableDisposable, MutableDisposable, RefCountedDisposable, ReferenceCollection, combinedDisposable, dispose, disposeIfDisposable, isDisposable, markAsDisposed, markAsSingleton, setDisposableTracker, toDisposable, trackDisposable };\n","var _a, _b, _c;\nfunction getOrSet(map, key, value) {\n    let result = map.get(key);\n    if (result === undefined) {\n        result = value;\n        map.set(key, result);\n    }\n    return result;\n}\nclass ResourceMapEntry {\n    constructor(uri, value) {\n        this.uri = uri;\n        this.value = value;\n    }\n}\nfunction isEntries(arg) {\n    return Array.isArray(arg);\n}\nclass ResourceMap {\n    static { this.defaultToKey = (resource) => ( resource.toString()); }\n    constructor(arg, toKey) {\n        this[_a] = 'ResourceMap';\n        if (arg instanceof ResourceMap) {\n            this.map = ( new Map(arg.map));\n            this.toKey = toKey ?? ResourceMap.defaultToKey;\n        }\n        else if (isEntries(arg)) {\n            this.map = ( new Map());\n            this.toKey = toKey ?? ResourceMap.defaultToKey;\n            for (const [resource, value] of arg) {\n                this.set(resource, value);\n            }\n        }\n        else {\n            this.map = ( new Map());\n            this.toKey = arg ?? ResourceMap.defaultToKey;\n        }\n    }\n    set(resource, value) {\n        this.map.set(this.toKey(resource), ( new ResourceMapEntry(resource, value)));\n        return this;\n    }\n    get(resource) {\n        return this.map.get(this.toKey(resource))?.value;\n    }\n    has(resource) {\n        return ( this.map.has(this.toKey(resource)));\n    }\n    get size() {\n        return this.map.size;\n    }\n    clear() {\n        this.map.clear();\n    }\n    delete(resource) {\n        return this.map.delete(this.toKey(resource));\n    }\n    forEach(clb, thisArg) {\n        if (typeof thisArg !== 'undefined') {\n            clb = clb.bind(thisArg);\n        }\n        for (const [_, entry] of this.map) {\n            clb(entry.value, entry.uri, this);\n        }\n    }\n    *values() {\n        for (const entry of ( this.map.values())) {\n            yield entry.value;\n        }\n    }\n    *keys() {\n        for (const entry of ( this.map.values())) {\n            yield entry.uri;\n        }\n    }\n    *entries() {\n        for (const entry of ( this.map.values())) {\n            yield [entry.uri, entry.value];\n        }\n    }\n    *[(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        for (const [, entry] of this.map) {\n            yield [entry.uri, entry.value];\n        }\n    }\n}\nclass ResourceSet {\n    constructor(entriesOrKey, toKey) {\n        this[_b] = 'ResourceSet';\n        if (!entriesOrKey || typeof entriesOrKey === 'function') {\n            this._map = ( new ResourceMap(entriesOrKey));\n        }\n        else {\n            this._map = ( new ResourceMap(toKey));\n            entriesOrKey.forEach(this.add, this);\n        }\n    }\n    get size() {\n        return this._map.size;\n    }\n    add(value) {\n        this._map.set(value, value);\n        return this;\n    }\n    clear() {\n        this._map.clear();\n    }\n    delete(value) {\n        return this._map.delete(value);\n    }\n    forEach(callbackfn, thisArg) {\n        this._map.forEach((_value, key) => callbackfn.call(thisArg, key, key, this));\n    }\n    has(value) {\n        return ( this._map.has(value));\n    }\n    entries() {\n        return this._map.entries();\n    }\n    keys() {\n        return ( this._map.keys());\n    }\n    values() {\n        return ( this._map.keys());\n    }\n    [(_b = Symbol.toStringTag, Symbol.iterator)]() {\n        return ( this.keys());\n    }\n}\nvar Touch;\n( (function(Touch) {\n    Touch[Touch[\"None\"] = 0] = \"None\";\n    Touch[Touch[\"AsOld\"] = 1] = \"AsOld\";\n    Touch[Touch[\"AsNew\"] = 2] = \"AsNew\";\n})(Touch || (Touch = {})));\nclass LinkedMap {\n    constructor() {\n        this[_c] = 'LinkedMap';\n        this._map = ( new Map());\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        return this._head?.value;\n    }\n    get last() {\n        return this._tail?.value;\n    }\n    has(key) {\n        return ( this._map.has(key));\n    }\n    get(key, touch = Touch.None) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== Touch.None) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = Touch.None) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== Touch.None) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case Touch.None:\n                    this.addItemLast(item);\n                    break;\n                case Touch.AsOld:\n                    this.addItemFirst(item);\n                    break;\n                case Touch.AsNew:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw ( new Error('Invalid list'));\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw ( new Error(`LinkedMap got modified during iteration.`));\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw ( new Error(`LinkedMap got modified during iteration.`));\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw ( new Error(`LinkedMap got modified during iteration.`));\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw ( new Error(`LinkedMap got modified during iteration.`));\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_c = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    trimNew(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._tail;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.previous;\n            currentSize--;\n        }\n        this._tail = current;\n        this._size = currentSize;\n        if (current) {\n            current.next = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw ( new Error('Invalid list'));\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw ( new Error('Invalid list'));\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            if (!item.next) {\n                throw ( new Error('Invalid list'));\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            if (!item.previous) {\n                throw ( new Error('Invalid list'));\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw ( new Error('Invalid list'));\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw ( new Error('Invalid list'));\n        }\n        if ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n            return;\n        }\n        if (touch === Touch.AsOld) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            if (item === this._tail) {\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === Touch.AsNew) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            if (item === this._head) {\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nclass Cache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get ratio() {\n        return this._ratio;\n    }\n    set ratio(ratio) {\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n        this.checkTrim();\n    }\n    get(key, touch = Touch.AsNew) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, Touch.None);\n    }\n    set(key, value) {\n        super.set(key, value, Touch.AsNew);\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trim(Math.round(this._limit * this._ratio));\n        }\n    }\n}\nclass LRUCache extends Cache {\n    constructor(limit, ratio = 1) {\n        super(limit, ratio);\n    }\n    trim(newSize) {\n        this.trimOld(newSize);\n    }\n    set(key, value) {\n        super.set(key, value);\n        this.checkTrim();\n        return this;\n    }\n}\nclass MRUCache extends Cache {\n    constructor(limit, ratio = 1) {\n        super(limit, ratio);\n    }\n    trim(newSize) {\n        this.trimNew(newSize);\n    }\n    set(key, value) {\n        if (this._limit <= this.size && !( this.has(key))) {\n            this.trim(Math.round(this._limit * this._ratio) - 1);\n        }\n        super.set(key, value);\n        return this;\n    }\n}\nclass CounterSet {\n    constructor() {\n        this.map = ( new Map());\n    }\n    add(value) {\n        this.map.set(value, (this.map.get(value) || 0) + 1);\n        return this;\n    }\n    delete(value) {\n        let counter = this.map.get(value) || 0;\n        if (counter === 0) {\n            return false;\n        }\n        counter--;\n        if (counter === 0) {\n            this.map.delete(value);\n        }\n        else {\n            this.map.set(value, counter);\n        }\n        return true;\n    }\n    has(value) {\n        return ( this.map.has(value));\n    }\n}\nclass BidirectionalMap {\n    constructor(entries) {\n        this._m1 = ( new Map());\n        this._m2 = ( new Map());\n        if (entries) {\n            for (const [key, value] of entries) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this._m1.clear();\n        this._m2.clear();\n    }\n    set(key, value) {\n        this._m1.set(key, value);\n        this._m2.set(value, key);\n    }\n    get(key) {\n        return this._m1.get(key);\n    }\n    getKey(value) {\n        return this._m2.get(value);\n    }\n    delete(key) {\n        const value = this._m1.get(key);\n        if (value === undefined) {\n            return false;\n        }\n        this._m1.delete(key);\n        this._m2.delete(value);\n        return true;\n    }\n    forEach(callbackfn, thisArg) {\n        this._m1.forEach((value, key) => {\n            callbackfn.call(thisArg, value, key, this);\n        });\n    }\n    keys() {\n        return ( this._m1.keys());\n    }\n    values() {\n        return ( this._m1.values());\n    }\n}\nclass SetMap {\n    constructor() {\n        this.map = ( new Map());\n    }\n    add(key, value) {\n        let values = this.map.get(key);\n        if (!values) {\n            values = ( new Set());\n            this.map.set(key, values);\n        }\n        values.add(value);\n    }\n    delete(key, value) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.delete(value);\n        if (values.size === 0) {\n            this.map.delete(key);\n        }\n    }\n    forEach(key, fn) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.forEach(fn);\n    }\n    get(key) {\n        const values = this.map.get(key);\n        if (!values) {\n            return ( new Set());\n        }\n        return values;\n    }\n}\nfunction mapsStrictEqualIgnoreOrder(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const [key, value] of a) {\n        if (!( b.has(key)) || b.get(key) !== value) {\n            return false;\n        }\n    }\n    for (const [key] of b) {\n        if (!( a.has(key))) {\n            return false;\n        }\n    }\n    return true;\n}\nexport { BidirectionalMap, CounterSet, LRUCache, LinkedMap, MRUCache, ResourceMap, ResourceSet, SetMap, Touch, getOrSet, mapsStrictEqualIgnoreOrder };\n","import { LRUCachedFunction } from './cache.js';\nimport { CharCode } from './charCode.js';\nimport { Lazy } from './lazy.js';\nimport { Constants } from './uint.js';\nfunction isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\nfunction format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\nconst _format2Regexp = /{([^}]+)}/g;\nfunction format2(template, values) {\n    if (( Object.keys(values)).length === 0) {\n        return template;\n    }\n    return template.replace(_format2Regexp, (match, group) => (values[group] ?? match));\n}\nfunction htmlAttributeEncodeValue(value) {\n    return value.replace(/[<>\"'&]/g, ch => {\n        switch (ch) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '\"': return '&quot;';\n            case '\\'': return '&apos;';\n            case '&': return '&amp;';\n        }\n        return ch;\n    });\n}\nfunction escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\nfunction escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\nfunction count(value, substr) {\n    let result = 0;\n    let index = value.indexOf(substr);\n    while (index !== -1) {\n        result++;\n        index = value.indexOf(substr, index + substr.length);\n    }\n    return result;\n}\nfunction truncate(value, maxLength, suffix = '…') {\n    if (value.length <= maxLength) {\n        return value;\n    }\n    return `${value.substr(0, maxLength)}${suffix}`;\n}\nfunction truncateMiddle(value, maxLength, suffix = '…') {\n    if (value.length <= maxLength) {\n        return value;\n    }\n    const prefixLength = Math.ceil(maxLength / 2) - suffix.length / 2;\n    const suffixLength = Math.floor(maxLength / 2) - suffix.length / 2;\n    return `${value.substr(0, prefixLength)}${suffix}${value.substr(value.length - suffixLength)}`;\n}\nfunction trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\nfunction ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\nfunction rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nfunction convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nfunction stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nfunction createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw ( new Error('Cannot create regex from empty string'));\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return ( new RegExp(searchString, modifiers));\n}\nfunction regExpLeadsToEndlessLoop(regexp) {\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nfunction splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\nfunction splitLinesIncludeSeparators(str) {\n    const linesWithSeparators = [];\n    const splitLinesAndSeparators = str.split(/(\\r\\n|\\r|\\n)/);\n    for (let i = 0; i < Math.ceil(splitLinesAndSeparators.length / 2); i++) {\n        linesWithSeparators.push(splitLinesAndSeparators[2 * i] + (splitLinesAndSeparators[2 * i + 1] ?? ''));\n    }\n    return linesWithSeparators;\n}\nfunction firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\nfunction lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction replaceAsync(str, search, replacer) {\n    const parts = [];\n    let last = 0;\n    for (const match of str.matchAll(search)) {\n        parts.push(str.slice(last, match.index));\n        if (match.index === undefined) {\n            throw ( new Error('match.index should be defined'));\n        }\n        last = match.index + match[0].length;\n        parts.push(replacer(match[0], ...match.slice(1), match.index, str, match.groups));\n    }\n    parts.push(str.slice(last));\n    return Promise.all(parts).then(p => p.join(''));\n}\nfunction compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nfunction compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nfunction compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nfunction compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nfunction isAsciiDigit(code) {\n    return code >= CharCode.Digit0 && code <= CharCode.Digit9;\n}\nfunction isLowerAsciiLetter(code) {\n    return code >= CharCode.a && code <= CharCode.z;\n}\nfunction isUpperAsciiLetter(code) {\n    return code >= CharCode.A && code <= CharCode.Z;\n}\nfunction equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nfunction startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\nfunction commonPrefixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\nfunction commonSuffixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\nfunction isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\nfunction isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\nfunction computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\nfunction getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nclass CodePointIterator {\n    get offset() {\n        return this._offset;\n    }\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nclass GraphemeIterator {\n    get offset() {\n        return this._iterator.offset;\n    }\n    constructor(str, offset = 0) {\n        this._iterator = ( new CodePointIterator(str, offset));\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nfunction nextCharLength(str, initialOffset) {\n    const iterator = ( new GraphemeIterator(str, initialOffset));\n    return iterator.nextGraphemeLength();\n}\nfunction prevCharLength(str, initialOffset) {\n    const iterator = ( new GraphemeIterator(str, initialOffset));\n    return iterator.prevGraphemeLength();\n}\nfunction getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\nlet CONTAINS_RTL = undefined;\nfunction makeContainsRtl() {\n    return /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\nfunction containsRTL(str) {\n    if (!CONTAINS_RTL) {\n        CONTAINS_RTL = makeContainsRtl();\n    }\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\nfunction isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nconst UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/;\nfunction containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nfunction isFullWidthCharacter(charCode) {\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\nfunction isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\nfunction lcut(text, n, prefix = '') {\n    const trimmed = text.trimStart();\n    if (trimmed.length < n) {\n        return trimmed;\n    }\n    const re = /\\b/g;\n    let i = 0;\n    while (re.test(trimmed)) {\n        if (trimmed.length - re.lastIndex < n) {\n            break;\n        }\n        i = re.lastIndex;\n        re.lastIndex += 1;\n    }\n    if (i === 0) {\n        return trimmed;\n    }\n    return prefix + trimmed.substring(i).trimStart();\n}\nconst CSI_SEQUENCE = /(?:(?:\\x1b\\[|\\x9B)[=?>!]?[\\d;:]*[\"$#'* ]?[a-zA-Z@^`{}|~])|(:?\\x1b\\].*?\\x07)/g;\nfunction* forAnsiStringParts(str) {\n    let last = 0;\n    for (const match of str.matchAll(CSI_SEQUENCE)) {\n        if (last !== match.index) {\n            yield { isCode: false, str: str.substring(last, match.index) };\n        }\n        yield { isCode: true, str: match[0] };\n        last = match.index + match[0].length;\n    }\n    if (last !== str.length) {\n        yield { isCode: false, str: str.substring(last) };\n    }\n}\nfunction removeAnsiEscapeCodes(str) {\n    if (str) {\n        str = str.replace(CSI_SEQUENCE, '');\n    }\n    return str;\n}\nconst PROMPT_NON_PRINTABLE = /\\\\\\[.*?\\\\\\]/g;\nfunction removeAnsiEscapeCodesFromPrompt(str) {\n    return removeAnsiEscapeCodes(str).replace(PROMPT_NON_PRINTABLE, '');\n}\nconst UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\nfunction startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\nfunction fuzzyContains(target, query) {\n    if (!target || !query) {\n        return false;\n    }\n    if (target.length < query.length) {\n        return false;\n    }\n    const queryLen = query.length;\n    const targetLower = target.toLowerCase();\n    let index = 0;\n    let lastIndexOf = -1;\n    while (index < queryLen) {\n        const indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n        if (indexOf < 0) {\n            return false;\n        }\n        lastIndexOf = indexOf;\n        index++;\n    }\n    return true;\n}\nfunction containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\nfunction uppercaseFirstLetter(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nfunction getNLines(str, n = 1) {\n    if (n === 0) {\n        return '';\n    }\n    let idx = -1;\n    do {\n        idx = str.indexOf('\\n', idx + 1);\n        n--;\n    } while (n > 0 && idx >= 0);\n    if (idx === -1) {\n        return str;\n    }\n    if (str[idx - 1] === '\\r') {\n        idx--;\n    }\n    return str.substr(0, idx);\n}\nfunction singleLetterHash(n) {\n    const LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(CharCode.a + n);\n    }\n    return String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    if (breakTypeA === GraphemeBreakType.Other) {\n        return (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n    }\n    if (breakTypeA === GraphemeBreakType.CR) {\n        if (breakTypeB === GraphemeBreakType.LF) {\n            return false;\n        }\n    }\n    if (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n        return true;\n    }\n    if (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n        return true;\n    }\n    if (breakTypeA === GraphemeBreakType.L) {\n        if (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n            return false;\n        }\n    }\n    if (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n        if (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n            return false;\n        }\n    }\n    if (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n        if (breakTypeB === GraphemeBreakType.T) {\n            return false;\n        }\n    }\n    if (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n        return false;\n    }\n    if (breakTypeB === GraphemeBreakType.SpacingMark) {\n        return false;\n    }\n    if (breakTypeA === GraphemeBreakType.Prepend) {\n        return false;\n    }\n    if (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n        return false;\n    }\n    if (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n        return false;\n    }\n    return true;\n}\nvar GraphemeBreakType;\n( (function(GraphemeBreakType) {\n    GraphemeBreakType[GraphemeBreakType[\"Other\"] = 0] = \"Other\";\n    GraphemeBreakType[GraphemeBreakType[\"Prepend\"] = 1] = \"Prepend\";\n    GraphemeBreakType[GraphemeBreakType[\"CR\"] = 2] = \"CR\";\n    GraphemeBreakType[GraphemeBreakType[\"LF\"] = 3] = \"LF\";\n    GraphemeBreakType[GraphemeBreakType[\"Control\"] = 4] = \"Control\";\n    GraphemeBreakType[GraphemeBreakType[\"Extend\"] = 5] = \"Extend\";\n    GraphemeBreakType[GraphemeBreakType[\"Regional_Indicator\"] = 6] = \"Regional_Indicator\";\n    GraphemeBreakType[GraphemeBreakType[\"SpacingMark\"] = 7] = \"SpacingMark\";\n    GraphemeBreakType[GraphemeBreakType[\"L\"] = 8] = \"L\";\n    GraphemeBreakType[GraphemeBreakType[\"V\"] = 9] = \"V\";\n    GraphemeBreakType[GraphemeBreakType[\"T\"] = 10] = \"T\";\n    GraphemeBreakType[GraphemeBreakType[\"LV\"] = 11] = \"LV\";\n    GraphemeBreakType[GraphemeBreakType[\"LVT\"] = 12] = \"LVT\";\n    GraphemeBreakType[GraphemeBreakType[\"ZWJ\"] = 13] = \"ZWJ\";\n    GraphemeBreakType[GraphemeBreakType[\"Extended_Pictographic\"] = 14] = \"Extended_Pictographic\";\n})(GraphemeBreakType || (GraphemeBreakType = {})));\nclass GraphemeBreakTree {\n    static { this._INSTANCE = null; }\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = ( new GraphemeBreakTree());\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    getGraphemeBreakType(codePoint) {\n        if (codePoint < 32) {\n            if (codePoint === CharCode.LineFeed) {\n                return GraphemeBreakType.LF;\n            }\n            if (codePoint === CharCode.CarriageReturn) {\n                return GraphemeBreakType.CR;\n            }\n            return GraphemeBreakType.Control;\n        }\n        if (codePoint < 127) {\n            return GraphemeBreakType.Other;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return GraphemeBreakType.Other;\n    }\n}\nfunction getGraphemeBreakRawData() {\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\nfunction getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    const iterator = ( new CodePointIterator(str, offset));\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    const iterator = ( new CodePointIterator(str, initialOffset));\n    let codePoint = iterator.prevCodePoint();\n    while ((isEmojiModifier(codePoint) || codePoint === CodePoint.emojiVariantSelector || codePoint === CodePoint.enclosingKeyCap)) {\n        if (iterator.offset === 0) {\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    if (!isEmojiImprecise(codePoint)) {\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === CodePoint.zwj) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nvar CodePoint;\n( (function(CodePoint) {\n    CodePoint[CodePoint[\"zwj\"] = 8205] = \"zwj\";\n    CodePoint[CodePoint[\"emojiVariantSelector\"] = 65039] = \"emojiVariantSelector\";\n    CodePoint[CodePoint[\"enclosingKeyCap\"] = 8419] = \"enclosingKeyCap\";\n})(CodePoint || (CodePoint = {})));\nconst noBreakWhitespace = '\\xa0';\nclass AmbiguousCharacters {\n    static { this.ambiguousCharacterData = ( new Lazy(() => {\n        return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n    })); }\n    static { this.cache = ( new LRUCachedFunction({ getCacheKey: JSON.stringify }, (locales) => {\n        function arrayToMap(arr) {\n            const result = ( new Map());\n            for (let i = 0; i < arr.length; i += 2) {\n                result.set(arr[i], arr[i + 1]);\n            }\n            return result;\n        }\n        function mergeMaps(map1, map2) {\n            const result = ( new Map(map1));\n            for (const [key, value] of map2) {\n                result.set(key, value);\n            }\n            return result;\n        }\n        function intersectMaps(map1, map2) {\n            if (!map1) {\n                return map2;\n            }\n            const result = ( new Map());\n            for (const [key, value] of map1) {\n                if (( map2.has(key))) {\n                    result.set(key, value);\n                }\n            }\n            return result;\n        }\n        const data = this.ambiguousCharacterData.value;\n        let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n        if (filteredLocales.length === 0) {\n            filteredLocales = ['_default'];\n        }\n        let languageSpecificMap = undefined;\n        for (const locale of filteredLocales) {\n            const map = arrayToMap(data[locale]);\n            languageSpecificMap = intersectMaps(languageSpecificMap, map);\n        }\n        const commonMap = arrayToMap(data['_common']);\n        const map = mergeMaps(commonMap, languageSpecificMap);\n        return ( new AmbiguousCharacters(map));\n    })); }\n    static getInstance(locales) {\n        return AmbiguousCharacters.cache.get(Array.from(locales));\n    }\n    static { this._locales = ( new Lazy(() => ( Object.keys(AmbiguousCharacters.ambiguousCharacterData.value)).filter((k) => !k.startsWith('_')))); }\n    static getLocales() {\n        return AmbiguousCharacters._locales.value;\n    }\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    isAmbiguous(codePoint) {\n        return ( this.confusableDictionary.has(codePoint));\n    }\n    containsAmbiguousCharacter(str) {\n        for (let i = 0; i < str.length; i++) {\n            const codePoint = str.codePointAt(i);\n            if (typeof codePoint === 'number' && this.isAmbiguous(codePoint)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return ( new Set(( this.confusableDictionary.keys())));\n    }\n}\nclass InvisibleCharacters {\n    static getRawData() {\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static { this._data = undefined; }\n    static getData() {\n        if (!this._data) {\n            this._data = ( new Set(InvisibleCharacters.getRawData()));\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return ( InvisibleCharacters.getData().has(codePoint));\n    }\n    static containsInvisibleCharacter(str) {\n        for (let i = 0; i < str.length; i++) {\n            const codePoint = str.codePointAt(i);\n            if (typeof codePoint === 'number' && InvisibleCharacters.isInvisibleCharacter(codePoint)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\nexport { AmbiguousCharacters, CodePointIterator, GraphemeBreakType, GraphemeIterator, InvisibleCharacters, UNUSUAL_LINE_TERMINATORS, UTF8_BOM_CHARACTER, commonPrefixLength, commonSuffixLength, compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase, computeCodePoint, containsRTL, containsUnusualLineTerminators, containsUppercaseCharacter, convertSimple2RegExpPattern, count, createRegExp, equalsIgnoreCase, escape, escapeRegExpCharacters, firstNonWhitespaceIndex, forAnsiStringParts, format, format2, fuzzyContains, getCharContainingOffset, getLeadingWhitespace, getLeftDeleteOffset, getNLines, getNextCodePoint, htmlAttributeEncodeValue, isAsciiDigit, isBasicASCII, isEmojiImprecise, isFalsyOrWhitespace, isFullWidthCharacter, isHighSurrogate, isLowSurrogate, isLowerAsciiLetter, isUpperAsciiLetter, lastNonWhitespaceIndex, lcut, ltrim, nextCharLength, noBreakWhitespace, prevCharLength, regExpLeadsToEndlessLoop, removeAnsiEscapeCodes, removeAnsiEscapeCodesFromPrompt, replaceAsync, rtrim, singleLetterHash, splitLines, splitLinesIncludeSeparators, startsWithIgnoreCase, startsWithUTF8BOM, stripWildcards, trim, truncate, truncateMiddle, uppercaseFirstLetter };\n","function isString(str) {\n    return (typeof str === 'string');\n}\nfunction isStringArray(value) {\n    return Array.isArray(value) && value.every(elem => isString(elem));\n}\nfunction isObject(obj) {\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\nfunction isTypedArray(obj) {\n    const TypedArray = Object.getPrototypeOf(Uint8Array);\n    return typeof obj === 'object'\n        && obj instanceof TypedArray;\n}\nfunction isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\nfunction isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\nfunction isBoolean(obj) {\n    return (obj === true || obj === false);\n}\nfunction isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\nfunction isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\nfunction isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nfunction assertType(condition, type) {\n    if (!condition) {\n        throw ( new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type'));\n    }\n}\nfunction assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw ( new Error('Assertion Failed: argument is undefined or null'));\n    }\n    return arg;\n}\nfunction assertAllDefined(...args) {\n    const result = [];\n    for (let i = 0; i < args.length; i++) {\n        const arg = args[i];\n        if (isUndefinedOrNull(arg)) {\n            throw ( new Error(`Assertion Failed: argument at index ${i} is undefined or null`));\n        }\n        result.push(arg);\n    }\n    return result;\n}\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction isEmptyObject(obj) {\n    if (!isObject(obj)) {\n        return false;\n    }\n    for (const key in obj) {\n        if (hasOwnProperty.call(obj, key)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction isFunction(obj) {\n    return (typeof obj === 'function');\n}\nfunction areFunctions(...objects) {\n    return objects.length > 0 && objects.every(isFunction);\n}\nfunction validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nfunction validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw ( new Error(`argument does not match constraint: typeof ${constraint}`));\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch {\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw ( new Error(\n            `argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`\n        ));\n    }\n}\nexport { areFunctions, assertAllDefined, assertIsDefined, assertType, isBoolean, isDefined, isEmptyObject, isFunction, isIterable, isNumber, isObject, isString, isStringArray, isTypedArray, isUndefined, isUndefinedOrNull, validateConstraint, validateConstraints };\n","var Constants;\n( (function(Constants) {\n    Constants[Constants[\"MAX_SAFE_SMALL_INTEGER\"] = 1073741824] = \"MAX_SAFE_SMALL_INTEGER\";\n    Constants[Constants[\"MIN_SAFE_SMALL_INTEGER\"] = -1073741824] = \"MIN_SAFE_SMALL_INTEGER\";\n    Constants[Constants[\"MAX_UINT_8\"] = 255] = \"MAX_UINT_8\";\n    Constants[Constants[\"MAX_UINT_16\"] = 65535] = \"MAX_UINT_16\";\n    Constants[Constants[\"MAX_UINT_32\"] = 4294967295] = \"MAX_UINT_32\";\n    Constants[Constants[\"UNICODE_SUPPLEMENTARY_PLANE_BEGIN\"] = 65536] = \"UNICODE_SUPPLEMENTARY_PLANE_BEGIN\";\n})(Constants || (Constants = {})));\nfunction toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > Constants.MAX_UINT_8) {\n        return Constants.MAX_UINT_8;\n    }\n    return v | 0;\n}\nfunction toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > Constants.MAX_UINT_32) {\n        return Constants.MAX_UINT_32;\n    }\n    return v | 0;\n}\nexport { Constants, toUint32, toUint8 };\n","var LanguageId;\n( (function(LanguageId) {\n    LanguageId[LanguageId[\"Null\"] = 0] = \"Null\";\n    LanguageId[LanguageId[\"PlainText\"] = 1] = \"PlainText\";\n})(LanguageId || (LanguageId = {})));\nvar FontStyle;\n( (function(FontStyle) {\n    FontStyle[FontStyle[\"NotSet\"] = -1] = \"NotSet\";\n    FontStyle[FontStyle[\"None\"] = 0] = \"None\";\n    FontStyle[FontStyle[\"Italic\"] = 1] = \"Italic\";\n    FontStyle[FontStyle[\"Bold\"] = 2] = \"Bold\";\n    FontStyle[FontStyle[\"Underline\"] = 4] = \"Underline\";\n    FontStyle[FontStyle[\"Strikethrough\"] = 8] = \"Strikethrough\";\n})(FontStyle || (FontStyle = {})));\nvar ColorId;\n( (function(ColorId) {\n    ColorId[ColorId[\"None\"] = 0] = \"None\";\n    ColorId[ColorId[\"DefaultForeground\"] = 1] = \"DefaultForeground\";\n    ColorId[ColorId[\"DefaultBackground\"] = 2] = \"DefaultBackground\";\n})(ColorId || (ColorId = {})));\nvar StandardTokenType;\n( (function(StandardTokenType) {\n    StandardTokenType[StandardTokenType[\"Other\"] = 0] = \"Other\";\n    StandardTokenType[StandardTokenType[\"Comment\"] = 1] = \"Comment\";\n    StandardTokenType[StandardTokenType[\"String\"] = 2] = \"String\";\n    StandardTokenType[StandardTokenType[\"RegEx\"] = 3] = \"RegEx\";\n})(StandardTokenType || (StandardTokenType = {})));\nvar MetadataConsts;\n( (function(MetadataConsts) {\n    MetadataConsts[MetadataConsts[\"LANGUAGEID_MASK\"] = 255] = \"LANGUAGEID_MASK\";\n    MetadataConsts[MetadataConsts[\"TOKEN_TYPE_MASK\"] = 768] = \"TOKEN_TYPE_MASK\";\n    MetadataConsts[MetadataConsts[\"BALANCED_BRACKETS_MASK\"] = 1024] = \"BALANCED_BRACKETS_MASK\";\n    MetadataConsts[MetadataConsts[\"FONT_STYLE_MASK\"] = 30720] = \"FONT_STYLE_MASK\";\n    MetadataConsts[MetadataConsts[\"FOREGROUND_MASK\"] = 16744448] = \"FOREGROUND_MASK\";\n    MetadataConsts[MetadataConsts[\"BACKGROUND_MASK\"] = 4278190080] = \"BACKGROUND_MASK\";\n    MetadataConsts[MetadataConsts[\"ITALIC_MASK\"] = 2048] = \"ITALIC_MASK\";\n    MetadataConsts[MetadataConsts[\"BOLD_MASK\"] = 4096] = \"BOLD_MASK\";\n    MetadataConsts[MetadataConsts[\"UNDERLINE_MASK\"] = 8192] = \"UNDERLINE_MASK\";\n    MetadataConsts[MetadataConsts[\"STRIKETHROUGH_MASK\"] = 16384] = \"STRIKETHROUGH_MASK\";\n    MetadataConsts[MetadataConsts[\"SEMANTIC_USE_ITALIC\"] = 1] = \"SEMANTIC_USE_ITALIC\";\n    MetadataConsts[MetadataConsts[\"SEMANTIC_USE_BOLD\"] = 2] = \"SEMANTIC_USE_BOLD\";\n    MetadataConsts[MetadataConsts[\"SEMANTIC_USE_UNDERLINE\"] = 4] = \"SEMANTIC_USE_UNDERLINE\";\n    MetadataConsts[MetadataConsts[\"SEMANTIC_USE_STRIKETHROUGH\"] = 8] = \"SEMANTIC_USE_STRIKETHROUGH\";\n    MetadataConsts[MetadataConsts[\"SEMANTIC_USE_FOREGROUND\"] = 16] = \"SEMANTIC_USE_FOREGROUND\";\n    MetadataConsts[MetadataConsts[\"SEMANTIC_USE_BACKGROUND\"] = 32] = \"SEMANTIC_USE_BACKGROUND\";\n    MetadataConsts[MetadataConsts[\"LANGUAGEID_OFFSET\"] = 0] = \"LANGUAGEID_OFFSET\";\n    MetadataConsts[MetadataConsts[\"TOKEN_TYPE_OFFSET\"] = 8] = \"TOKEN_TYPE_OFFSET\";\n    MetadataConsts[MetadataConsts[\"BALANCED_BRACKETS_OFFSET\"] = 10] = \"BALANCED_BRACKETS_OFFSET\";\n    MetadataConsts[MetadataConsts[\"FONT_STYLE_OFFSET\"] = 11] = \"FONT_STYLE_OFFSET\";\n    MetadataConsts[MetadataConsts[\"FOREGROUND_OFFSET\"] = 15] = \"FOREGROUND_OFFSET\";\n    MetadataConsts[MetadataConsts[\"BACKGROUND_OFFSET\"] = 24] = \"BACKGROUND_OFFSET\";\n})(MetadataConsts || (MetadataConsts = {})));\nclass TokenMetadata {\n    static getLanguageId(metadata) {\n        return (metadata & MetadataConsts.LANGUAGEID_MASK) >>> MetadataConsts.LANGUAGEID_OFFSET;\n    }\n    static getTokenType(metadata) {\n        return (metadata & MetadataConsts.TOKEN_TYPE_MASK) >>> MetadataConsts.TOKEN_TYPE_OFFSET;\n    }\n    static containsBalancedBrackets(metadata) {\n        return (metadata & MetadataConsts.BALANCED_BRACKETS_MASK) !== 0;\n    }\n    static getFontStyle(metadata) {\n        return (metadata & MetadataConsts.FONT_STYLE_MASK) >>> MetadataConsts.FONT_STYLE_OFFSET;\n    }\n    static getForeground(metadata) {\n        return (metadata & MetadataConsts.FOREGROUND_MASK) >>> MetadataConsts.FOREGROUND_OFFSET;\n    }\n    static getBackground(metadata) {\n        return (metadata & MetadataConsts.BACKGROUND_MASK) >>> MetadataConsts.BACKGROUND_OFFSET;\n    }\n    static getClassNameFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        let className = 'mtk' + foreground;\n        const fontStyle = this.getFontStyle(metadata);\n        if (fontStyle & FontStyle.Italic) {\n            className += ' mtki';\n        }\n        if (fontStyle & FontStyle.Bold) {\n            className += ' mtkb';\n        }\n        if (fontStyle & FontStyle.Underline) {\n            className += ' mtku';\n        }\n        if (fontStyle & FontStyle.Strikethrough) {\n            className += ' mtks';\n        }\n        return className;\n    }\n    static getInlineStyleFromMetadata(metadata, colorMap) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        let result = `color: ${colorMap[foreground]};`;\n        if (fontStyle & FontStyle.Italic) {\n            result += 'font-style: italic;';\n        }\n        if (fontStyle & FontStyle.Bold) {\n            result += 'font-weight: bold;';\n        }\n        let textDecoration = '';\n        if (fontStyle & FontStyle.Underline) {\n            textDecoration += ' underline';\n        }\n        if (fontStyle & FontStyle.Strikethrough) {\n            textDecoration += ' line-through';\n        }\n        if (textDecoration) {\n            result += `text-decoration:${textDecoration};`;\n        }\n        return result;\n    }\n    static getPresentationFromMetadata(metadata) {\n        const foreground = this.getForeground(metadata);\n        const fontStyle = this.getFontStyle(metadata);\n        return {\n            foreground: foreground,\n            italic: Boolean(fontStyle & FontStyle.Italic),\n            bold: Boolean(fontStyle & FontStyle.Bold),\n            underline: Boolean(fontStyle & FontStyle.Underline),\n            strikethrough: Boolean(fontStyle & FontStyle.Strikethrough),\n        };\n    }\n}\nexport { ColorId, FontStyle, LanguageId, MetadataConsts, StandardTokenType, TokenMetadata };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [857], () => (__webpack_require__(3089)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".main.js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var scriptUrl;\nif (typeof import.meta.url === \"string\") scriptUrl = import.meta.url\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t35: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkexample_client_webpack\"] = self[\"webpackChunkexample_client_webpack\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","next","getAllMethodNames","obj","methods","prop","res","Object","prototype","concat","getOwnPropertyNames","getPrototypeOf","getAllPropertyNames","push","hasOwnProperty","isPseudo","document","location","hash","indexOf","initialized","translations","path","data","defaultMessage","args","key","message","result","length","replace","match","rest","index","arg","String","_format","LANGUAGE_DEFAULT","_locale","_userAgent","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isIOS","_isCI","_isMobile","_language","_platformLocale","_translationsConfigFile","$globalThis","globalThis","nodeProcess","vscode","process","versions","node","isElectronRenderer","electron","type","platform","env","rawNlsConfig","nlsConfig","JSON","parse","resolved","availableLanguages","locale","osLocale","e","navigator","console","error","userAgent","maxTouchPoints","language","Platform","_platform","Web","Mac","Windows","Linux","isWindows","isMacintosh","importScripts","origin","Language","value","isDefaultVariant","isDefault","setTimeout0IsFaster","postMessage","OperatingSystem","pending","addEventListener","vscodeScheduleAsyncWork","i","len","candidate","id","splice","callback","lastId","Macintosh","isChrome","MessageType","SHA1Constant","RequestMessage","constructor","vsWorker","req","method","this","Request","ReplyMessage","seq","err","Reply","SubscribeEventMessage","eventName","SubscribeEvent","EventMessage","event","Event","UnsubscribeEventMessage","UnsubscribeEvent","SimpleWorkerProtocol","handler","_workerId","_handler","_lastSentReq","_pendingReplies","create","_pendingEmitters","Map","_pendingEvents","setWorkerId","workerId","sendMessage","Promise","resolve","reject","_send","listen","emitter","onWillAddFirstListener","set","onDidRemoveLastListener","delete","handleMessage","_handleMessage","msg","_handleReplyMessage","_handleRequestMessage","_handleSubscribeEventMessage","_handleEventMessage","_handleUnsubscribeEventMessage","replyMessage","warn","reply","$isError","Error","name","stack","requestMessage","then","r","undefined","detail","disposable","handleEvent","has","get","fire","dispose","transfer","ArrayBuffer","propertyIsEvent","charCodeAt","propertyIsDynamicEvent","test","SimpleWorkerServer","requestHandlerFactory","_requestHandlerFactory","_requestHandler","_protocol","_handleEvent","onmessage","initialize","apply","call","loaderConfig","moduleId","hostMethods","hostProxy","methodNames","invoke","proxyListen","createProxyMethod","Array","slice","arguments","createProxyDynamicEvent","methodName","baseUrl","paths","vs","trustedTypesPolicy","catchError","require","config","module","DiffChange","originalStart","originalLength","modifiedStart","modifiedLength","getOriginalEnd","getModifiedEnd","numberHash","val","initialHashVal","stringHash","s","hashVal","leftRotate","bits","totalBits","delta","fill","dest","count","byteLength","toHexString","bufferOrValue","bitsize","from","Uint8Array","map","b","toString","padStart","join","char","leftPad","StringSHA1","_bigBlock32","DataView","_h0","_h1","_h2","_h3","_h4","_buff","BLOCK_SIZE","_buffDV","buffer","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","update","str","strLen","buff","charCode","offset","buffLen","leftoverHighSurrogate","codePoint","nextCharCode","UNICODE_REPLACEMENT","_push","_step","digest","_wrapUp","ml","setUint32","Math","floor","bigBlock32","j","getUint32","f","k","temp","a","c","d","LocalConstants","StringDiffSequence","source","getElements","characters","Int32Array","stringDiff","original","modified","pretty","LcsDiff","ComputeDiff","changes","Debug","Assert","condition","MyArray","Copy","sourceArray","sourceIndex","destinationArray","destinationIndex","Copy2","DiffChangeHelper","m_changes","m_originalStart","MAX_SAFE_SMALL_INTEGER","m_modifiedStart","m_originalCount","m_modifiedCount","MarkNextChange","AddOriginalElement","originalIndex","modifiedIndex","min","AddModifiedElement","getChanges","getReverseChanges","reverse","originalSequence","modifiedSequence","continueProcessingPredicate","ContinueProcessingPredicate","_originalSequence","_modifiedSequence","originalStringElements","originalElementsOrHash","originalHasStrings","_getElements","modifiedStringElements","modifiedElementsOrHash","modifiedHasStrings","_hasStrings","_originalStringElements","_originalElementsOrHash","_modifiedStringElements","_modifiedElementsOrHash","m_forwardHistory","m_reverseHistory","_isStringArray","arr","sequence","elements","hashes","ElementsAreEqual","newIndex","ElementsAreStrictEqual","_getStrictElement","getStrictElement","OriginalElementsAreEqual","index1","index2","ModifiedElementsAreEqual","_ComputeDiff","originalEnd","modifiedEnd","quitEarlyArr","ComputeDiffRecursive","PrettifyChanges","quitEarly","midOriginalArr","midModifiedArr","ComputeRecursionPoint","midOriginal","midModified","leftChanges","rightChanges","ConcatenateChanges","WALKTRACE","diagonalForwardBase","diagonalForwardStart","diagonalForwardEnd","diagonalForwardOffset","diagonalReverseBase","diagonalReverseStart","diagonalReverseEnd","diagonalReverseOffset","forwardPoints","reversePoints","deltaIsEven","forwardChanges","reverseChanges","changeHelper","diagonalMin","diagonalMax","diagonalRelative","lastOriginalIndex","MIN_SAFE_SMALL_INTEGER","historyIndex","diagonal","originalStartPoint","modifiedStartPoint","lastForwardChange","max","maxDifferences","numDiagonals","numDifferences","furthestOriginalIndex","furthestModifiedIndex","ClipDiagonalBound","tempOriginalIndex","abs","MaxDifferencesHistory","matchLengthOfLongest","change","originalStop","modifiedStop","checkOriginal","checkModified","startStrictEqual","mergedChangeArr","ChangesOverlap","prevChange","bestDelta","bestScore","_boundaryScore","score","aChange","bChange","matchedLength","aOriginalStart","bOriginalEnd","abOriginalLength","aModifiedStart","bModifiedEnd","abModifiedLength","t","_findBetterContiguousSequence","originalMatchStart","modifiedMatchStart","desiredLength","originalMax","modifiedMax","bestOriginalStart","bestModifiedStart","_contiguousSequenceScore","l","_OriginalIsBoundary","_OriginalRegionIsBoundary","_ModifiedIsBoundary","_ModifiedRegionIsBoundary","left","right","diagonalBaseIndex","diffEven","MarshalledId","safeProcess","vscodeGlobal","sandboxProcess","arch","cwd","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","ErrorInvalidArgType","expected","actual","determiner","super","code","validateString","platformIsWin32","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","lastIndexOf","sep","pathObject","validateObject","dir","root","base","ext","win32","pathSegments","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","last","firstPart","normalize","tail","joined","needsReplace","slashCount","firstLen","relative","to","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","toNamespacedPath","resolvedPath","dirname","end","matchedSlash","basename","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","bind","ret","delimiter","posix","posixCwd","regexp","cwd$1","trailingSeparator","hasRoot","_schemePattern","_singleSlashStart","_doubleSlashStart","_empty","_slash","_regexp","isUri","thing","authority","fragment","query","scheme","fsPath","with","schemeOrData","_strict","_schemeFix","_referenceResolution","_validateUri","uriToFsPath","Uri","exec","percentDecode","file","idx","substring","components","strict","joinPath","uri","pathFragment","newPath","skipEncoding","_asFormatted","toJSON","revive","_formatted","external","_fsPath","_sep","_pathSepMarker","$mid","encodeTable","Colon","Slash","QuestionMark","Hash","OpenSquareBracket","CloseSquareBracket","AtSign","ExclamationMark","DollarSign","Ampersand","SingleQuote","OpenParen","CloseParen","Asterisk","Plus","Comma","Semicolon","Equals","Space","encodeURIComponentFast","uriComponent","isPath","isAuthority","nativeEncodePos","pos","z","A","Z","Digit0","Digit9","Dash","Period","Underline","Tilde","encodeURIComponent","charAt","substr","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","fromCharCode","decodeURIComponentGraceful","decodeURIComponent","_rEncodedAsHex","DEFAULT_WORD_REGEXP","allowInWords","RegExp","createWordRegExp","ensureValidWordDefinition","wordDefinition","global","flags","ignoreCase","multiline","unicode","lastIndex","_defaultConfig","getWordAtText","column","text","textOffset","first","maxLen","t1","Date","now","prevRegexIndex","timeBudget","regexIndex","windowSize","thisMatch","_findRegexMatchEnclosingPosition","word","startColumn","endColumn","stopPos","matchIndex","unshift","State","Uint8Matrix","rows","cols","defaultValue","_data","row","col","StateMachine","edges","maxCharCode","maxState","Invalid","chCode","states","_states","_maxCharCode","nextState","currentState","_stateMachine","CharacterClass","_classifier","LinkComputer","_createLink","classifier","line","lineNumber","linkBeginIndex","linkEndIndex","lastIncludedCharIndex","CannotEndIn","charCodeBeforeLink","lastCharCodeInLink","OpenCurlyBrace","CloseCurlyBrace","range","startLineNumber","endLineNumber","url","computeLinks","model","stateMachine","Start","h","H","F","HT","T","HTT","p","HTTP","P","BeforeColon","S","AfterColon","FI","I","FIL","L","E","AlmostThere","End","getStateMachine","None","FORCE_TERMINATION_CHARACTERS","ForceTermination","CANNOT_END_WITH_CHARACTERS","getClassifier","lineCount","getLineCount","getLineContent","linkBeginChCode","state","hasOpenParens","hasOpenSquareBracket","inSquareBrackets","hasOpenCurlyBracket","resetStateMachine","Accept","chClass","DoubleQuote","BackTick","Pipe","BasicInplaceReplace","_defaultValueSet","INSTANCE","navigateValueSet","range1","text1","range2","text2","up","doNavigateValueSet","numberResult","numberReplace","textReplace","precision","pow","n1","Number","n2","parseFloat","isNaN","valueSetsReplace","valueSets","valueSetReplace","valueSet","KeyCode","ScanCode","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","define","keyCode","keyCodeToStr","strToKeyCode","Unknown","uiMap","userSettingsUSMap","userSettingsGeneralMap","EVENT_KEY_CODE_MAP","NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE","scanCodeIntToStr","scanCodeStrToInt","scanCodeLowerCaseStrToInt","IMMUTABLE_CODE_TO_KEY_CODE","IMMUTABLE_KEY_CODE_TO_CODE","MAX_VALUE","DependsOnKbLayout","KeyCodeUtils","KeyMod$1","empty","mappings","Hyper","Super","Fn","FnLock","Suspend","Resume","Turbo","Sleep","WakeUp","KeyA","KeyB","KeyC","KeyD","KeyE","KeyF","KeyG","KeyH","KeyI","KeyJ","KeyK","KeyL","KeyM","KeyN","KeyO","KeyP","KeyQ","KeyR","KeyS","KeyT","KeyU","KeyV","KeyW","KeyX","KeyY","KeyZ","Digit1","Digit2","Digit3","Digit4","Digit5","Digit6","Digit7","Digit8","Enter","Escape","Backspace","Tab","Minus","Equal","BracketLeft","BracketRight","Backslash","IntlHash","Quote","Backquote","CapsLock","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","PrintScreen","ScrollLock","Pause","PauseBreak","Insert","Home","PageUp","Delete","PageDown","ArrowRight","RightArrow","ArrowLeft","LeftArrow","ArrowDown","DownArrow","ArrowUp","UpArrow","NumLock","NumpadDivide","NumpadMultiply","NumpadSubtract","NumpadAdd","NumpadEnter","Numpad1","Numpad2","Numpad3","Numpad4","Numpad5","Numpad6","Numpad7","Numpad8","Numpad9","Numpad0","NumpadDecimal","IntlBackslash","ContextMenu","Power","NumpadEqual","F13","F14","F15","F16","F17","F18","F19","F20","F21","F22","F23","F24","Open","Help","Select","Again","Undo","Cut","Paste","Find","AudioVolumeMute","AudioVolumeUp","AudioVolumeDown","NumpadComma","NUMPAD_SEPARATOR","IntlRo","ABNT_C1","KanaMode","IntlYen","Convert","NonConvert","Lang1","Lang2","Lang3","Lang4","Lang5","Abort","Props","NumpadParenLeft","NumpadParenRight","NumpadBackspace","NumpadMemoryStore","NumpadMemoryRecall","NumpadMemoryClear","NumpadMemoryAdd","NumpadMemorySubtract","NumpadClear","Clear","NumpadClearEntry","Ctrl","Shift","Alt","Meta","ControlLeft","ShiftLeft","AltLeft","MetaLeft","ControlRight","ShiftRight","AltRight","MetaRight","BrightnessUp","BrightnessDown","MediaPlay","MediaRecord","MediaFastForward","MediaRewind","MediaTrackNext","MediaTrackPrevious","MediaStop","Eject","MediaPlayPause","MediaSelect","LaunchMediaPlayer","LaunchMail","LaunchApp2","LaunchApp1","SelectTask","LaunchScreenSaver","BrowserSearch","BrowserHome","BrowserBack","BrowserForward","BrowserStop","BrowserRefresh","BrowserFavorites","ZoomToggle","MailReply","MailForward","MailSend","KEY_IN_COMPOSITION","ABNT_C2","OEM_8","seenKeyCode","seenScanCode","mapping","immutable","scanCode","scanCodeStr","keyCodeStr","eventKeyCode","vkey","usUserSettingsLabel","generalUserSettingsLabel","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","toElectronAccelerator","KeyMod","_moduleId","HoverVerbosityAction","CompletionItemKind","CompletionItemKinds","CompletionItemTag","CompletionItemInsertTextRule","PartialAcceptTriggerKind","CompletionTriggerKind","InlineCompletionTriggerKind","CodeActionTriggerType","DocumentPasteTriggerKind","SignatureHelpTriggerKind","DocumentHighlightKind","SymbolKind","SymbolTag","SymbolKinds","NewSymbolNameTag","NewSymbolNameTriggerKind","Command","CommentThreadCollapsibleState","CommentThreadState","CommentThreadApplicability","CommentMode","InlayHintKind","ExternalUriOpenerPriority","InlineEditTriggerKind","AccessibilitySupport","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","EditorAutoIndentStrategy","EditorOption","EndOfLineSequence","GlyphMarginLane","IndentAction","InjectedTextCursorStops","MarkerSeverity","MarkerTag","MinimapPosition","MinimapSectionHeaderStyle","MouseTargetType","OverlayWidgetPositionPreference","OverviewRulerLane","PositionAffinity","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","SelectionDirection","ShowLightbulbIconMode","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","EndOfLinePreference","byKind","Method","symbolMethod","Function","symbolFunction","Constructor","symbolConstructor","Field","symbolField","Variable","symbolVariable","Class","symbolClass","Struct","symbolStruct","Interface","symbolInterface","Module","symbolModule","Property","symbolProperty","symbolEvent","Operator","symbolOperator","Unit","symbolUnit","Value","symbolValue","Enum","symbolEnum","Constant","symbolConstant","EnumMember","symbolEnumMember","Keyword","symbolKeyword","Snippet","symbolSnippet","Text","symbolText","Color","symbolColor","File","symbolFile","Reference","symbolReference","Customcolor","symbolCustomColor","Folder","symbolFolder","TypeParameter","symbolTypeParameter","User","account","Issue","issues","toIcon","kind","codicon","info","Boolean","Key","Namespace","Null","Package","symbolNamespace","symbolPackage","symbolString","symbolNumber","symbolBoolean","symbolArray","symbolObject","symbolKey","symbolNull","icon","FoldingRangeKind","Comment","Imports","Region","fromValue","is","title","CtrlCmd","WinCtrl","chord","secondPart","KeyChord","WordCharacterClass","ModelConstants","UnicodeHighlighterReasonKind","SimpleHighlightReason","isValidMatch","wordSeparators","textLength","matchStartIndex","matchLength","charBefore","Regular","CarriageReturn","LineFeed","firstCharInMatch","leftIsWordBounday","charAfter","lastCharInMatch","rightIsWordBounday","Searcher","searchRegex","_wordSeparators","_searchRegex","_prevMatchStartIndex","_prevMatchLength","reset","m","assertNever","items","predicate","UnicodeTextModelHighlighter","computeUnicodeHighlights","options","startLine","endLine","codePointHighlighter","CodePointHighlighter","candidates","getCandidateCodePoints","regex","codePoints","fromCodePoint","searcher","ranges","hasMore","ambiguousCharacterCount","invisibleCharacterCount","nonBasicAsciiCharacterCount","forLoop","lineContent","lineLength","startIndex","endIndex","charCodeBefore","highlightReason","shouldHighlightNonBasicASCII","Ambiguous","Invisible","NonBasicASCII","MAX_RESULT_LENGTH","computeUnicodeHighlightReason","codePointAt","primaryConfusable","ambiguousCharacters","getPrimaryConfusable","notAmbiguousInLocales","getLocales","filter","getInstance","Set","allowedLocales","isAmbiguous","confusableWith","NonBasicAscii","allowedCodePoints","nonBasicASCII","invisibleCharacters","cp","isAllowedInvisibleCharacter","add","getConfusableCodePoints","character","wordContext","hasBasicASCIICharacters","hasNonConfusableNonBasicAsciiCharacter","isBasicASCII$1","isInvisibleCharacter","LinesDiff","moves","hitTimeout","MovedText","lineRangeMapping","flip","OffsetRange","addRange","sortedRanges","endExclusive","tryCreate","ofLength","ofStartAndLength","isEmpty","deltaStart","deltaEnd","equals","other","containsRange","contains","intersect","intersects","intersectsOrTouches","isBefore","isAfter","clip","clipCyclic","forEach","LineRange","fromRange","fromRangeInclusive","subtract","endLineNumberExclusive","joinMany","lineRanges","LineRangeSet","getUnion","deserialize","lineRange","deltaLength","intersectsStrict","overlapOrTouch","toInclusiveRange","MAX_SAFE_INTEGER","toExclusiveRange","mapToLineArray","serialize","includes","toOffsetRange","_normalizedRanges","joinRangeStartIdx","joinRangeEndIdxExclusive","joinRange","rangeThatStartsBeforeEnd","i1","i2","current","lineRange1","lineRange2","subtractFrom","getIntersection","r1","r2","getWithDelta","zero","lengthDiffNonNegative","isLessThan","columnCount","betweenPositions","position1","position2","ofRange","getStartPosition","getEndPosition","ofText","isZero","isGreaterThan","isGreaterThanOrEqualTo","compare","createRange","startPosition","toRange","addToPosition","position","SingleTextEdit","second","equalsRange","toSingleEditOperation","LineRangeMapping","inverse","originalLineCount","modifiedLineCount","lastOriginalEndLineNumber","lastModifiedEndLineNumber","originalRange","modifiedRange","changedLineCount","toRangeMapping","origInclusiveRange","modInclusiveRange","RangeMapping","DetailedLineRangeMapping","fromRangeMappings","rangeMappings","innerChanges","withInnerChangesFromLineRanges","toTextEdit","newText","getValueOfRange","LegacyLinesDiffComputer","computeDiff","originalLines","modifiedLines","DiffComputer","maxComputationTime","maxComputationTimeMs","shouldIgnoreTrimWhitespace","ignoreTrimWhitespace","shouldComputeCharChanges","shouldMakePrettyDiff","shouldPostProcessCharChanges","lastChange","originalEndLineNumber","originalStartLineNumber","modifiedEndLineNumber","modifiedStartLineNumber","charChanges","originalStartColumn","originalEndColumn","modifiedStartColumn","modifiedEndColumn","pop","m1","m2","LineSequence","lines","startColumns","endColumns","getFirstNonBlankColumn","getLastNonBlankColumn","_startColumns","_endColumns","getStartLineNumber","getEndLineNumber","createCharSequence","charCodes","lineNumbers","columns","CharSequence","_charCodes","_lineNumbers","_columns","_assertIndex","getStartColumn","getEndColumn","CharChange","createFromDiffChange","diffChange","originalCharSequence","modifiedCharSequence","LineChange","createFromDiffResult","originalLineSequence","modifiedLineSequence","continueCharDiff","rawChanges","currChange","originalMatchingLength","modifiedMatchingLength","postProcessCharChanges","opts","continueLineDiff","createContinueProcessingPredicate","diffResult","lineChanges","originalLineIndex","modifiedLineIndex","nextChange","originalLine","modifiedLine","_pushTrimWhitespaceCharChange","originalMaxColumn","modifiedMaxColumn","originalLineNumber","modifiedLineNumber","_mergeTrimWhitespaceCharChange","txt","maximumRuntime","startTime","CharBoundaryCategory","DiffAlgorithmResult","trivial","seq1","seq2","SequenceDiff","trivialTimedOut","diffs","invert","sequenceDiffs","doc1Length","fromOffsetPairs","getEndExclusives","OffsetPair","getStarts","seq2Range","seq1Range","offset1","offset2","swap","InfiniteTimeout","instance","isValid","DateTimeout","timeout","valid","disable","Array2D","width","height","array","x","y","isSpace","LineRangeFragment","chrKeys","getKey","chr","size","histogram","counter","totalCount","computeSimilarity","sumDifferences","maxLength","DynamicProgrammingDiffing","compute","sequence1","sequence2","equalityScore","lcsLengths","directions","lengths","s1","s2","horizontalLen","verticalLen","extendedSeqScore","getElement","newValue","prevLen","lastAligningPosS1","lastAligningPosS2","reportDecreasingAligningPositions","MyersDiffAlgorithm","seqX","seqY","getXAfterSnake","V","FastInt32Array","FastArrayNegativeIndices","SnakePath","loop","lowerBound","upperBound","maxXofDLineTop","maxXofDLineLeft","newMaxX","lastPath","endX","endY","prev","positiveArr","negativeArr","LinesSliceCharSequence","considerWhitespaceChanges","firstCharOffsetByLine","additionalOffsetByLine","trimFirstLineFully","trimmedStartLine","trimStart","trimEnd","getText","getBoundaryScore","prevCategory","getCategory","nextCategory","LineBreakCR","LineBreakLF","WordLower","WordUpper","getCategoryBoundaryScore","translateOffset","translateRange","fromPositions","findWordContaining","isWordChar","countLinesIn","isStronglyEqual","extendToFullLines","WordNumber","Other","Separator","category","areLinesSimilar","line1","line2","trim","commonNonSpaceCharCount","inverted","longerLineLength","countNonWsChars","optimizeSequenceDiffs","joinSequenceDiffsByShifting","prevDiff","diff","nextDiff","seq1ValidRange","seq2ValidRange","shiftDiffToBetterPosition","shiftSequenceDiffs","prevResult","cur","result2","nextResult","deltaBefore","deltaAfter","seq2OffsetStart","seq2OffsetEndExclusive","seq1Offset","trimmedHash","getIndentation","DefaultLinesDiffComputer","dynamicProgrammingDiffing","myersDiffingAlgorithm","perfectHashes","getOrCreateHash","originalLinesHashes","modifiedLinesHashes","lineAlignmentResult","log","lineAlignments","_sequence2","shouldRepeat","lastResult","shouldJoinDiffs","before","after","unchangedRange","removeVeryShortMatchingLinesBetweenDiffs","alignments","scanForWhitespaceChanges","equalLinesCount","seq1LastStart","seq2Offset","seq2LastStart","characterDiffs","refineDiff","lineRangeMappingFromRangeMappings","computeMoves","validatePosition","validateRange","ic","hashedOriginalLines","hashedModifiedLines","excludedChanges","deletions","insertions","deletion","best","highestSimilarity","insertion","similarity","computeMovesFromSimpleDeletionsToSimpleInsertions","unchangedMoves","original3LineHashes","possibleMappings","sort","lastMappings","currentModifiedRange","nextMappings","lastMapping","originalLineRange","modifiedLineRange","modifiedSet","originalSet","diffOrigToMod","modifiedSections","originalTranslatedSections","modifiedIntersectedSections","monotonousChanges","move","firstTouchingChangeOrig","findLastMonotonous","firstTouchingChangeMod","linesAbove","lastTouchingChangeOrig","lastTouchingChangeMod","linesBelow","extendToTop","extendToBottom","origLine","modLine","computeUnchangedMoves","originalDist","modifiedDist","joinCloseConsecutiveMoves","countWhere","changesMonotonous","removeMovesInSameDiff","computeMovedLines","slice1","slice2","equalMappings","additional","lastPoint","scanWord","pair","equalMapping","w1","w2","w","equalPart","equalChars1","equalChars2","v1","v2","v","shift","sequenceDiffs1","sequenceDiffs2","sd1","sd2","mergeSequenceDiffs","extendDiffsToEntireWordIfAppropriate","removeShortMatches","unchangedText","split","beforeLineCount1","beforeSeq1Length","beforeLineCount2","beforeSeq2Length","afterLineCount1","afterSeq1Length","afterLineCount2","afterSeq2Length","cap","newDiffs","newDiff","shouldMarkAsChanged","fullRange1","prefix","suffix","availableSpace","removeVeryShortMatchingTextBetweenLongDiffs","dontAssertStartLine","g","rangeMapping","lineStartDelta","lineEndDelta","getLineRangeMapping","a1","a2","linesDiffComputers","roundFloat","number","decimalPoints","decimal","round","RGBA","_rgbaBrand","HSLA","_hslaBrand","fromRGBA","rgba","chroma","_hue2rgb","q","toRGBA","hsla","HSVA","_hsvaBrand","cmax","hsva","fromHex","hex","Format","CSS","parseHex","red","_hsla","_hsva","getRelativeLuminance","_relativeLuminanceForComponent","color","getContrastRatio","another","lum1","lum2","isDarker","isLighter","isLighterThan","isDarkerThan","lighten","factor","darken","transparent","isTransparent","isOpaque","opposite","blend","thisA","colorA","makeOpaque","opaqueBackground","flatten","backgrounds","background","reduceRight","accumulator","_flatten","foreground","backgroundAlpha","_toString","getLighterColor","of","getDarkerColor","white","black","blue","green","cyan","lightgrey","_parseCaptureGroups","captureGroups","values","captureGroup","parsedNumber","_toIColor","alpha","_findRange","positionAt","_findHexColorInformation","hexValue","parsedHexColor","_findRGBColorInformation","matches","isAlpha","parsedRegex","_findHSLColorInformation","colorEquivalent","_findMatches","matchAll","findMatches","_toTwoDigitHex","n","_parseHexDigit","B","C","D","formatRGB","formatRGBA","toFixed","formatHSL","formatHSLA","formatHex","formatHexA","compact","markRegex","trimDashesRegex","addMarkHeaderIfFound","sectionHeaders","indices","sectionHeader","getHeaderText","shouldBeInComments","hasSeparatorLine","startsWith","MirrorModel","_uri","eol","_eol","getValue","_lines","offsetToAdd","offsetAt","iteratorOverMatches","getLinesContent","getWordAtPosition","wordAtText","getWordUntilPosition","wordAtPosition","words","wordenize","_wordenize","lineText","wordRangesIdx","wordRanges","Symbol","iterator","getLineWords","content","getValueInRange","_validateRange","lineEnding","startLineIndex","endLineIndex","resultLines","_validatePosition","_ensureLineStarts","_lineStarts","getPrefixSum","getIndexOf","remainder","isIPosition","hasChanged","maxCharacter","EditorSimpleWorker","host","foreignModuleFactory","_host","_models","_foreignModuleFactory","_foreignModule","_getModel","_getModels","all","keys","acceptNewModel","EOL","versionId","acceptModelChanged","strURL","onEvents","acceptRemovedModel","findSectionHeaders","headers","findRegionSectionHeaders","foldingRules","markers","regionHeaders","collectRegionHeaders","findMarkSectionHeaders","markHeaders","collectMarkHeaders","originalUrl","modifiedUrl","algorithm","originalTextModel","modifiedTextModel","diffAlgorithm","getLineChanges","identical","_modelsAreIdentical","computeDirtyDiff","_diffLimit","computeMoreMinimalEdits","modelUrl","edits","lastEol","compareRangesUsingStarts","writeIndex","readIndex","editOffset","lift","newEdit","computeHumanReadableDiff","addPositions","pos1","pos2","computeDefaultDocumentColors","initialValidationMatches","initialMatch","initialCaptureGroups","colorScheme","colorParameters","colorInformation","regexParameters","computeColors","_suggestionsLimit","textualSuggest","modelUrls","leadingWord","wordDef","wordDefFlags","sw","wordDefRegExp","seen","outer","duration","elapsed","computeWordRanges","selectionText","wordRange","loadForeignModule","createData","foreignHostMethods","foreignHost","createProxyObject","fhr","ctx","getMirrorModels","fmr","monaco","editor","languages","CancellationTokenSource","Emitter","Position","Range","Selection","Token","_tokenBrand","simpleWorker","CompareResult","one","itemEquals","groupAdjacentBy","shouldBeGrouped","currentGroup","item","forEachAdjacent","forEachWithNeighbors","pushMany","compareBy","selector","comparator","isLessThanOrEqual","isNeitherLessOrGreaterThan","greaterThan","lessThan","neitherLessOrGreaterThan","numberComparator","reverseOrder","CallbackIterable","_callback","iterate","toArray","cb","mapFn","some","findFirst","findLast","findLastMaxBy","findLastIdxMonotonous","startIdx","endIdxEx","findFirstMonotonous","findFirstIdxMonotonousOrArrLen","MonotonousArray","assertInvariants","_array","_findLastMonotonousLastIdx","_prevFindLastPredicate","shortcutEvent","freeze","context","handle","setTimeout","clearTimeout","CancellationToken","isCancellationToken","Cancelled","MutableToken","isCancellationRequested","onCancellationRequested","_isCancelled","_emitter","cancel","parent","_token","_parentListener","token","CharCode","_codiconFontCharacters","register","fontCharacter","groupBy","groupFn","element","target","SetWithKey","toStringTag","toKey","_map","_a","entries","entry","clear","callbackfn","thisArg","errorHandler","listeners","unexpectedErrorHandler","ErrorNoTelemetry","isErrorNoTelemetry","addListener","listener","_removeListener","emit","setUnexpectedErrorHandler","newUnexpectedErrorHandler","getUnexpectedErrorHandler","onUnexpectedError","onUnexpectedExternalError","CancellationError","canceledName","transformErrorForSerialization","stacktrace","noTelemetry","TypeError","fromError","BugIndicatingError","setPrototypeOf","once","thisArgs","disposables","didFire","snapshot","debounce","merge","delay","leading","flushOnListenerRemove","leakWarningThreshold","subscription","output","doFire","numDebouncedCalls","_output","queueMicrotask","onWillRemoveListener","defer","each","signal","any","events","store","reduce","initial","accumulate","latch","cache","firstCall","shouldEmit","isT","flushAfterTimeout","_buffer","flush","onDidAddFirstListener","chain","sythensize","cs","ChainableSynthesis","evaluate","HaltChainable","steps","fn","step","fromNodeEventEmitter","on","removeListener","fromDOMEventEmitter","removeEventListener","toPromise","fromPromise","promise","finally","runAndSubscribe","EmitterObserver","_observable","_counter","_hasChanged","addObserver","removeObserver","beginUpdate","handlePossibleChange","handleChange","_change","endUpdate","reportChanges","fromObservable","obs","fromObservableLight","observable","didChange","observer","isArray","EventProfiling","_idPool","listenerCount","invocationCount","elapsedOverall","durations","_stopWatch","stop","LeakageMonitor","_errorHandler","threshold","_warnCountdown","_stacks","check","topStack","topCount","getMostFrequentStack","ListenerLeakError","Stacktrace","print","ListenerRefusalError","UniqueContainer","_size","_options","_leakageMon","onListenerError","_perfMon","_profName","_deliveryQueue","deliveryQueue","_disposed","_listeners","_event","tuple","contained","removeMonitor","ceil","EventDeliveryQueuePrivate","stringify","adjustDeliveryQueue","_deliver","_deliverQueue","dq","enqueue","hasListeners","Iterable","single","wrap","iterableOrElement","iterable","done","find","flatMap","iterables","reducer","initialValue","consume","atMost","POSITIVE_INFINITY","consumed","asyncToArray","async","disposableTracker","DisposableTracker","livingDisposables","getDisposableData","isSingleton","trackDisposable","setParent","child","markAsDisposed","markAsSingleton","getRootParent","cacheValue","getTrackedDisposables","rootParentCache","computeLeakingDisposables","maxReported","preComputedLeaks","uncoveredLeakingObjs","leakingObjects","leakingObjsSet","o","getStackTracePath","leaking","linesToRemove","removePrefix","stackTraceStarts","stackTracePath","stackTraceFormattedLines","prevStarts","continuations","cont","leaks","details","setParentOfDisposable","errors","AggregateError","combinedDisposable","toDisposable","children","setParentOfDisposables","self","DisposableStore","DISABLE_DISPOSED_WARNING","_toDispose","_isDisposed","isDisposed","deleteAndLeak","Disposable","_store","_register","_c","Touch","ResourceMapEntry","ResourceMap","defaultToKey","resource","isEntries","clb","_","LinkedMap","_head","_tail","_state","touch","previous","addItemLast","AsOld","addItemFirst","AsNew","remove","removeItem","trimOld","newSize","currentSize","trimNew","fromJSON","Cache","limit","ratio","_limit","_ratio","checkTrim","peek","LRUCache","SetMap","escapeRegExpCharacters","splitLines","firstNonWhitespaceIndex","lastNonWhitespaceIndex","isUpperAsciiLetter","isHighSurrogate","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","IS_BASIC_ASCII","isBasicASCII","GraphemeBreakType","CodePoint","UTF8_BOM","GraphemeBreakTree","_INSTANCE","getGraphemeBreakType","LF","CR","Control","nodeCount","nodeIndex","AmbiguousCharacters","ambiguousCharacterData","getCacheKey","locales","arrayToMap","intersectMaps","map1","map2","languageSpecificMap","filteredLocales","mergeMaps","_locales","confusableDictionary","containsAmbiguousCharacter","InvisibleCharacters","getRawData","getData","containsInvisibleCharacter","isString","Constants","toUint8","MAX_UINT_8","toUint32","MAX_UINT_32","LanguageId","FontStyle","ColorId","StandardTokenType","MetadataConsts","__webpack_module_cache__","__webpack_require__","cachedModule","exports","__webpack_modules__","__webpack_exports__","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","every","definition","defineProperty","enumerable","chunkId","promises","u","scriptUrl","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","moreModules","runtime"],"sourceRoot":""}